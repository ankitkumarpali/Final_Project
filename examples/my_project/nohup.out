Traceback (most recent call last):
  File "launcher.py", line 110, in <module>
    main(_run_experiment)
  File "launcher.py", line 105, in main
    launcher.join()
  File "/data/home/ankitkumar15/CrypTen/examples/multiprocess_launcher.py", line 72, in join
    process.join()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/usr/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/usr/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
KeyboardInterrupt
['/data/home/ankitkumar15/CrypTen/examples/my_project', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/data/home/ankitkumar15/.local/lib/python3.8/site-packages', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/opt/carla-simulator/PythonAPI/carla/dist/carla-0.9.13-py3.7-linux-x86_64.egg', '/opt/carla-simulator/PythonAPI/carla', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen']
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx <crypten.communicator.distributed_communicator.DistributedCommunicator object at 0x7f864fac7550>
0 2
<crypten.communicator.distributed_communicator.DistributedCommunicator object at 0x7f864fac7550>
['/data/home/ankitkumar15/CrypTen/examples/my_project', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/data/home/ankitkumar15/.local/lib/python3.8/site-packages', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/opt/carla-simulator/PythonAPI/carla/dist/carla-0.9.13-py3.7-linux-x86_64.egg', '/opt/carla-simulator/PythonAPI/carla', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen']
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
/data/home/ankitkumar15/CrypTen/crypten/__init__.py:65: RuntimeWarning: CrypTen is already initialized.
  warnings.warn("CrypTen is already initialized.", RuntimeWarning)
/data/home/ankitkumar15/CrypTen/crypten/nn/onnx_converter.py:184: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:199.)
  param = torch.from_numpy(numpy_helper.to_array(node))
Process process 0:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/data/home/ankitkumar15/CrypTen/examples/multiprocess_launcher.py", line 64, in _run_process
    run_process_fn(fn_args)
  File "/data/home/ankitkumar15/CrypTen/examples/my_project/launcher.py", line 96, in _run_experiment
    run_stan()
  File "/data/home/ankitkumar15/CrypTen/examples/my_project/stan.py", line 512, in run_stan
    train(x_combined_enc, label, model)
  File "/data/home/ankitkumar15/CrypTen/examples/my_project/stan.py", line 536, in train
    predicted = model(x)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 50, in __call__
    return self.forward(*args, **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 532, in forward_function
    return object.__getattribute__(self, name)(*tuple(args), **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 714, in forward
    output = module(input)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 50, in __call__
    return self.forward(*args, **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 532, in forward_function
    return object.__getattribute__(self, name)(*tuple(args), **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 2610, in forward
    return x.max_pool3d(*args, **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/cryptensor.py", line 351, in autograd_forward
    result = grad_fn.forward(ctx, *args, **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/gradients.py", line 1543, in forward
    output, indices = input.max_pool3d(
  File "/data/home/ankitkumar15/CrypTen/crypten/common/functions/pooling.py", line 83, in max_pool3d
    max_vals, argmax_vals = max_input.max(dim=-1, one_hot=True)
  File "/data/home/ankitkumar15/CrypTen/crypten/common/functions/maximum.py", line 65, in max
    argmax_result, max_result = _argmax_helper(
  File "/data/home/ankitkumar15/CrypTen/crypten/common/functions/maximum.py", line 300, in _argmax_helper
    result_args, result_val = _argmax_helper_all_tree_reductions(
  File "/data/home/ankitkumar15/CrypTen/crypten/common/functions/maximum.py", line 273, in _argmax_helper_all_tree_reductions
    enc_one_hot_vec = enc_tensor.eq(enc_max_vec_orig)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/mpc.py", line 247, in eq
    return (self - y)._eqz_2PC()
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/mpc.py", line 267, in _eqz_2PC
    x0._tensor = x0._tensor.eq(x1._tensor)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/binary.py", line 300, in eq
    return circuit.eq(self, y)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/circuit.py", line 136, in eq
    P = __P_circuit(bitwise_equal)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/circuit.py", line 103, in __P_circuit
    P &= P << shift  # using lshift since rshift was modified to arithmetic
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/binary.py", line 241, in __iand__
    self.share.set_(beaver.AND(self, y).share.data)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/beaver.py", line 199, in AND
    return (b & epsilon) ^ (a & delta) ^ (epsilon & delta) ^ c
KeyboardInterrupt
['/data/home/ankitkumar15/CrypTen/examples/my_project', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/data/home/ankitkumar15/.local/lib/python3.8/site-packages', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/opt/carla-simulator/PythonAPI/carla/dist/carla-0.9.13-py3.7-linux-x86_64.egg', '/opt/carla-simulator/PythonAPI/carla', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen']
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx <crypten.communicator.distributed_communicator.DistributedCommunicator object at 0x7f4c7aa635b0>
['/data/home/ankitkumar15/CrypTen/examples/my_project', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/data/home/ankitkumar15/.local/lib/python3.8/site-packages', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/opt/carla-simulator/PythonAPI/carla/dist/carla-0.9.13-py3.7-linux-x86_64.egg', '/opt/carla-simulator/PythonAPI/carla', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen']
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
/data/home/ankitkumar15/CrypTen/crypten/__init__.py:65: RuntimeWarning: CrypTen is already initialized.
  warnings.warn("CrypTen is already initialized.", RuntimeWarning)
/data/home/ankitkumar15/CrypTen/crypten/nn/onnx_converter.py:184: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:199.)
  param = torch.from_numpy(numpy_helper.to_array(node))
Process process 1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/data/home/ankitkumar15/CrypTen/examples/multiprocess_launcher.py", line 64, in _run_process
    run_process_fn(fn_args)
  File "/data/home/ankitkumar15/CrypTen/examples/my_project/launcher.py", line 96, in _run_experiment
    run_stan()
  File "/data/home/ankitkumar15/CrypTen/examples/my_project/stan.py", line 512, in run_stan
    train(x_combined_enc, label, model)
  File "/data/home/ankitkumar15/CrypTen/examples/my_project/stan.py", line 536, in train
    predicted = model(x)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 50, in __call__
    return self.forward(*args, **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 532, in forward_function
    return object.__getattribute__(self, name)(*tuple(args), **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 714, in forward
    output = module(input)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 50, in __call__
    return self.forward(*args, **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 532, in forward_function
    return object.__getattribute__(self, name)(*tuple(args), **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/nn/module.py", line 2610, in forward
    return x.max_pool3d(*args, **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/cryptensor.py", line 351, in autograd_forward
    result = grad_fn.forward(ctx, *args, **kwargs)
  File "/data/home/ankitkumar15/CrypTen/crypten/gradients.py", line 1543, in forward
    output, indices = input.max_pool3d(
  File "/data/home/ankitkumar15/CrypTen/crypten/common/functions/pooling.py", line 83, in max_pool3d
    max_vals, argmax_vals = max_input.max(dim=-1, one_hot=True)
  File "/data/home/ankitkumar15/CrypTen/crypten/common/functions/maximum.py", line 65, in max
    argmax_result, max_result = _argmax_helper(
  File "/data/home/ankitkumar15/CrypTen/crypten/common/functions/maximum.py", line 300, in _argmax_helper
    result_args, result_val = _argmax_helper_all_tree_reductions(
  File "/data/home/ankitkumar15/CrypTen/crypten/common/functions/maximum.py", line 273, in _argmax_helper_all_tree_reductions
    enc_one_hot_vec = enc_tensor.eq(enc_max_vec_orig)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/mpc.py", line 247, in eq
    return (self - y)._eqz_2PC()
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/mpc.py", line 267, in _eqz_2PC
    x0._tensor = x0._tensor.eq(x1._tensor)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/binary.py", line 300, in eq
    return circuit.eq(self, y)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/circuit.py", line 136, in eq
    P = __P_circuit(bitwise_equal)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/circuit.py", line 103, in __P_circuit
    P &= P << shift  # using lshift since rshift was modified to arithmetic
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/binary.py", line 241, in __iand__
    self.share.set_(beaver.AND(self, y).share.data)
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/beaver.py", line 199, in AND
    return (b & epsilon) ^ (a & delta) ^ (epsilon & delta) ^ c
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/binary.py", line 227, in __xor__
    result = self.clone()
  File "/data/home/ankitkumar15/CrypTen/crypten/mpc/primitives/binary.py", line 195, in clone
    result._tensor = self._tensor.clone()
KeyboardInterrupt
2023-05-16 14:39:10.133027: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
['/data/home/ankitkumar15/CrypTen/examples/my_project', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/data/home/ankitkumar15/.local/lib/python3.8/site-packages', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/opt/carla-simulator/PythonAPI/carla/dist/carla-0.9.13-py3.7-linux-x86_64.egg', '/opt/carla-simulator/PythonAPI/carla', '/data/home/ankitkumar15/CrypTen']
2023-05-16 14:39:14.797238: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
2023-05-16 14:39:14.955045: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
INFO:root:((((((((((((((((((((((((((((((((((((((((((((((((((((
INFO:root:==================
INFO:root:DistributedCommunicator with rank 1
INFO:root:==================
INFO:root:((((((((((((((((((((((((((((((((((((((((((((((((((((
INFO:root:==================
INFO:root:DistributedCommunicator with rank 0
INFO:root:==================
INFO:torch.distributed.distributed_c10d:Added key: store_based_barrier_key:1 to store for rank: 1
INFO:torch.distributed.distributed_c10d:Added key: store_based_barrier_key:1 to store for rank: 0
INFO:torch.distributed.distributed_c10d:Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
INFO:torch.distributed.distributed_c10d:Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
INFO:torch.distributed.distributed_c10d:Added key: store_based_barrier_key:2 to store for rank: 0
INFO:torch.distributed.distributed_c10d:Added key: store_based_barrier_key:2 to store for rank: 1
INFO:torch.distributed.distributed_c10d:Rank 0: Completed store-based barrier for key:store_based_barrier_key:2 with 2 nodes.
INFO:torch.distributed.distributed_c10d:Rank 1: Completed store-based barrier for key:store_based_barrier_key:2 with 2 nodes.
INFO:torch.distributed.distributed_c10d:Added key: store_based_barrier_key:3 to store for rank: 1
INFO:torch.distributed.distributed_c10d:Added key: store_based_barrier_key:3 to store for rank: 0
INFO:torch.distributed.distributed_c10d:Rank 0: Completed store-based barrier for key:store_based_barrier_key:3 with 2 nodes.
INFO:torch.distributed.distributed_c10d:Rank 1: Completed store-based barrier for key:store_based_barrier_key:3 with 2 nodes.
INFO:torch.distributed.distributed_c10d:Added key: store_based_barrier_key:4 to store for rank: 0
INFO:torch.distributed.distributed_c10d:Added key: store_based_barrier_key:4 to store for rank: 1
INFO:torch.distributed.distributed_c10d:Rank 0: Completed store-based barrier for key:store_based_barrier_key:4 with 2 nodes.
INFO:torch.distributed.distributed_c10d:Rank 1: Completed store-based barrier for key:store_based_barrier_key:4 with 2 nodes.
INFO:root:Worlds size = 2
INFO:root:Worlds size = 2
INFO:root:((((((((((((((((((((((((((((((((((((((((((((((((((((
Exported graph: graph(%input : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=0, device=cpu),
      %temporal_model.W : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu),
      %temporal_model.fc1.weight : Float(1, 240, strides=[240, 1], requires_grad=1, device=cpu),
      %temporal_model.fc1.bias : Float(1, strides=[1], requires_grad=1, device=cpu),
      %specto_model.W : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu),
      %specto_model.fc1.weight : Float(1, 20, strides=[20, 1], requires_grad=1, device=cpu),
      %specto_model.fc1.bias : Float(1, strides=[1], requires_grad=1, device=cpu),
      %convolution.conv1.weight : Float(16, 1, 2, 2, 2, strides=[8, 8, 4, 2, 1], requires_grad=1, device=cpu),
      %convolution.conv1.bias : Float(16, strides=[1], requires_grad=1, device=cpu),
      %convolution.fc1.weight : Float(128, 11712, strides=[11712, 1], requires_grad=1, device=cpu),
      %convolution.fc1.bias : Float(128, strides=[1], requires_grad=1, device=cpu),
      %convolution.fc2.weight : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu),
      %convolution.fc2.bias : Float(1, strides=[1], requires_grad=1, device=cpu)):
  %/temporal_model/Constant_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1   10  240 [ CPULongType{3} ], onnx_name="/temporal_model/Constant"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:213:0
  %/temporal_model/Reshape_output_0 : Float(1, 10, 240, strides=[2400, 240, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape"](%temporal_model.W, %/temporal_model/Constant_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:213:0
  %/temporal_model/Constant_1_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1   10  240 [ CPULongType{3} ], onnx_name="/temporal_model/Constant_1"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:214:0
  %/temporal_model/Reshape_1_output_0 : Float(1, 10, 240, strides=[2400, 240, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_1"](%input, %/temporal_model/Constant_1_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:214:0
  %/temporal_model/fc1/Transpose_output_0 : Float(240, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/fc1/Transpose"](%temporal_model.fc1.weight), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1/MatMul_output_0 : Float(1, 10, 1, strides=[10, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/temporal_model/fc1/MatMul"](%/temporal_model/Reshape_output_0, %/temporal_model/fc1/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1/Add_output_0 : Float(1, 10, 1, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/temporal_model/fc1/Add"](%temporal_model.fc1.bias, %/temporal_model/fc1/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/Transpose_output_0 : Float(240, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/fc1_1/Transpose"](%temporal_model.fc1.weight), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/MatMul_output_0 : Float(1, 10, 1, strides=[10, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/temporal_model/fc1_1/MatMul"](%/temporal_model/Reshape_1_output_0, %/temporal_model/fc1_1/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/Add_output_0 : Float(1, 10, 1, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/temporal_model/fc1_1/Add"](%temporal_model.fc1.bias, %/temporal_model/fc1_1/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/Transpose_output_0 : Float(1, 1, 10, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/temporal_model/Transpose"](%/temporal_model/fc1_1/Add_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:220:0
  %/temporal_model/MatMul_output_0 : Float(1, 10, 10, strides=[100, 10, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/temporal_model/MatMul"](%/temporal_model/fc1/Add_output_0, %/temporal_model/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:220:0
  %/temporal_model/Softmax_output_0 : Float(1, 10, 10, strides=[100, 10, 1], requires_grad=1, device=cpu) = onnx::Softmax[axis=1, onnx_name="/temporal_model/Softmax"](%/temporal_model/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1841:0
  %/temporal_model/Constant_2_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=  10  240 [ CPULongType{2} ], onnx_name="/temporal_model/Constant_2"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:224:0
  %/temporal_model/Reshape_2_output_0 : Float(10, 240, strides=[240, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_2"](%input, %/temporal_model/Constant_2_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:224:0
  %/temporal_model/Transpose_1_output_0 : Float(240, 10, strides=[1, 240], requires_grad=0, device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/Transpose_1"](%/temporal_model/Reshape_2_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:225:0
  %/temporal_model/MatMul_1_output_0 : Float(1, 240, 10, strides=[2400, 10, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/temporal_model/MatMul_1"](%/temporal_model/Transpose_1_output_0, %/temporal_model/Softmax_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:227:0
  %/temporal_model/Constant_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=  10  120    2 [ CPULongType{3} ], onnx_name="/temporal_model/Constant_3"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:228:0
  %/temporal_model/Reshape_3_output_0 : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_3"](%/temporal_model/MatMul_1_output_0, %/temporal_model/Constant_3_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:228:0
  %/specto_model/Constant_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1  120   20 [ CPULongType{3} ], onnx_name="/specto_model/Constant"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:288:0
  %/specto_model/Reshape_output_0 : Float(1, 120, 20, strides=[2400, 20, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape"](%specto_model.W, %/specto_model/Constant_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:288:0
  %/specto_model/Constant_1_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1  120   20 [ CPULongType{3} ], onnx_name="/specto_model/Constant_1"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:289:0
  %/specto_model/Reshape_1_output_0 : Float(1, 120, 20, strides=[2400, 20, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_1"](%/temporal_model/Reshape_3_output_0, %/specto_model/Constant_1_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:289:0
  %/specto_model/fc1/Transpose_output_0 : Float(20, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/specto_model/fc1/Transpose"](%specto_model.fc1.weight), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1/MatMul_output_0 : Float(1, 120, 1, strides=[120, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/specto_model/fc1/MatMul"](%/specto_model/Reshape_output_0, %/specto_model/fc1/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1/Add_output_0 : Float(1, 120, 1, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/specto_model/fc1/Add"](%specto_model.fc1.bias, %/specto_model/fc1/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/Transpose_output_0 : Float(20, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/specto_model/fc1_1/Transpose"](%specto_model.fc1.weight), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/MatMul_output_0 : Float(1, 120, 1, strides=[120, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/specto_model/fc1_1/MatMul"](%/specto_model/Reshape_1_output_0, %/specto_model/fc1_1/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/Add_output_0 : Float(1, 120, 1, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/specto_model/fc1_1/Add"](%specto_model.fc1.bias, %/specto_model/fc1_1/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/Transpose_output_0 : Float(1, 1, 120, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/specto_model/Transpose"](%/specto_model/fc1_1/Add_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:295:0
  %/specto_model/MatMul_output_0 : Float(1, 120, 120, strides=[14400, 120, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/specto_model/MatMul"](%/specto_model/fc1/Add_output_0, %/specto_model/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:295:0
  %/specto_model/Softmax_output_0 : Float(1, 120, 120, strides=[14400, 120, 1], requires_grad=1, device=cpu) = onnx::Softmax[axis=1, onnx_name="/specto_model/Softmax"](%/specto_model/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1841:0
  %/specto_model/Constant_2_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=  20  120 [ CPULongType{2} ], onnx_name="/specto_model/Constant_2"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:299:0
  %/specto_model/Reshape_2_output_0 : Float(20, 120, strides=[120, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_2"](%/temporal_model/Reshape_3_output_0, %/specto_model/Constant_2_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:299:0
  %/specto_model/MatMul_1_output_0 : Float(1, 20, 120, strides=[2400, 120, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/specto_model/MatMul_1"](%/specto_model/Reshape_2_output_0, %/specto_model/Softmax_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:302:0
  %/specto_model/Constant_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=  10  120    2 [ CPULongType{3} ], onnx_name="/specto_model/Constant_3"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:303:0
  %/specto_model/Reshape_3_output_0 : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_3"](%/specto_model/MatMul_1_output_0, %/specto_model/Constant_3_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:303:0
  %/convolution/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/convolution/Constant"](), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:346:0
  %/convolution/Unsqueeze_output_0 : Float(1, 10, 120, 2, strides=[2400, 240, 2, 1], requires_grad=1, device=cpu) = onnx::Unsqueeze[onnx_name="/convolution/Unsqueeze"](%/specto_model/Reshape_3_output_0, %/convolution/Constant_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:346:0
  %/convolution/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/convolution/Constant_1"](), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:347:0
  %/convolution/Unsqueeze_1_output_0 : Float(1, 1, 10, 120, 2, strides=[2400, 2400, 240, 2, 1], requires_grad=1, device=cpu) = onnx::Unsqueeze[onnx_name="/convolution/Unsqueeze_1"](%/convolution/Unsqueeze_output_0, %/convolution/Constant_1_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:347:0
  %/convolution/conv1/Conv_output_0 : Float(1, 16, 13, 123, 5, strides=[127920, 7995, 615, 5, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1, 1], group=1, kernel_shape=[2, 2, 2], pads=[2, 2, 2, 2, 2, 2], strides=[1, 1, 1], onnx_name="/convolution/conv1/Conv"](%/convolution/Unsqueeze_1_output_0, %convolution.conv1.weight, %convolution.conv1.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.conv.Conv3d::conv1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/conv.py:608:0
  %/convolution/pool/MaxPool_output_0 : Float(1, 16, 6, 61, 2, strides=[11712, 732, 122, 2, 1], requires_grad=1, device=cpu) = onnx::MaxPool[ceil_mode=0, kernel_shape=[2, 2, 2], pads=[0, 0, 0, 0, 0, 0], strides=[2, 2, 2], onnx_name="/convolution/pool/MaxPool"](%/convolution/conv1/Conv_output_0), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.pooling.MaxPool3d::pool # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:868:0
  %/convolution/Flatten_output_0 : Float(1, 11712, strides=[11712, 1], requires_grad=1, device=cpu) = onnx::Flatten[axis=1, onnx_name="/convolution/Flatten"](%/convolution/pool/MaxPool_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:355:0
  %/convolution/fc1/Gemm_output_0 : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu) = onnx::Gemm[alpha=1., beta=1., transB=1, onnx_name="/convolution/fc1/Gemm"](%/convolution/Flatten_output_0, %convolution.fc1.weight, %convolution.fc1.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/convolution/Relu_output_0 : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/convolution/Relu"](%/convolution/fc1/Gemm_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1457:0
  %/convolution/fc2/Gemm_output_0 : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Gemm[alpha=1., beta=1., transB=1, onnx_name="/convolution/fc2/Gemm"](%/convolution/Relu_output_0, %convolution.fc2.weight, %convolution.fc2.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.linear.Linear::fc2 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/convolution/Relu_1_output_0 : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/convolution/Relu_1"](%/convolution/fc2/Gemm_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1457:0
  %output : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/convolution/Sigmoid"](%/convolution/Relu_1_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:364:0
  return (%output)

Exported graph: graph(%input : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=0, device=cpu),
      %temporal_model.W : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu),
      %temporal_model.fc1.weight : Float(1, 240, strides=[240, 1], requires_grad=1, device=cpu),
      %temporal_model.fc1.bias : Float(1, strides=[1], requires_grad=1, device=cpu),
      %specto_model.W : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu),
      %specto_model.fc1.weight : Float(1, 20, strides=[20, 1], requires_grad=1, device=cpu),
      %specto_model.fc1.bias : Float(1, strides=[1], requires_grad=1, device=cpu),
      %convolution.conv1.weight : Float(16, 1, 2, 2, 2, strides=[8, 8, 4, 2, 1], requires_grad=1, device=cpu),
      %convolution.conv1.bias : Float(16, strides=[1], requires_grad=1, device=cpu),
      %convolution.fc1.weight : Float(128, 11712, strides=[11712, 1], requires_grad=1, device=cpu),
      %convolution.fc1.bias : Float(128, strides=[1], requires_grad=1, device=cpu),
      %convolution.fc2.weight : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu),
      %convolution.fc2.bias : Float(1, strides=[1], requires_grad=1, device=cpu)):
  %/temporal_model/Constant_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1   10  240 [ CPULongType{3} ], onnx_name="/temporal_model/Constant"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:213:0
  %/temporal_model/Reshape_output_0 : Float(1, 10, 240, strides=[2400, 240, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape"](%temporal_model.W, %/temporal_model/Constant_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:213:0
  %/temporal_model/Constant_1_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1   10  240 [ CPULongType{3} ], onnx_name="/temporal_model/Constant_1"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:214:0
  %/temporal_model/Reshape_1_output_0 : Float(1, 10, 240, strides=[2400, 240, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_1"](%input, %/temporal_model/Constant_1_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:214:0
  %/temporal_model/fc1/Transpose_output_0 : Float(240, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/fc1/Transpose"](%temporal_model.fc1.weight), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1/MatMul_output_0 : Float(1, 10, 1, strides=[10, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/temporal_model/fc1/MatMul"](%/temporal_model/Reshape_output_0, %/temporal_model/fc1/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1/Add_output_0 : Float(1, 10, 1, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/temporal_model/fc1/Add"](%temporal_model.fc1.bias, %/temporal_model/fc1/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/Transpose_output_0 : Float(240, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/fc1_1/Transpose"](%temporal_model.fc1.weight), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/MatMul_output_0 : Float(1, 10, 1, strides=[10, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/temporal_model/fc1_1/MatMul"](%/temporal_model/Reshape_1_output_0, %/temporal_model/fc1_1/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/Add_output_0 : Float(1, 10, 1, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/temporal_model/fc1_1/Add"](%temporal_model.fc1.bias, %/temporal_model/fc1_1/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/Transpose_output_0 : Float(1, 1, 10, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/temporal_model/Transpose"](%/temporal_model/fc1_1/Add_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:220:0
  %/temporal_model/MatMul_output_0 : Float(1, 10, 10, strides=[100, 10, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/temporal_model/MatMul"](%/temporal_model/fc1/Add_output_0, %/temporal_model/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:220:0
  %/temporal_model/Softmax_output_0 : Float(1, 10, 10, strides=[100, 10, 1], requires_grad=1, device=cpu) = onnx::Softmax[axis=1, onnx_name="/temporal_model/Softmax"](%/temporal_model/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1841:0
  %/temporal_model/Constant_2_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=  10  240 [ CPULongType{2} ], onnx_name="/temporal_model/Constant_2"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:224:0
  %/temporal_model/Reshape_2_output_0 : Float(10, 240, strides=[240, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_2"](%input, %/temporal_model/Constant_2_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:224:0
  %/temporal_model/Transpose_1_output_0 : Float(240, 10, strides=[1, 240], requires_grad=0, device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/Transpose_1"](%/temporal_model/Reshape_2_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:225:0
  %/temporal_model/MatMul_1_output_0 : Float(1, 240, 10, strides=[2400, 10, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/temporal_model/MatMul_1"](%/temporal_model/Transpose_1_output_0, %/temporal_model/Softmax_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:227:0
  %/temporal_model/Constant_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=  10  120    2 [ CPULongType{3} ], onnx_name="/temporal_model/Constant_3"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:228:0
  %/temporal_model/Reshape_3_output_0 : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_3"](%/temporal_model/MatMul_1_output_0, %/temporal_model/Constant_3_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:228:0
  %/specto_model/Constant_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1  120   20 [ CPULongType{3} ], onnx_name="/specto_model/Constant"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:288:0
  %/specto_model/Reshape_output_0 : Float(1, 120, 20, strides=[2400, 20, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape"](%specto_model.W, %/specto_model/Constant_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:288:0
  %/specto_model/Constant_1_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1  120   20 [ CPULongType{3} ], onnx_name="/specto_model/Constant_1"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:289:0
  %/specto_model/Reshape_1_output_0 : Float(1, 120, 20, strides=[2400, 20, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_1"](%/temporal_model/Reshape_3_output_0, %/specto_model/Constant_1_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:289:0
  %/specto_model/fc1/Transpose_output_0 : Float(20, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/specto_model/fc1/Transpose"](%specto_model.fc1.weight), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1/MatMul_output_0 : Float(1, 120, 1, strides=[120, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/specto_model/fc1/MatMul"](%/specto_model/Reshape_output_0, %/specto_model/fc1/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1/Add_output_0 : Float(1, 120, 1, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/specto_model/fc1/Add"](%specto_model.fc1.bias, %/specto_model/fc1/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/Transpose_output_0 : Float(20, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/specto_model/fc1_1/Transpose"](%specto_model.fc1.weight), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/MatMul_output_0 : Float(1, 120, 1, strides=[120, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/specto_model/fc1_1/MatMul"](%/specto_model/Reshape_1_output_0, %/specto_model/fc1_1/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/Add_output_0 : Float(1, 120, 1, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/specto_model/fc1_1/Add"](%specto_model.fc1.bias, %/specto_model/fc1_1/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/Transpose_output_0 : Float(1, 1, 120, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/specto_model/Transpose"](%/specto_model/fc1_1/Add_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:295:0
  %/specto_model/MatMul_output_0 : Float(1, 120, 120, strides=[14400, 120, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/specto_model/MatMul"](%/specto_model/fc1/Add_output_0, %/specto_model/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:295:0
  %/specto_model/Softmax_output_0 : Float(1, 120, 120, strides=[14400, 120, 1], requires_grad=1, device=cpu) = onnx::Softmax[axis=1, onnx_name="/specto_model/Softmax"](%/specto_model/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1841:0
  %/specto_model/Constant_2_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=  20  120 [ CPULongType{2} ], onnx_name="/specto_model/Constant_2"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:299:0
  %/specto_model/Reshape_2_output_0 : Float(20, 120, strides=[120, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_2"](%/temporal_model/Reshape_3_output_0, %/specto_model/Constant_2_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:299:0
  %/specto_model/MatMul_1_output_0 : Float(1, 20, 120, strides=[2400, 120, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/specto_model/MatMul_1"](%/specto_model/Reshape_2_output_0, %/specto_model/Softmax_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:302:0
  %/specto_model/Constant_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=  10  120    2 [ CPULongType{3} ], onnx_name="/specto_model/Constant_3"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:303:0
  %/specto_model/Reshape_3_output_0 : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_3"](%/specto_model/MatMul_1_output_0, %/specto_model/Constant_3_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:303:0
  %/convolution/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/convolution/Constant"](), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:346:0
  %/convolution/Unsqueeze_output_0 : Float(1, 10, 120, 2, strides=[2400, 240, 2, 1], requires_grad=1, device=cpu) = onnx::Unsqueeze[onnx_name="/convolution/Unsqueeze"](%/specto_model/Reshape_3_output_0, %/convolution/Constant_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:346:0
  %/convolution/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/convolution/Constant_1"](), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:347:0
  %/convolution/Unsqueeze_1_output_0 : Float(1, 1, 10, 120, 2, strides=[2400, 2400, 240, 2, 1], requires_grad=1, device=cpu) = onnx::Unsqueeze[onnx_name="/convolution/Unsqueeze_1"](%/convolution/Unsqueeze_output_0, %/convolution/Constant_1_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:347:0
  %/convolution/conv1/Conv_output_0 : Float(1, 16, 13, 123, 5, strides=[127920, 7995, 615, 5, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1, 1], group=1, kernel_shape=[2, 2, 2], pads=[2, 2, 2, 2, 2, 2], strides=[1, 1, 1], onnx_name="/convolution/conv1/Conv"](%/convolution/Unsqueeze_1_output_0, %convolution.conv1.weight, %convolution.conv1.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.conv.Conv3d::conv1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/conv.py:608:0
  %/convolution/pool/MaxPool_output_0 : Float(1, 16, 6, 61, 2, strides=[11712, 732, 122, 2, 1], requires_grad=1, device=cpu) = onnx::MaxPool[ceil_mode=0, kernel_shape=[2, 2, 2], pads=[0, 0, 0, 0, 0, 0], strides=[2, 2, 2], onnx_name="/convolution/pool/MaxPool"](%/convolution/conv1/Conv_output_0), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.pooling.MaxPool3d::pool # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:868:0
  %/convolution/Flatten_output_0 : Float(1, 11712, strides=[11712, 1], requires_grad=1, device=cpu) = onnx::Flatten[axis=1, onnx_name="/convolution/Flatten"](%/convolution/pool/MaxPool_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:355:0
  %/convolution/fc1/Gemm_output_0 : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu) = onnx::Gemm[alpha=1., beta=1., transB=1, onnx_name="/convolution/fc1/Gemm"](%/convolution/Flatten_output_0, %convolution.fc1.weight, %convolution.fc1.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/convolution/Relu_output_0 : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/convolution/Relu"](%/convolution/fc1/Gemm_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1457:0
  %/convolution/fc2/Gemm_output_0 : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Gemm[alpha=1., beta=1., transB=1, onnx_name="/convolution/fc2/Gemm"](%/convolution/Relu_output_0, %convolution.fc2.weight, %convolution.fc2.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.linear.Linear::fc2 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/convolution/Relu_1_output_0 : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/convolution/Relu_1"](%/convolution/fc2/Gemm_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1457:0
  %output : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/convolution/Sigmoid"](%/convolution/Relu_1_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:364:0
  return (%output)

Exported graph: graph(%input : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=0, device=cpu),
      %temporal_model.W : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu),
      %temporal_model.fc1.weight : Float(1, 240, strides=[240, 1], requires_grad=1, device=cpu),
      %temporal_model.fc1.bias : Float(1, strides=[1], requires_grad=1, device=cpu),
      %specto_model.W : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu),
      %specto_model.fc1.weight : Float(1, 20, strides=[20, 1], requires_grad=1, device=cpu),
      %specto_model.fc1.bias : Float(1, strides=[1], requires_grad=1, device=cpu),
      %convolution.conv1.weight : Float(16, 1, 2, 2, 2, strides=[8, 8, 4, 2, 1], requires_grad=1, device=cpu),
      %convolution.conv1.bias : Float(16, strides=[1], requires_grad=1, device=cpu),
      %convolution.fc1.weight : Float(128, 11712, strides=[11712, 1], requires_grad=1, device=cpu),
      %convolution.fc1.bias : Float(128, strides=[1], requires_grad=1, device=cpu),
      %convolution.fc2.weight : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu),
      %convolution.fc2.bias : Float(1, strides=[1], requires_grad=1, device=cpu)):
  %/temporal_model/Constant_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1   10  240 [ CPULongType{3} ], onnx_name="/temporal_model/Constant"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:213:0
  %/temporal_model/Reshape_output_0 : Float(1, 10, 240, strides=[2400, 240, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape"](%temporal_model.W, %/temporal_model/Constant_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:213:0
  %/temporal_model/Constant_1_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1   10  240 [ CPULongType{3} ], onnx_name="/temporal_model/Constant_1"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:214:0
  %/temporal_model/Reshape_1_output_0 : Float(1, 10, 240, strides=[2400, 240, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_1"](%input, %/temporal_model/Constant_1_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:214:0
  %/temporal_model/fc1/Transpose_output_0 : Float(240, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/fc1/Transpose"](%temporal_model.fc1.weight), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1/MatMul_output_0 : Float(1, 10, 1, strides=[10, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/temporal_model/fc1/MatMul"](%/temporal_model/Reshape_output_0, %/temporal_model/fc1/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1/Add_output_0 : Float(1, 10, 1, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/temporal_model/fc1/Add"](%temporal_model.fc1.bias, %/temporal_model/fc1/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/Transpose_output_0 : Float(240, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/fc1_1/Transpose"](%temporal_model.fc1.weight), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/MatMul_output_0 : Float(1, 10, 1, strides=[10, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/temporal_model/fc1_1/MatMul"](%/temporal_model/Reshape_1_output_0, %/temporal_model/fc1_1/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/Add_output_0 : Float(1, 10, 1, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/temporal_model/fc1_1/Add"](%temporal_model.fc1.bias, %/temporal_model/fc1_1/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/Transpose_output_0 : Float(1, 1, 10, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/temporal_model/Transpose"](%/temporal_model/fc1_1/Add_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:220:0
  %/temporal_model/MatMul_output_0 : Float(1, 10, 10, strides=[100, 10, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/temporal_model/MatMul"](%/temporal_model/fc1/Add_output_0, %/temporal_model/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:220:0
  %/temporal_model/Softmax_output_0 : Float(1, 10, 10, strides=[100, 10, 1], requires_grad=1, device=cpu) = onnx::Softmax[axis=1, onnx_name="/temporal_model/Softmax"](%/temporal_model/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1841:0
  %/temporal_model/Constant_2_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=  10  240 [ CPULongType{2} ], onnx_name="/temporal_model/Constant_2"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:224:0
  %/temporal_model/Reshape_2_output_0 : Float(10, 240, strides=[240, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_2"](%input, %/temporal_model/Constant_2_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:224:0
  %/temporal_model/Transpose_1_output_0 : Float(240, 10, strides=[1, 240], requires_grad=0, device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/Transpose_1"](%/temporal_model/Reshape_2_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:225:0
  %/temporal_model/MatMul_1_output_0 : Float(1, 240, 10, strides=[2400, 10, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/temporal_model/MatMul_1"](%/temporal_model/Transpose_1_output_0, %/temporal_model/Softmax_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:227:0
  %/temporal_model/Constant_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=  10  120    2 [ CPULongType{3} ], onnx_name="/temporal_model/Constant_3"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:228:0
  %/temporal_model/Reshape_3_output_0 : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_3"](%/temporal_model/MatMul_1_output_0, %/temporal_model/Constant_3_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:228:0
  %/specto_model/Constant_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1  120   20 [ CPULongType{3} ], onnx_name="/specto_model/Constant"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:288:0
  %/specto_model/Reshape_output_0 : Float(1, 120, 20, strides=[2400, 20, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape"](%specto_model.W, %/specto_model/Constant_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:288:0
  %/specto_model/Constant_1_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1  120   20 [ CPULongType{3} ], onnx_name="/specto_model/Constant_1"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:289:0
  %/specto_model/Reshape_1_output_0 : Float(1, 120, 20, strides=[2400, 20, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_1"](%/temporal_model/Reshape_3_output_0, %/specto_model/Constant_1_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:289:0
  %/specto_model/fc1/Transpose_output_0 : Float(20, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/specto_model/fc1/Transpose"](%specto_model.fc1.weight), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1/MatMul_output_0 : Float(1, 120, 1, strides=[120, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/specto_model/fc1/MatMul"](%/specto_model/Reshape_output_0, %/specto_model/fc1/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1/Add_output_0 : Float(1, 120, 1, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/specto_model/fc1/Add"](%specto_model.fc1.bias, %/specto_model/fc1/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/Transpose_output_0 : Float(20, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/specto_model/fc1_1/Transpose"](%specto_model.fc1.weight), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/MatMul_output_0 : Float(1, 120, 1, strides=[120, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/specto_model/fc1_1/MatMul"](%/specto_model/Reshape_1_output_0, %/specto_model/fc1_1/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/Add_output_0 : Float(1, 120, 1, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/specto_model/fc1_1/Add"](%specto_model.fc1.bias, %/specto_model/fc1_1/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/Transpose_output_0 : Float(1, 1, 120, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/specto_model/Transpose"](%/specto_model/fc1_1/Add_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:295:0
  %/specto_model/MatMul_output_0 : Float(1, 120, 120, strides=[14400, 120, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/specto_model/MatMul"](%/specto_model/fc1/Add_output_0, %/specto_model/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:295:0
  %/specto_model/Softmax_output_0 : Float(1, 120, 120, strides=[14400, 120, 1], requires_grad=1, device=cpu) = onnx::Softmax[axis=1, onnx_name="/specto_model/Softmax"](%/specto_model/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1841:0
  %/specto_model/Constant_2_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=  20  120 [ CPULongType{2} ], onnx_name="/specto_model/Constant_2"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:299:0
  %/specto_model/Reshape_2_output_0 : Float(20, 120, strides=[120, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_2"](%/temporal_model/Reshape_3_output_0, %/specto_model/Constant_2_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:299:0
  %/specto_model/MatMul_1_output_0 : Float(1, 20, 120, strides=[2400, 120, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/specto_model/MatMul_1"](%/specto_model/Reshape_2_output_0, %/specto_model/Softmax_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:302:0
  %/specto_model/Constant_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=  10  120    2 [ CPULongType{3} ], onnx_name="/specto_model/Constant_3"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:303:0
  %/specto_model/Reshape_3_output_0 : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_3"](%/specto_model/MatMul_1_output_0, %/specto_model/Constant_3_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:303:0
  %/convolution/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/convolution/Constant"](), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:346:0
  %/convolution/Unsqueeze_output_0 : Float(1, 10, 120, 2, strides=[2400, 240, 2, 1], requires_grad=1, device=cpu) = onnx::Unsqueeze[onnx_name="/convolution/Unsqueeze"](%/specto_model/Reshape_3_output_0, %/convolution/Constant_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:346:0
  %/convolution/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/convolution/Constant_1"](), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:347:0
  %/convolution/Unsqueeze_1_output_0 : Float(1, 1, 10, 120, 2, strides=[2400, 2400, 240, 2, 1], requires_grad=1, device=cpu) = onnx::Unsqueeze[onnx_name="/convolution/Unsqueeze_1"](%/convolution/Unsqueeze_output_0, %/convolution/Constant_1_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:347:0
  %/convolution/conv1/Conv_output_0 : Float(1, 16, 13, 123, 5, strides=[127920, 7995, 615, 5, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1, 1], group=1, kernel_shape=[2, 2, 2], pads=[2, 2, 2, 2, 2, 2], strides=[1, 1, 1], onnx_name="/convolution/conv1/Conv"](%/convolution/Unsqueeze_1_output_0, %convolution.conv1.weight, %convolution.conv1.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.conv.Conv3d::conv1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/conv.py:608:0
  %/convolution/pool/MaxPool_output_0 : Float(1, 16, 6, 61, 2, strides=[11712, 732, 122, 2, 1], requires_grad=1, device=cpu) = onnx::MaxPool[ceil_mode=0, kernel_shape=[2, 2, 2], pads=[0, 0, 0, 0, 0, 0], strides=[2, 2, 2], onnx_name="/convolution/pool/MaxPool"](%/convolution/conv1/Conv_output_0), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.pooling.MaxPool3d::pool # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:868:0
  %/convolution/Flatten_output_0 : Float(1, 11712, strides=[11712, 1], requires_grad=1, device=cpu) = onnx::Flatten[axis=1, onnx_name="/convolution/Flatten"](%/convolution/pool/MaxPool_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:355:0
  %/convolution/fc1/Gemm_output_0 : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu) = onnx::Gemm[alpha=1., beta=1., transB=1, onnx_name="/convolution/fc1/Gemm"](%/convolution/Flatten_output_0, %convolution.fc1.weight, %convolution.fc1.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/convolution/Relu_output_0 : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/convolution/Relu"](%/convolution/fc1/Gemm_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1457:0
  %/convolution/fc2/Gemm_output_0 : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Gemm[alpha=1., beta=1., transB=1, onnx_name="/convolution/fc2/Gemm"](%/convolution/Relu_output_0, %convolution.fc2.weight, %convolution.fc2.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.linear.Linear::fc2 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/convolution/Relu_1_output_0 : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/convolution/Relu_1"](%/convolution/fc2/Gemm_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1457:0
  %output : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/convolution/Sigmoid"](%/convolution/Relu_1_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:364:0
  return (%output)

Exported graph: graph(%input : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=0, device=cpu),
      %temporal_model.W : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu),
      %temporal_model.fc1.weight : Float(1, 240, strides=[240, 1], requires_grad=1, device=cpu),
      %temporal_model.fc1.bias : Float(1, strides=[1], requires_grad=1, device=cpu),
      %specto_model.W : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu),
      %specto_model.fc1.weight : Float(1, 20, strides=[20, 1], requires_grad=1, device=cpu),
      %specto_model.fc1.bias : Float(1, strides=[1], requires_grad=1, device=cpu),
      %convolution.conv1.weight : Float(16, 1, 2, 2, 2, strides=[8, 8, 4, 2, 1], requires_grad=1, device=cpu),
      %convolution.conv1.bias : Float(16, strides=[1], requires_grad=1, device=cpu),
      %convolution.fc1.weight : Float(128, 11712, strides=[11712, 1], requires_grad=1, device=cpu),
      %convolution.fc1.bias : Float(128, strides=[1], requires_grad=1, device=cpu),
      %convolution.fc2.weight : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu),
      %convolution.fc2.bias : Float(1, strides=[1], requires_grad=1, device=cpu)):
  %/temporal_model/Constant_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1   10  240 [ CPULongType{3} ], onnx_name="/temporal_model/Constant"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:213:0
  %/temporal_model/Reshape_output_0 : Float(1, 10, 240, strides=[2400, 240, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape"](%temporal_model.W, %/temporal_model/Constant_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:213:0
  %/temporal_model/Constant_1_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1   10  240 [ CPULongType{3} ], onnx_name="/temporal_model/Constant_1"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:214:0
  %/temporal_model/Reshape_1_output_0 : Float(1, 10, 240, strides=[2400, 240, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_1"](%input, %/temporal_model/Constant_1_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:214:0
  %/temporal_model/fc1/Transpose_output_0 : Float(240, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/fc1/Transpose"](%temporal_model.fc1.weight), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1/MatMul_output_0 : Float(1, 10, 1, strides=[10, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/temporal_model/fc1/MatMul"](%/temporal_model/Reshape_output_0, %/temporal_model/fc1/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1/Add_output_0 : Float(1, 10, 1, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/temporal_model/fc1/Add"](%temporal_model.fc1.bias, %/temporal_model/fc1/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/Transpose_output_0 : Float(240, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/fc1_1/Transpose"](%temporal_model.fc1.weight), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/MatMul_output_0 : Float(1, 10, 1, strides=[10, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/temporal_model/fc1_1/MatMul"](%/temporal_model/Reshape_1_output_0, %/temporal_model/fc1_1/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/fc1_1/Add_output_0 : Float(1, 10, 1, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/temporal_model/fc1_1/Add"](%temporal_model.fc1.bias, %/temporal_model/fc1_1/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/temporal_model/Transpose_output_0 : Float(1, 1, 10, strides=[10, 1, 1], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/temporal_model/Transpose"](%/temporal_model/fc1_1/Add_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:220:0
  %/temporal_model/MatMul_output_0 : Float(1, 10, 10, strides=[100, 10, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/temporal_model/MatMul"](%/temporal_model/fc1/Add_output_0, %/temporal_model/Transpose_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:220:0
  %/temporal_model/Softmax_output_0 : Float(1, 10, 10, strides=[100, 10, 1], requires_grad=1, device=cpu) = onnx::Softmax[axis=1, onnx_name="/temporal_model/Softmax"](%/temporal_model/MatMul_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1841:0
  %/temporal_model/Constant_2_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=  10  240 [ CPULongType{2} ], onnx_name="/temporal_model/Constant_2"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:224:0
  %/temporal_model/Reshape_2_output_0 : Float(10, 240, strides=[240, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_2"](%input, %/temporal_model/Constant_2_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:224:0
  %/temporal_model/Transpose_1_output_0 : Float(240, 10, strides=[1, 240], requires_grad=0, device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/temporal_model/Transpose_1"](%/temporal_model/Reshape_2_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:225:0
  %/temporal_model/MatMul_1_output_0 : Float(1, 240, 10, strides=[2400, 10, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/temporal_model/MatMul_1"](%/temporal_model/Transpose_1_output_0, %/temporal_model/Softmax_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:227:0
  %/temporal_model/Constant_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=  10  120    2 [ CPULongType{3} ], onnx_name="/temporal_model/Constant_3"](), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:228:0
  %/temporal_model/Reshape_3_output_0 : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/temporal_model/Reshape_3"](%/temporal_model/MatMul_1_output_0, %/temporal_model/Constant_3_output_0), scope: stan.STAN::/stan.Temporal_Neural_Net::temporal_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:228:0
  %/specto_model/Constant_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1  120   20 [ CPULongType{3} ], onnx_name="/specto_model/Constant"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:288:0
  %/specto_model/Reshape_output_0 : Float(1, 120, 20, strides=[2400, 20, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape"](%specto_model.W, %/specto_model/Constant_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:288:0
  %/specto_model/Constant_1_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=   1  120   20 [ CPULongType{3} ], onnx_name="/specto_model/Constant_1"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:289:0
  %/specto_model/Reshape_1_output_0 : Float(1, 120, 20, strides=[2400, 20, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_1"](%/temporal_model/Reshape_3_output_0, %/specto_model/Constant_1_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:289:0
  %/specto_model/fc1/Transpose_output_0 : Float(20, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/specto_model/fc1/Transpose"](%specto_model.fc1.weight), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1/MatMul_output_0 : Float(1, 120, 1, strides=[120, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/specto_model/fc1/MatMul"](%/specto_model/Reshape_output_0, %/specto_model/fc1/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1/Add_output_0 : Float(1, 120, 1, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/specto_model/fc1/Add"](%specto_model.fc1.bias, %/specto_model/fc1/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/Transpose_output_0 : Float(20, 1, strides=[1, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/specto_model/fc1_1/Transpose"](%specto_model.fc1.weight), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/MatMul_output_0 : Float(1, 120, 1, strides=[120, 1, 1], device=cpu) = onnx::MatMul[onnx_name="/specto_model/fc1_1/MatMul"](%/specto_model/Reshape_1_output_0, %/specto_model/fc1_1/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/fc1_1/Add_output_0 : Float(1, 120, 1, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/specto_model/fc1_1/Add"](%specto_model.fc1.bias, %/specto_model/fc1_1/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/specto_model/Transpose_output_0 : Float(1, 1, 120, strides=[120, 1, 1], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/specto_model/Transpose"](%/specto_model/fc1_1/Add_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:295:0
  %/specto_model/MatMul_output_0 : Float(1, 120, 120, strides=[14400, 120, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/specto_model/MatMul"](%/specto_model/fc1/Add_output_0, %/specto_model/Transpose_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:295:0
  %/specto_model/Softmax_output_0 : Float(1, 120, 120, strides=[14400, 120, 1], requires_grad=1, device=cpu) = onnx::Softmax[axis=1, onnx_name="/specto_model/Softmax"](%/specto_model/MatMul_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1841:0
  %/specto_model/Constant_2_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=  20  120 [ CPULongType{2} ], onnx_name="/specto_model/Constant_2"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:299:0
  %/specto_model/Reshape_2_output_0 : Float(20, 120, strides=[120, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_2"](%/temporal_model/Reshape_3_output_0, %/specto_model/Constant_2_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:299:0
  %/specto_model/MatMul_1_output_0 : Float(1, 20, 120, strides=[2400, 120, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/specto_model/MatMul_1"](%/specto_model/Reshape_2_output_0, %/specto_model/Softmax_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:302:0
  %/specto_model/Constant_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Constant[value=  10  120    2 [ CPULongType{3} ], onnx_name="/specto_model/Constant_3"](), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:303:0
  %/specto_model/Reshape_3_output_0 : Float(10, 120, 2, strides=[240, 2, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/specto_model/Reshape_3"](%/specto_model/MatMul_1_output_0, %/specto_model/Constant_3_output_0), scope: stan.STAN::/stan.Specto_Neural_Net::specto_model # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:303:0
  %/convolution/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/convolution/Constant"](), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:346:0
  %/convolution/Unsqueeze_output_0 : Float(1, 10, 120, 2, strides=[2400, 240, 2, 1], requires_grad=1, device=cpu) = onnx::Unsqueeze[onnx_name="/convolution/Unsqueeze"](%/specto_model/Reshape_3_output_0, %/convolution/Constant_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:346:0
  %/convolution/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/convolution/Constant_1"](), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:347:0
  %/convolution/Unsqueeze_1_output_0 : Float(1, 1, 10, 120, 2, strides=[2400, 2400, 240, 2, 1], requires_grad=1, device=cpu) = onnx::Unsqueeze[onnx_name="/convolution/Unsqueeze_1"](%/convolution/Unsqueeze_output_0, %/convolution/Constant_1_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:347:0
  %/convolution/conv1/Conv_output_0 : Float(1, 16, 13, 123, 5, strides=[127920, 7995, 615, 5, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1, 1], group=1, kernel_shape=[2, 2, 2], pads=[2, 2, 2, 2, 2, 2], strides=[1, 1, 1], onnx_name="/convolution/conv1/Conv"](%/convolution/Unsqueeze_1_output_0, %convolution.conv1.weight, %convolution.conv1.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.conv.Conv3d::conv1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/conv.py:608:0
  %/convolution/pool/MaxPool_output_0 : Float(1, 16, 6, 61, 2, strides=[11712, 732, 122, 2, 1], requires_grad=1, device=cpu) = onnx::MaxPool[ceil_mode=0, kernel_shape=[2, 2, 2], pads=[0, 0, 0, 0, 0, 0], strides=[2, 2, 2], onnx_name="/convolution/pool/MaxPool"](%/convolution/conv1/Conv_output_0), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.pooling.MaxPool3d::pool # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:868:0
  %/convolution/Flatten_output_0 : Float(1, 11712, strides=[11712, 1], requires_grad=1, device=cpu) = onnx::Flatten[axis=1, onnx_name="/convolution/Flatten"](%/convolution/pool/MaxPool_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:355:0
  %/convolution/fc1/Gemm_output_0 : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu) = onnx::Gemm[alpha=1., beta=1., transB=1, onnx_name="/convolution/fc1/Gemm"](%/convolution/Flatten_output_0, %convolution.fc1.weight, %convolution.fc1.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.linear.Linear::fc1 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/convolution/Relu_output_0 : Float(1, 128, strides=[128, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/convolution/Relu"](%/convolution/fc1/Gemm_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1457:0
  %/convolution/fc2/Gemm_output_0 : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Gemm[alpha=1., beta=1., transB=1, onnx_name="/convolution/fc2/Gemm"](%/convolution/Relu_output_0, %convolution.fc2.weight, %convolution.fc2.bias), scope: stan.STAN::/stan.Neural_Network::convolution/torch.nn.modules.linear.Linear::fc2 # /usr/local/lib/python3.8/dist-packages/torch/nn/modules/linear.py:114:0
  %/convolution/Relu_1_output_0 : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/convolution/Relu_1"](%/convolution/fc2/Gemm_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1457:0
  %output : Float(1, 1, strides=[1, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/convolution/Sigmoid"](%/convolution/Relu_1_output_0), scope: stan.STAN::/stan.Neural_Network::convolution # /data/home/ankitkumar15/CrypTen/examples/my_project/stan.py:364:0
  return (%output)

['/data/home/ankitkumar15/CrypTen/examples/my_project', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/data/home/ankitkumar15/.local/lib/python3.8/site-packages', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/opt/carla-simulator/PythonAPI/carla/dist/carla-0.9.13-py3.7-linux-x86_64.egg', '/opt/carla-simulator/PythonAPI/carla', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen']
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx <crypten.communicator.distributed_communicator.DistributedCommunicator object at 0x7f4a726b55b0>
0 2
<crypten.communicator.distributed_communicator.DistributedCommunicator object at 0x7f4a726b55b0>
['/data/home/ankitkumar15/CrypTen/examples/my_project', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/data/home/ankitkumar15/.local/lib/python3.8/site-packages', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/opt/carla-simulator/PythonAPI/carla/dist/carla-0.9.13-py3.7-linux-x86_64.egg', '/opt/carla-simulator/PythonAPI/carla', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen']
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
19
torch.Size([1, 16, 13, 123, 5])
20
torch.Size([1, 16, 13, 123, 5])
21
torch.Size([1, 16, 13, 123, 5])
22
torch.Size([1, 16, 13, 123, 5])
23
torch.Size([1, 16, 13, 123, 5])
24
torch.Size([1, 16, 13, 123, 5])
25
torch.Size([1, 16, 13, 123, 5])
26
torch.Size([1, 16, 13, 123, 5])
27
torch.Size([1, 16, 13, 123, 5])
28
torch.Size([1, 16, 13, 123, 5])
29
torch.Size([1, 16, 13, 123, 5])
30
torch.Size([1, 16, 13, 123, 5])
31
torch.Size([1, 16, 13, 123, 5])
32
torch.Size([1, 16, 13, 123, 5])
33
torch.Size([1, 16, 13, 123, 5])
34
torch.Size([1, 16, 13, 123, 5])
35
torch.Size([1, 16, 13, 123, 5])
36
torch.Size([1, 16, 13, 123, 5])
37
torch.Size([1, 16, 13, 123, 5])
38
torch.Size([1, 16, 13, 123, 5])
39
torch.Size([1, 16, 13, 123, 5])
40
torch.Size([1, 16, 13, 123, 5])
41
torch.Size([1, 16, 13, 123, 5])
42
torch.Size([1, 16, 13, 123, 5])
43
torch.Size([1, 16, 13, 123, 5])
44
torch.Size([1, 16, 13, 123, 5])
45
torch.Size([1, 16, 13, 123, 5])
46
torch.Size([1, 16, 13, 123, 5])
47
torch.Size([1, 16, 13, 123, 5])
48
torch.Size([1, 16, 13, 123, 5])
49
torch.Size([1, 16, 13, 123, 5])
50
torch.Size([1, 16, 13, 123, 5])
51
torch.Size([1, 16, 13, 123, 5])
52
torch.Size([1, 16, 13, 123, 5])
53
torch.Size([1, 16, 13, 123, 5])
54
torch.Size([1, 16, 13, 123, 5])
55
torch.Size([1, 16, 13, 123, 5])
56
torch.Size([1, 16, 13, 123, 5])
57
torch.Size([1, 16, 13, 123, 5])
58
torch.Size([1, 16, 13, 123, 5])
59
torch.Size([1, 16, 13, 123, 5])
60
torch.Size([1, 16, 13, 123, 5])
61
torch.Size([1, 16, 13, 123, 5])
62
torch.Size([1, 16, 13, 123, 5])
63
torch.Size([1, 16, 13, 123, 5])
64
torch.Size([1, 16, 13, 123, 5])
65
torch.Size([1, 16, 13, 123, 5])
66
torch.Size([1, 16, 13, 123, 5])
67
torch.Size([1, 16, 13, 123, 5])
68
torch.Size([1, 16, 13, 123, 5])
69
torch.Size([1, 16, 13, 123, 5])
70
torch.Size([1, 16, 13, 123, 5])
71
torch.Size([1, 16, 13, 123, 5])
72
torch.Size([1, 16, 13, 123, 5])
73
torch.Size([1, 16, 13, 123, 5])
74
torch.Size([1, 16, 13, 123, 5])
75
torch.Size([1, 16, 13, 123, 5])
76
torch.Size([1, 16, 13, 123, 5])
77
torch.Size([1, 16, 13, 123, 5])
78
torch.Size([1, 16, 13, 123, 5])
79
torch.Size([1, 16, 13, 123, 5])
80
torch.Size([1, 16, 13, 123, 5])
81
torch.Size([1, 16, 13, 123, 5])
82
torch.Size([1, 16, 13, 123, 5])
83
torch.Size([1, 16, 13, 123, 5])
84
torch.Size([1, 16, 13, 123, 5])
85
torch.Size([1, 16, 13, 123, 5])
86
torch.Size([1, 16, 13, 123, 5])
87
torch.Size([1, 16, 13, 123, 5])
88
torch.Size([1, 16, 13, 123, 5])
89
torch.Size([1, 16, 13, 123, 5])
90
torch.Size([1, 16, 13, 123, 5])
91
torch.Size([1, 16, 13, 123, 5])
92
torch.Size([1, 16, 13, 123, 5])
93
torch.Size([1, 16, 13, 123, 5])
94
torch.Size([1, 16, 13, 123, 5])
95
torch.Size([1, 16, 13, 123, 5])
96
torch.Size([1, 16, 13, 123, 5])
97
torch.Size([1, 16, 13, 123, 5])
98
torch.Size([1, 16, 13, 123, 5])
99
torch.Size([1, 16, 13, 123, 5])
100
torch.Size([1, 16, 13, 123, 5])
101
torch.Size([1, 16, 13, 123, 5])
102
torch.Size([1, 16, 13, 123, 5])
103
torch.Size([1, 16, 13, 123, 5])
104
torch.Size([1, 16, 13, 123, 5])
105
torch.Size([1, 16, 13, 123, 5])
106
torch.Size([1, 16, 13, 123, 5])
107
torch.Size([1, 16, 13, 123, 5])
108
torch.Size([1, 16, 13, 123, 5])
109
torch.Size([1, 16, 13, 123, 5])
110
torch.Size([1, 16, 13, 123, 5])
111
torch.Size([1, 16, 13, 123, 5])
112
torch.Size([1, 16, 13, 123, 5])
113
torch.Size([1, 16, 13, 123, 5])
114
torch.Size([1, 16, 13, 123, 5])
115
torch.Size([1, 16, 13, 123, 5])
116
torch.Size([1, 16, 13, 123, 5])
117
torch.Size([1, 16, 13, 123, 5])
118
torch.Size([1, 16, 13, 123, 5])
119
torch.Size([1, 16, 13, 123, 5])
120
torch.Size([1, 16, 13, 123, 5])
121
torch.Size([1, 16, 13, 123, 5])
122
torch.Size([1, 16, 13, 123, 5])
123
torch.Size([1, 16, 13, 123, 5])
124
torch.Size([1, 16, 13, 123, 5])
125
torch.Size([1, 16, 13, 123, 5])
126
torch.Size([1, 16, 13, 123, 5])
127
torch.Size([1, 16, 13, 123, 5])
128
torch.Size([1, 16, 13, 123, 5])
129
torch.Size([1, 16, 13, 123, 5])
130
torch.Size([1, 16, 13, 123, 5])
131
torch.Size([1, 16, 13, 123, 5])
132
torch.Size([1, 16, 13, 123, 5])
133
torch.Size([1, 16, 13, 123, 5])
134
torch.Size([1, 16, 13, 123, 5])
135
torch.Size([1, 16, 13, 123, 5])
136
torch.Size([1, 16, 13, 123, 5])
137
torch.Size([1, 16, 13, 123, 5])
138
torch.Size([1, 16, 13, 123, 5])
139
torch.Size([1, 16, 13, 123, 5])
140
torch.Size([1, 16, 13, 123, 5])
141
torch.Size([1, 16, 13, 123, 5])
142
torch.Size([1, 16, 13, 123, 5])
143
torch.Size([1, 16, 13, 123, 5])
144
torch.Size([1, 16, 13, 123, 5])
145
torch.Size([1, 16, 13, 123, 5])
146
torch.Size([1, 16, 13, 123, 5])
147
torch.Size([1, 16, 13, 123, 5])
148
torch.Size([1, 16, 13, 123, 5])
149
torch.Size([1, 16, 13, 123, 5])
150
torch.Size([1, 16, 13, 123, 5])
151
torch.Size([1, 16, 13, 123, 5])
152
torch.Size([1, 16, 13, 123, 5])
153
torch.Size([1, 16, 13, 123, 5])
154
torch.Size([1, 16, 13, 123, 5])
155
torch.Size([1, 16, 13, 123, 5])
156
torch.Size([1, 16, 13, 123, 5])
157
torch.Size([1, 16, 13, 123, 5])
158
torch.Size([1, 16, 13, 123, 5])
159
torch.Size([1, 16, 13, 123, 5])
160
torch.Size([1, 16, 13, 123, 5])
161
torch.Size([1, 16, 13, 123, 5])
162
torch.Size([1, 16, 13, 123, 5])
163
torch.Size([1, 16, 13, 123, 5])
164
torch.Size([1, 16, 13, 123, 5])
165
torch.Size([1, 16, 13, 123, 5])
166
torch.Size([1, 16, 13, 123, 5])
167
torch.Size([1, 16, 13, 123, 5])
168
torch.Size([1, 16, 13, 123, 5])
169
torch.Size([1, 16, 13, 123, 5])
170
torch.Size([1, 16, 13, 123, 5])
171
torch.Size([1, 16, 13, 123, 5])
172
torch.Size([1, 16, 13, 123, 5])
173
torch.Size([1, 16, 13, 123, 5])
174
torch.Size([1, 16, 13, 123, 5])
175
torch.Size([1, 16, 13, 123, 5])
176
torch.Size([1, 16, 13, 123, 5])
177
torch.Size([1, 16, 13, 123, 5])
178
torch.Size([1, 16, 13, 123, 5])
179
torch.Size([1, 16, 13, 123, 5])
180
torch.Size([1, 16, 13, 123, 5])
181
torch.Size([1, 16, 13, 123, 5])
182
torch.Size([1, 16, 13, 123, 5])
183
torch.Size([1, 16, 13, 123, 5])
184
torch.Size([1, 16, 13, 123, 5])
185
torch.Size([1, 16, 13, 123, 5])
186
torch.Size([1, 16, 13, 123, 5])
187
torch.Size([1, 16, 13, 123, 5])
188
torch.Size([1, 16, 13, 123, 5])
189
torch.Size([1, 16, 13, 123, 5])
190
torch.Size([1, 16, 13, 123, 5])
191
torch.Size([1, 16, 13, 123, 5])
192
torch.Size([1, 16, 13, 123, 5])
193
torch.Size([1, 16, 13, 123, 5])
194
torch.Size([1, 16, 13, 123, 5])
195
torch.Size([1, 16, 13, 123, 5])
196
torch.Size([1, 16, 13, 123, 5])
197
['/data/home/ankitkumar15/CrypTen/examples/my_project', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/data/home/ankitkumar15/.local/lib/python3.8/site-packages', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/opt/carla-simulator/PythonAPI/carla/dist/carla-0.9.13-py3.7-linux-x86_64.egg', '/opt/carla-simulator/PythonAPI/carla', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen']
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx <crypten.communicator.distributed_communicator.DistributedCommunicator object at 0x7f7468f97580>
['/data/home/ankitkumar15/CrypTen/examples/my_project', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/data/home/ankitkumar15/.local/lib/python3.8/site-packages', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/opt/carla-simulator/PythonAPI/carla/dist/carla-0.9.13-py3.7-linux-x86_64.egg', '/opt/carla-simulator/PythonAPI/carla', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen', '/data/home/ankitkumar15/CrypTen']
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
19
torch.Size([1, 16, 13, 123, 5])
20
torch.Size([1, 16, 13, 123, 5])
21
torch.Size([1, 16, 13, 123, 5])
22
torch.Size([1, 16, 13, 123, 5])
23
torch.Size([1, 16, 13, 123, 5])
24
torch.Size([1, 16, 13, 123, 5])
25
torch.Size([1, 16, 13, 123, 5])
26
torch.Size([1, 16, 13, 123, 5])
27
torch.Size([1, 16, 13, 123, 5])
28
torch.Size([1, 16, 13, 123, 5])
29
torch.Size([1, 16, 13, 123, 5])
30
torch.Size([1, 16, 13, 123, 5])
31
torch.Size([1, 16, 13, 123, 5])
32
torch.Size([1, 16, 13, 123, 5])
33
torch.Size([1, 16, 13, 123, 5])
34
torch.Size([1, 16, 13, 123, 5])
35
torch.Size([1, 16, 13, 123, 5])
36
torch.Size([1, 16, 13, 123, 5])
37
torch.Size([1, 16, 13, 123, 5])
38
torch.Size([1, 16, 13, 123, 5])
39
torch.Size([1, 16, 13, 123, 5])
40
torch.Size([1, 16, 13, 123, 5])
41
torch.Size([1, 16, 13, 123, 5])
42
torch.Size([1, 16, 13, 123, 5])
43
torch.Size([1, 16, 13, 123, 5])
44
torch.Size([1, 16, 13, 123, 5])
45
torch.Size([1, 16, 13, 123, 5])
46
torch.Size([1, 16, 13, 123, 5])
47
torch.Size([1, 16, 13, 123, 5])
48
torch.Size([1, 16, 13, 123, 5])
49
torch.Size([1, 16, 13, 123, 5])
50
torch.Size([1, 16, 13, 123, 5])
51
torch.Size([1, 16, 13, 123, 5])
52
torch.Size([1, 16, 13, 123, 5])
53
torch.Size([1, 16, 13, 123, 5])
54
torch.Size([1, 16, 13, 123, 5])
55
torch.Size([1, 16, 13, 123, 5])
56
torch.Size([1, 16, 13, 123, 5])
57
torch.Size([1, 16, 13, 123, 5])
58
torch.Size([1, 16, 13, 123, 5])
59
torch.Size([1, 16, 13, 123, 5])
60
torch.Size([1, 16, 13, 123, 5])
61
torch.Size([1, 16, 13, 123, 5])
62
torch.Size([1, 16, 13, 123, 5])
63
torch.Size([1, 16, 13, 123, 5])
64
torch.Size([1, 16, 13, 123, 5])
65
torch.Size([1, 16, 13, 123, 5])
66
torch.Size([1, 16, 13, 123, 5])
67
torch.Size([1, 16, 13, 123, 5])
68
torch.Size([1, 16, 13, 123, 5])
69
torch.Size([1, 16, 13, 123, 5])
70
torch.Size([1, 16, 13, 123, 5])
71
torch.Size([1, 16, 13, 123, 5])
72
torch.Size([1, 16, 13, 123, 5])
73
torch.Size([1, 16, 13, 123, 5])
74
torch.Size([1, 16, 13, 123, 5])
75
torch.Size([1, 16, 13, 123, 5])
76
torch.Size([1, 16, 13, 123, 5])
77
torch.Size([1, 16, 13, 123, 5])
78
torch.Size([1, 16, 13, 123, 5])
79
torch.Size([1, 16, 13, 123, 5])
80
torch.Size([1, 16, 13, 123, 5])
81
torch.Size([1, 16, 13, 123, 5])
82
torch.Size([1, 16, 13, 123, 5])
83
torch.Size([1, 16, 13, 123, 5])
84
torch.Size([1, 16, 13, 123, 5])
85
torch.Size([1, 16, 13, 123, 5])
86
torch.Size([1, 16, 13, 123, 5])
87
torch.Size([1, 16, 13, 123, 5])
88
torch.Size([1, 16, 13, 123, 5])
89
torch.Size([1, 16, 13, 123, 5])
90
torch.Size([1, 16, 13, 123, 5])
91
torch.Size([1, 16, 13, 123, 5])
92
torch.Size([1, 16, 13, 123, 5])
93
torch.Size([1, 16, 13, 123, 5])
94
torch.Size([1, 16, 13, 123, 5])
95
torch.Size([1, 16, 13, 123, 5])
96
torch.Size([1, 16, 13, 123, 5])
97
torch.Size([1, 16, 13, 123, 5])
98
torch.Size([1, 16, 13, 123, 5])
99
torch.Size([1, 16, 13, 123, 5])
100
torch.Size([1, 16, 13, 123, 5])
101
torch.Size([1, 16, 13, 123, 5])
102
torch.Size([1, 16, 13, 123, 5])
103
torch.Size([1, 16, 13, 123, 5])
104
torch.Size([1, 16, 13, 123, 5])
105
torch.Size([1, 16, 13, 123, 5])
106
torch.Size([1, 16, 13, 123, 5])
107
torch.Size([1, 16, 13, 123, 5])
108
torch.Size([1, 16, 13, 123, 5])
109
torch.Size([1, 16, 13, 123, 5])
110
torch.Size([1, 16, 13, 123, 5])
111
torch.Size([1, 16, 13, 123, 5])
112
torch.Size([1, 16, 13, 123, 5])
113
torch.Size([1, 16, 13, 123, 5])
114
torch.Size([1, 16, 13, 123, 5])
115
torch.Size([1, 16, 13, 123, 5])
116
torch.Size([1, 16, 13, 123, 5])
117
torch.Size([1, 16, 13, 123, 5])
118
torch.Size([1, 16, 13, 123, 5])
119
torch.Size([1, 16, 13, 123, 5])
120
torch.Size([1, 16, 13, 123, 5])
121
torch.Size([1, 16, 13, 123, 5])
122
torch.Size([1, 16, 13, 123, 5])
123
torch.Size([1, 16, 13, 123, 5])
124
torch.Size([1, 16, 13, 123, 5])
125
torch.Size([1, 16, 13, 123, 5])
126
torch.Size([1, 16, 13, 123, 5])
127
torch.Size([1, 16, 13, 123, 5])
128
torch.Size([1, 16, 13, 123, 5])
129
torch.Size([1, 16, 13, 123, 5])
130
torch.Size([1, 16, 13, 123, 5])
131
torch.Size([1, 16, 13, 123, 5])
132
torch.Size([1, 16, 13, 123, 5])
133
torch.Size([1, 16, 13, 123, 5])
134
torch.Size([1, 16, 13, 123, 5])
135
torch.Size([1, 16, 13, 123, 5])
136
torch.Size([1, 16, 13, 123, 5])
137
torch.Size([1, 16, 13, 123, 5])
138
torch.Size([1, 16, 13, 123, 5])
139
torch.Size([1, 16, 13, 123, 5])
140
torch.Size([1, 16, 13, 123, 5])
141
torch.Size([1, 16, 13, 123, 5])
142
torch.Size([1, 16, 13, 123, 5])
143
torch.Size([1, 16, 13, 123, 5])
144
torch.Size([1, 16, 13, 123, 5])
145
torch.Size([1, 16, 13, 123, 5])
146
torch.Size([1, 16, 13, 123, 5])
147
torch.Size([1, 16, 13, 123, 5])
148
torch.Size([1, 16, 13, 123, 5])
149
torch.Size([1, 16, 13, 123, 5])
150
torch.Size([1, 16, 13, 123, 5])
151
torch.Size([1, 16, 13, 123, 5])
152
torch.Size([1, 16, 13, 123, 5])
153
torch.Size([1, 16, 13, 123, 5])
154
torch.Size([1, 16, 13, 123, 5])
155
torch.Size([1, 16, 13, 123, 5])
156
torch.Size([1, 16, 13, 123, 5])
157
torch.Size([1, 16, 13, 123, 5])
158
torch.Size([1, 16, 13, 123, 5])
159
torch.Size([1, 16, 13, 123, 5])
160
torch.Size([1, 16, 13, 123, 5])
161
torch.Size([1, 16, 13, 123, 5])
162
torch.Size([1, 16, 13, 123, 5])
163
torch.Size([1, 16, 13, 123, 5])
164
torch.Size([1, 16, 13, 123, 5])
165
torch.Size([1, 16, 13, 123, 5])
166
torch.Size([1, 16, 13, 123, 5])
167
torch.Size([1, 16, 13, 123, 5])
168
torch.Size([1, 16, 13, 123, 5])
169
torch.Size([1, 16, 13, 123, 5])
170
torch.Size([1, 16, 13, 123, 5])
171
torch.Size([1, 16, 13, 123, 5])
172
torch.Size([1, 16, 13, 123, 5])
173
torch.Size([1, 16, 13, 123, 5])
174
torch.Size([1, 16, 13, 123, 5])
175
torch.Size([1, 16, 13, 123, 5])
176
torch.Size([1, 16, 13, 123, 5])
177
torch.Size([1, 16, 13, 123, 5])
178
torch.Size([1, 16, 13, 123, 5])
179
torch.Size([1, 16, 13, 123, 5])
180
torch.Size([1, 16, 13, 123, 5])
181
torch.Size([1, 16, 13, 123, 5])
182
torch.Size([1, 16, 13, 123, 5])
183
torch.Size([1, 16, 13, 123, 5])
184
torch.Size([1, 16, 13, 123, 5])
185
torch.Size([1, 16, 13, 123, 5])
186
torch.Size([1, 16, 13, 123, 5])
187
torch.Size([1, 16, 13, 123, 5])
188
torch.Size([1, 16, 13, 123, 5])
189
torch.Size([1, 16, 13, 123, 5])
190
torch.Size([1, 16, 13, 123, 5])
191
torch.Size([1, 16, 13, 123, 5])
192
torch.Size([1, 16, 13, 123, 5])
193
torch.Size([1, 16, 13, 123, 5])
194
torch.Size([1, 16, 13, 123, 5])
195
torch.Size([1, 16, 13, 123, 5])
196
torch.Size([1, 16, 13, 123, 5])
197
torch.Size([1, 16, 13, 123, 5])
198
torch.Size([1, 16, 13, 123, 5])
199
torch.Size([1, 16, 13, 123, 5])
200
torch.Size([1, 16, 13, 123, 5])
198
torch.Size([1, 16, 13, 123, 5])
199
torch.Size([1, 16, 13, 123, 5])
200
torch.Size([1, 16, 13, 123, 5])
201
torch.Size([1, 16, 13, 123, 5])
202
torch.Size([1, 16, 13, 123, 5])
203
torch.Size([1, 16, 13, 123, 5])
204
torch.Size([1, 16, 13, 123, 5])
205
torch.Size([1, 16, 13, 123, 5])
206
torch.Size([1, 16, 13, 123, 5])
207
torch.Size([1, 16, 13, 123, 5])
208
torch.Size([1, 16, 13, 123, 5])
209
torch.Size([1, 16, 13, 123, 5])
210
torch.Size([1, 16, 13, 123, 5])
211
torch.Size([1, 16, 13, 123, 5])
212
torch.Size([1, 16, 13, 123, 5])
213
torch.Size([1, 16, 13, 123, 5])
214
torch.Size([1, 16, 13, 123, 5])
215
torch.Size([1, 16, 13, 123, 5])
216
torch.Size([1, 16, 13, 123, 5])
217
torch.Size([1, 16, 13, 123, 5])
218
torch.Size([1, 16, 13, 123, 5])
219
torch.Size([1, 16, 13, 123, 5])
220
torch.Size([1, 16, 13, 123, 5])
221
torch.Size([1, 16, 13, 123, 5])
222
torch.Size([1, 16, 13, 123, 5])
223
torch.Size([1, 16, 13, 123, 5])
224
torch.Size([1, 16, 13, 123, 5])
225
torch.Size([1, 16, 13, 123, 5])
226
torch.Size([1, 16, 13, 123, 5])
227
torch.Size([1, 16, 13, 123, 5])
228
torch.Size([1, 16, 13, 123, 5])
229
torch.Size([1, 16, 13, 123, 5])
230
torch.Size([1, 16, 13, 123, 5])
231
torch.Size([1, 16, 13, 123, 5])
232
torch.Size([1, 16, 13, 123, 5])
233
torch.Size([1, 16, 13, 123, 5])
234
torch.Size([1, 16, 13, 123, 5])
235
torch.Size([1, 16, 13, 123, 5])
236
torch.Size([1, 16, 13, 123, 5])
237
torch.Size([1, 16, 13, 123, 5])
238
torch.Size([1, 16, 13, 123, 5])
239
torch.Size([1, 16, 13, 123, 5])
240
torch.Size([1, 16, 13, 123, 5])
241
torch.Size([1, 16, 13, 123, 5])
242
torch.Size([1, 16, 13, 123, 5])
243
torch.Size([1, 16, 13, 123, 5])
244
torch.Size([1, 16, 13, 123, 5])
245
torch.Size([1, 16, 13, 123, 5])
246
torch.Size([1, 16, 13, 123, 5])
247
torch.Size([1, 16, 13, 123, 5])
248
torch.Size([1, 16, 13, 123, 5])
249
torch.Size([1, 16, 13, 123, 5])
250
torch.Size([1, 16, 13, 123, 5])
251
torch.Size([1, 16, 13, 123, 5])
252
torch.Size([1, 16, 13, 123, 5])
253
torch.Size([1, 16, 13, 123, 5])
254
torch.Size([1, 16, 13, 123, 5])
255
torch.Size([1, 16, 13, 123, 5])
256
torch.Size([1, 16, 13, 123, 5])
257
torch.Size([1, 16, 13, 123, 5])
258
torch.Size([1, 16, 13, 123, 5])
259
torch.Size([1, 16, 13, 123, 5])
260
torch.Size([1, 16, 13, 123, 5])
261
torch.Size([1, 16, 13, 123, 5])
262
torch.Size([1, 16, 13, 123, 5])
263
torch.Size([1, 16, 13, 123, 5])
264
torch.Size([1, 16, 13, 123, 5])
265
torch.Size([1, 16, 13, 123, 5])
266
torch.Size([1, 16, 13, 123, 5])
267
torch.Size([1, 16, 13, 123, 5])
268
torch.Size([1, 16, 13, 123, 5])
269
torch.Size([1, 16, 13, 123, 5])
270
torch.Size([1, 16, 13, 123, 5])
271
torch.Size([1, 16, 13, 123, 5])
272
torch.Size([1, 16, 13, 123, 5])
273
torch.Size([1, 16, 13, 123, 5])
274
torch.Size([1, 16, 13, 123, 5])
275
torch.Size([1, 16, 13, 123, 5])
276
torch.Size([1, 16, 13, 123, 5])
277
torch.Size([1, 16, 13, 123, 5])
278
torch.Size([1, 16, 13, 123, 5])
279
torch.Size([1, 16, 13, 123, 5])
280
torch.Size([1, 16, 13, 123, 5])
281
torch.Size([1, 16, 13, 123, 5])
282
torch.Size([1, 16, 13, 123, 5])
283
torch.Size([1, 16, 13, 123, 5])
284
torch.Size([1, 16, 13, 123, 5])
285
torch.Size([1, 16, 13, 123, 5])
286
torch.Size([1, 16, 13, 123, 5])
287
torch.Size([1, 16, 13, 123, 5])
288
torch.Size([1, 16, 13, 123, 5])
289
torch.Size([1, 16, 13, 123, 5])
290
torch.Size([1, 16, 13, 123, 5])
291
torch.Size([1, 16, 13, 123, 5])
292
torch.Size([1, 16, 13, 123, 5])
293
torch.Size([1, 16, 13, 123, 5])
294
torch.Size([1, 16, 13, 123, 5])
295
torch.Size([1, 16, 13, 123, 5])
296
torch.Size([1, 16, 13, 123, 5])
297
torch.Size([1, 16, 13, 123, 5])
298
torch.Size([1, 16, 13, 123, 5])
299
torch.Size([1, 16, 13, 123, 5])
300
torch.Size([1, 16, 13, 123, 5])
301
torch.Size([1, 16, 13, 123, 5])
302
torch.Size([1, 16, 13, 123, 5])
303
torch.Size([1, 16, 13, 123, 5])
304
torch.Size([1, 16, 13, 123, 5])
305
torch.Size([1, 16, 13, 123, 5])
306
torch.Size([1, 16, 13, 123, 5])
307
torch.Size([1, 16, 13, 123, 5])
308
torch.Size([1, 16, 13, 123, 5])
309
torch.Size([1, 16, 13, 123, 5])
310
torch.Size([1, 16, 13, 123, 5])
311
torch.Size([1, 16, 13, 123, 5])
312
torch.Size([1, 16, 13, 123, 5])
313
torch.Size([1, 16, 13, 123, 5])
314
torch.Size([1, 16, 13, 123, 5])
315
torch.Size([1, 16, 13, 123, 5])
316
torch.Size([1, 16, 13, 123, 5])
317
torch.Size([1, 16, 13, 123, 5])
318
torch.Size([1, 16, 13, 123, 5])
319
torch.Size([1, 16, 13, 123, 5])
320
torch.Size([1, 16, 13, 123, 5])
321
torch.Size([1, 16, 13, 123, 5])
322
torch.Size([1, 16, 13, 123, 5])
323
torch.Size([1, 16, 13, 123, 5])
324
torch.Size([1, 16, 13, 123, 5])
325
torch.Size([1, 16, 13, 123, 5])
326
torch.Size([1, 16, 13, 123, 5])
327
torch.Size([1, 16, 13, 123, 5])
328
torch.Size([1, 16, 13, 123, 5])
329
torch.Size([1, 16, 13, 123, 5])
330
torch.Size([1, 16, 13, 123, 5])
331
torch.Size([1, 16, 13, 123, 5])
332
torch.Size([1, 16, 13, 123, 5])
333
torch.Size([1, 16, 13, 123, 5])
334
torch.Size([1, 16, 13, 123, 5])
335
torch.Size([1, 16, 13, 123, 5])
336
torch.Size([1, 16, 13, 123, 5])
337
torch.Size([1, 16, 13, 123, 5])
338
torch.Size([1, 16, 13, 123, 5])
339
torch.Size([1, 16, 13, 123, 5])
340
torch.Size([1, 16, 13, 123, 5])
341
torch.Size([1, 16, 13, 123, 5])
342
torch.Size([1, 16, 13, 123, 5])
343
torch.Size([1, 16, 13, 123, 5])
344
torch.Size([1, 16, 13, 123, 5])
345
torch.Size([1, 16, 13, 123, 5])
346
torch.Size([1, 16, 13, 123, 5])
347
torch.Size([1, 16, 13, 123, 5])
348
torch.Size([1, 16, 13, 123, 5])
349
torch.Size([1, 16, 13, 123, 5])
350
torch.Size([1, 16, 13, 123, 5])
351
torch.Size([1, 16, 13, 123, 5])
352
torch.Size([1, 16, 13, 123, 5])
353
torch.Size([1, 16, 13, 123, 5])
354
torch.Size([1, 16, 13, 123, 5])
355
torch.Size([1, 16, 13, 123, 5])
356
torch.Size([1, 16, 13, 123, 5])
357
torch.Size([1, 16, 13, 123, 5])
358
torch.Size([1, 16, 13, 123, 5])
359
torch.Size([1, 16, 13, 123, 5])
360
torch.Size([1, 16, 13, 123, 5])
361
torch.Size([1, 16, 13, 123, 5])
362
torch.Size([1, 16, 13, 123, 5])
363
torch.Size([1, 16, 13, 123, 5])
364
torch.Size([1, 16, 13, 123, 5])
365
torch.Size([1, 16, 13, 123, 5])
366
torch.Size([1, 16, 13, 123, 5])
367
torch.Size([1, 16, 13, 123, 5])
368
torch.Size([1, 16, 13, 123, 5])
369
torch.Size([1, 16, 13, 123, 5])
370
torch.Size([1, 16, 13, 123, 5])
371
torch.Size([1, 16, 13, 123, 5])
372
torch.Size([1, 16, 13, 123, 5])
373
torch.Size([1, 16, 13, 123, 5])
374
torch.Size([1, 16, 13, 123, 5])
375
torch.Size([1, 16, 13, 123, 5])
376
torch.Size([1, 16, 13, 123, 5])
377
torch.Size([1, 16, 13, 123, 5])
378
torch.Size([1, 16, 13, 123, 5])
379
torch.Size([1, 16, 13, 123, 5])
380
torch.Size([1, 16, 13, 123, 5])
381
torch.Size([1, 16, 13, 123, 5])
382
torch.Size([1, 16, 13, 123, 5])
383
torch.Size([1, 16, 13, 123, 5])
384
torch.Size([1, 16, 13, 123, 5])
385
torch.Size([1, 16, 13, 123, 5])
386
torch.Size([1, 16, 13, 123, 5])
387
torch.Size([1, 16, 13, 123, 5])
388
torch.Size([1, 16, 13, 123, 5])
389
torch.Size([1, 16, 13, 123, 5])
390
torch.Size([1, 16, 13, 123, 5])
391
torch.Size([1, 16, 13, 123, 5])
392
torch.Size([1, 16, 13, 123, 5])
393
torch.Size([1, 16, 13, 123, 5])
394
torch.Size([1, 16, 13, 123, 5])
395
torch.Size([1, 16, 13, 123, 5])
396
torch.Size([1, 16, 13, 123, 5])
397
torch.Size([1, 16, 13, 123, 5])
398
torch.Size([1, 16, 13, 123, 5])
399
torch.Size([1, 16, 13, 123, 5])
400
torch.Size([1, 16, 13, 123, 5])
401
torch.Size([1, 16, 13, 123, 5])
402
torch.Size([1, 16, 13, 123, 5])
403
torch.Size([1, 16, 13, 123, 5])
404
torch.Size([1, 16, 13, 123, 5])
405
torch.Size([1, 16, 13, 123, 5])
406
torch.Size([1, 16, 13, 123, 5])
407
torch.Size([1, 16, 13, 123, 5])
408
torch.Size([1, 16, 13, 123, 5])
409
torch.Size([1, 16, 13, 123, 5])
410
torch.Size([1, 16, 13, 123, 5])
411
torch.Size([1, 16, 13, 123, 5])
412
torch.Size([1, 16, 13, 123, 5])
413
torch.Size([1, 16, 13, 123, 5])
414
torch.Size([1, 16, 13, 123, 5])
415
torch.Size([1, 16, 13, 123, 5])
416
torch.Size([1, 16, 13, 123, 5])
417
torch.Size([1, 16, 13, 123, 5])
418
torch.Size([1, 16, 13, 123, 5])
419
torch.Size([1, 16, 13, 123, 5])
420
torch.Size([1, 16, 13, 123, 5])
421
torch.Size([1, 16, 13, 123, 5])
422
torch.Size([1, 16, 13, 123, 5])
423
torch.Size([1, 16, 13, 123, 5])
424
torch.Size([1, 16, 13, 123, 5])
201
torch.Size([1, 16, 13, 123, 5])
202
torch.Size([1, 16, 13, 123, 5])
203
torch.Size([1, 16, 13, 123, 5])
204
torch.Size([1, 16, 13, 123, 5])
205
torch.Size([1, 16, 13, 123, 5])
206
torch.Size([1, 16, 13, 123, 5])
207
torch.Size([1, 16, 13, 123, 5])
208
torch.Size([1, 16, 13, 123, 5])
209
torch.Size([1, 16, 13, 123, 5])
210
torch.Size([1, 16, 13, 123, 5])
211
torch.Size([1, 16, 13, 123, 5])
212
torch.Size([1, 16, 13, 123, 5])
213
torch.Size([1, 16, 13, 123, 5])
214
torch.Size([1, 16, 13, 123, 5])
215
torch.Size([1, 16, 13, 123, 5])
216
torch.Size([1, 16, 13, 123, 5])
217
torch.Size([1, 16, 13, 123, 5])
218
torch.Size([1, 16, 13, 123, 5])
219
torch.Size([1, 16, 13, 123, 5])
220
torch.Size([1, 16, 13, 123, 5])
221
torch.Size([1, 16, 13, 123, 5])
222
torch.Size([1, 16, 13, 123, 5])
223
torch.Size([1, 16, 13, 123, 5])
224
torch.Size([1, 16, 13, 123, 5])
225
torch.Size([1, 16, 13, 123, 5])
226
torch.Size([1, 16, 13, 123, 5])
227
torch.Size([1, 16, 13, 123, 5])
228
torch.Size([1, 16, 13, 123, 5])
229
torch.Size([1, 16, 13, 123, 5])
230
torch.Size([1, 16, 13, 123, 5])
231
torch.Size([1, 16, 13, 123, 5])
232
torch.Size([1, 16, 13, 123, 5])
233
torch.Size([1, 16, 13, 123, 5])
234
torch.Size([1, 16, 13, 123, 5])
235
torch.Size([1, 16, 13, 123, 5])
236
torch.Size([1, 16, 13, 123, 5])
237
torch.Size([1, 16, 13, 123, 5])
238
torch.Size([1, 16, 13, 123, 5])
239
torch.Size([1, 16, 13, 123, 5])
240
torch.Size([1, 16, 13, 123, 5])
241
torch.Size([1, 16, 13, 123, 5])
242
torch.Size([1, 16, 13, 123, 5])
243
torch.Size([1, 16, 13, 123, 5])
244
torch.Size([1, 16, 13, 123, 5])
245
torch.Size([1, 16, 13, 123, 5])
246
torch.Size([1, 16, 13, 123, 5])
247
torch.Size([1, 16, 13, 123, 5])
248
torch.Size([1, 16, 13, 123, 5])
249
torch.Size([1, 16, 13, 123, 5])
250
torch.Size([1, 16, 13, 123, 5])
251
torch.Size([1, 16, 13, 123, 5])
252
torch.Size([1, 16, 13, 123, 5])
253
torch.Size([1, 16, 13, 123, 5])
254
torch.Size([1, 16, 13, 123, 5])
255
torch.Size([1, 16, 13, 123, 5])
256
torch.Size([1, 16, 13, 123, 5])
257
torch.Size([1, 16, 13, 123, 5])
258
torch.Size([1, 16, 13, 123, 5])
259
torch.Size([1, 16, 13, 123, 5])
260
torch.Size([1, 16, 13, 123, 5])
261
torch.Size([1, 16, 13, 123, 5])
262
torch.Size([1, 16, 13, 123, 5])
263
torch.Size([1, 16, 13, 123, 5])
264
torch.Size([1, 16, 13, 123, 5])
265
torch.Size([1, 16, 13, 123, 5])
266
torch.Size([1, 16, 13, 123, 5])
267
torch.Size([1, 16, 13, 123, 5])
268
torch.Size([1, 16, 13, 123, 5])
269
torch.Size([1, 16, 13, 123, 5])
270
torch.Size([1, 16, 13, 123, 5])
271
torch.Size([1, 16, 13, 123, 5])
272
torch.Size([1, 16, 13, 123, 5])
273
torch.Size([1, 16, 13, 123, 5])
274
torch.Size([1, 16, 13, 123, 5])
275
torch.Size([1, 16, 13, 123, 5])
276
torch.Size([1, 16, 13, 123, 5])
277
torch.Size([1, 16, 13, 123, 5])
278
torch.Size([1, 16, 13, 123, 5])
279
torch.Size([1, 16, 13, 123, 5])
280
torch.Size([1, 16, 13, 123, 5])
281
torch.Size([1, 16, 13, 123, 5])
282
torch.Size([1, 16, 13, 123, 5])
283
torch.Size([1, 16, 13, 123, 5])
284
torch.Size([1, 16, 13, 123, 5])
285
torch.Size([1, 16, 13, 123, 5])
286
torch.Size([1, 16, 13, 123, 5])
287
torch.Size([1, 16, 13, 123, 5])
288
torch.Size([1, 16, 13, 123, 5])
289
torch.Size([1, 16, 13, 123, 5])
290
torch.Size([1, 16, 13, 123, 5])
291
torch.Size([1, 16, 13, 123, 5])
292
torch.Size([1, 16, 13, 123, 5])
293
torch.Size([1, 16, 13, 123, 5])
294
torch.Size([1, 16, 13, 123, 5])
295
torch.Size([1, 16, 13, 123, 5])
296
torch.Size([1, 16, 13, 123, 5])
297
torch.Size([1, 16, 13, 123, 5])
298
torch.Size([1, 16, 13, 123, 5])
299
torch.Size([1, 16, 13, 123, 5])
300
torch.Size([1, 16, 13, 123, 5])
301
torch.Size([1, 16, 13, 123, 5])
302
torch.Size([1, 16, 13, 123, 5])
303
torch.Size([1, 16, 13, 123, 5])
304
torch.Size([1, 16, 13, 123, 5])
305
torch.Size([1, 16, 13, 123, 5])
306
torch.Size([1, 16, 13, 123, 5])
307
torch.Size([1, 16, 13, 123, 5])
308
torch.Size([1, 16, 13, 123, 5])
309
torch.Size([1, 16, 13, 123, 5])
310
torch.Size([1, 16, 13, 123, 5])
311
torch.Size([1, 16, 13, 123, 5])
312
torch.Size([1, 16, 13, 123, 5])
313
torch.Size([1, 16, 13, 123, 5])
314
torch.Size([1, 16, 13, 123, 5])
315
torch.Size([1, 16, 13, 123, 5])
316
torch.Size([1, 16, 13, 123, 5])
317
torch.Size([1, 16, 13, 123, 5])
318
torch.Size([1, 16, 13, 123, 5])
319
torch.Size([1, 16, 13, 123, 5])
320
torch.Size([1, 16, 13, 123, 5])
321
torch.Size([1, 16, 13, 123, 5])
322
torch.Size([1, 16, 13, 123, 5])
323
torch.Size([1, 16, 13, 123, 5])
324
torch.Size([1, 16, 13, 123, 5])
325
torch.Size([1, 16, 13, 123, 5])
326
torch.Size([1, 16, 13, 123, 5])
327
torch.Size([1, 16, 13, 123, 5])
328
torch.Size([1, 16, 13, 123, 5])
329
torch.Size([1, 16, 13, 123, 5])
330
torch.Size([1, 16, 13, 123, 5])
331
torch.Size([1, 16, 13, 123, 5])
332
torch.Size([1, 16, 13, 123, 5])
333
torch.Size([1, 16, 13, 123, 5])
334
torch.Size([1, 16, 13, 123, 5])
335
torch.Size([1, 16, 13, 123, 5])
336
torch.Size([1, 16, 13, 123, 5])
337
torch.Size([1, 16, 13, 123, 5])
338
torch.Size([1, 16, 13, 123, 5])
339
torch.Size([1, 16, 13, 123, 5])
340
torch.Size([1, 16, 13, 123, 5])
341
torch.Size([1, 16, 13, 123, 5])
342
torch.Size([1, 16, 13, 123, 5])
343
torch.Size([1, 16, 13, 123, 5])
344
torch.Size([1, 16, 13, 123, 5])
345
torch.Size([1, 16, 13, 123, 5])
346
torch.Size([1, 16, 13, 123, 5])
347
torch.Size([1, 16, 13, 123, 5])
348
torch.Size([1, 16, 13, 123, 5])
349
torch.Size([1, 16, 13, 123, 5])
350
torch.Size([1, 16, 13, 123, 5])
351
torch.Size([1, 16, 13, 123, 5])
352
torch.Size([1, 16, 13, 123, 5])
353
torch.Size([1, 16, 13, 123, 5])
354
torch.Size([1, 16, 13, 123, 5])
355
torch.Size([1, 16, 13, 123, 5])
356
torch.Size([1, 16, 13, 123, 5])
357
torch.Size([1, 16, 13, 123, 5])
358
torch.Size([1, 16, 13, 123, 5])
359
torch.Size([1, 16, 13, 123, 5])
360
torch.Size([1, 16, 13, 123, 5])
361
torch.Size([1, 16, 13, 123, 5])
362
torch.Size([1, 16, 13, 123, 5])
363
torch.Size([1, 16, 13, 123, 5])
364
torch.Size([1, 16, 13, 123, 5])
365
torch.Size([1, 16, 13, 123, 5])
366
torch.Size([1, 16, 13, 123, 5])
367
torch.Size([1, 16, 13, 123, 5])
368
torch.Size([1, 16, 13, 123, 5])
369
torch.Size([1, 16, 13, 123, 5])
370
torch.Size([1, 16, 13, 123, 5])
371
torch.Size([1, 16, 13, 123, 5])
372
torch.Size([1, 16, 13, 123, 5])
373
torch.Size([1, 16, 13, 123, 5])
374
torch.Size([1, 16, 13, 123, 5])
375
torch.Size([1, 16, 13, 123, 5])
376
torch.Size([1, 16, 13, 123, 5])
377
torch.Size([1, 16, 13, 123, 5])
378
torch.Size([1, 16, 13, 123, 5])
379
torch.Size([1, 16, 13, 123, 5])
380
torch.Size([1, 16, 13, 123, 5])
381
torch.Size([1, 16, 13, 123, 5])
382
torch.Size([1, 16, 13, 123, 5])
383
torch.Size([1, 16, 13, 123, 5])
384
torch.Size([1, 16, 13, 123, 5])
385
torch.Size([1, 16, 13, 123, 5])
386
torch.Size([1, 16, 13, 123, 5])
387
torch.Size([1, 16, 13, 123, 5])
388
torch.Size([1, 16, 13, 123, 5])
389
torch.Size([1, 16, 13, 123, 5])
390
torch.Size([1, 16, 13, 123, 5])
391
torch.Size([1, 16, 13, 123, 5])
392
torch.Size([1, 16, 13, 123, 5])
393
torch.Size([1, 16, 13, 123, 5])
394
torch.Size([1, 16, 13, 123, 5])
395
torch.Size([1, 16, 13, 123, 5])
396
torch.Size([1, 16, 13, 123, 5])
397
torch.Size([1, 16, 13, 123, 5])
398
torch.Size([1, 16, 13, 123, 5])
399
torch.Size([1, 16, 13, 123, 5])
400
torch.Size([1, 16, 13, 123, 5])
401
torch.Size([1, 16, 13, 123, 5])
402
torch.Size([1, 16, 13, 123, 5])
403
torch.Size([1, 16, 13, 123, 5])
404
torch.Size([1, 16, 13, 123, 5])
405
torch.Size([1, 16, 13, 123, 5])
406
torch.Size([1, 16, 13, 123, 5])
407
torch.Size([1, 16, 13, 123, 5])
408
torch.Size([1, 16, 13, 123, 5])
409
torch.Size([1, 16, 13, 123, 5])
410
torch.Size([1, 16, 13, 123, 5])
411
torch.Size([1, 16, 13, 123, 5])
412
torch.Size([1, 16, 13, 123, 5])
413
torch.Size([1, 16, 13, 123, 5])
414
torch.Size([1, 16, 13, 123, 5])
415
torch.Size([1, 16, 13, 123, 5])
416
torch.Size([1, 16, 13, 123, 5])
417
torch.Size([1, 16, 13, 123, 5])
418
torch.Size([1, 16, 13, 123, 5])
419
torch.Size([1, 16, 13, 123, 5])
420
torch.Size([1, 16, 13, 123, 5])
421
torch.Size([1, 16, 13, 123, 5])
422
torch.Size([1, 16, 13, 123, 5])
423
torch.Size([1, 16, 13, 123, 5])
424
torch.Size([1, 16, 13, 123, 5])
425
torch.Size([1, 16, 13, 123, 5])
426
torch.Size([1, 16, 13, 123, 5])
427
torch.Size([1, 16, 13, 123, 5])
425
torch.Size([1, 16, 13, 123, 5])
426
torch.Size([1, 16, 13, 123, 5])
427
torch.Size([1, 16, 13, 123, 5])
428
torch.Size([1, 16, 13, 123, 5])
429
torch.Size([1, 16, 13, 123, 5])
430
torch.Size([1, 16, 13, 123, 5])
431
torch.Size([1, 16, 13, 123, 5])
432
torch.Size([1, 16, 13, 123, 5])
433
torch.Size([1, 16, 13, 123, 5])
434
torch.Size([1, 16, 13, 123, 5])
435
torch.Size([1, 16, 13, 123, 5])
436
torch.Size([1, 16, 13, 123, 5])
437
torch.Size([1, 16, 13, 123, 5])
438
torch.Size([1, 16, 13, 123, 5])
439
torch.Size([1, 16, 13, 123, 5])
440
torch.Size([1, 16, 13, 123, 5])
441
torch.Size([1, 16, 13, 123, 5])
442
torch.Size([1, 16, 13, 123, 5])
443
torch.Size([1, 16, 13, 123, 5])
444
torch.Size([1, 16, 13, 123, 5])
445
torch.Size([1, 16, 13, 123, 5])
446
torch.Size([1, 16, 13, 123, 5])
447
torch.Size([1, 16, 13, 123, 5])
448
torch.Size([1, 16, 13, 123, 5])
449
torch.Size([1, 16, 13, 123, 5])
450
torch.Size([1, 16, 13, 123, 5])
451
torch.Size([1, 16, 13, 123, 5])
452
torch.Size([1, 16, 13, 123, 5])
453
torch.Size([1, 16, 13, 123, 5])
454
torch.Size([1, 16, 13, 123, 5])
455
torch.Size([1, 16, 13, 123, 5])
456
torch.Size([1, 16, 13, 123, 5])
457
torch.Size([1, 16, 13, 123, 5])
458
torch.Size([1, 16, 13, 123, 5])
459
torch.Size([1, 16, 13, 123, 5])
460
torch.Size([1, 16, 13, 123, 5])
461
torch.Size([1, 16, 13, 123, 5])
462
torch.Size([1, 16, 13, 123, 5])
463
torch.Size([1, 16, 13, 123, 5])
464
torch.Size([1, 16, 13, 123, 5])
465
torch.Size([1, 16, 13, 123, 5])
466
torch.Size([1, 16, 13, 123, 5])
467
torch.Size([1, 16, 13, 123, 5])
468
torch.Size([1, 16, 13, 123, 5])
469
torch.Size([1, 16, 13, 123, 5])
470
torch.Size([1, 16, 13, 123, 5])
471
torch.Size([1, 16, 13, 123, 5])
472
torch.Size([1, 16, 13, 123, 5])
473
torch.Size([1, 16, 13, 123, 5])
474
torch.Size([1, 16, 13, 123, 5])
475
torch.Size([1, 16, 13, 123, 5])
476
torch.Size([1, 16, 13, 123, 5])
477
torch.Size([1, 16, 13, 123, 5])
478
torch.Size([1, 16, 13, 123, 5])
479
torch.Size([1, 16, 13, 123, 5])
480
torch.Size([1, 16, 13, 123, 5])
481
torch.Size([1, 16, 13, 123, 5])
482
torch.Size([1, 16, 13, 123, 5])
483
torch.Size([1, 16, 13, 123, 5])
484
torch.Size([1, 16, 13, 123, 5])
485
torch.Size([1, 16, 13, 123, 5])
486
torch.Size([1, 16, 13, 123, 5])
487
torch.Size([1, 16, 13, 123, 5])
488
torch.Size([1, 16, 13, 123, 5])
489
torch.Size([1, 16, 13, 123, 5])
490
torch.Size([1, 16, 13, 123, 5])
491
torch.Size([1, 16, 13, 123, 5])
492
torch.Size([1, 16, 13, 123, 5])
493
torch.Size([1, 16, 13, 123, 5])
494
torch.Size([1, 16, 13, 123, 5])
495
torch.Size([1, 16, 13, 123, 5])
496
torch.Size([1, 16, 13, 123, 5])
497
torch.Size([1, 16, 13, 123, 5])
498
torch.Size([1, 16, 13, 123, 5])
499
torch.Size([1, 16, 13, 123, 5])
500
torch.Size([1, 16, 13, 123, 5])
501
torch.Size([1, 16, 13, 123, 5])
502
torch.Size([1, 16, 13, 123, 5])
503
torch.Size([1, 16, 13, 123, 5])
504
torch.Size([1, 16, 13, 123, 5])
505
torch.Size([1, 16, 13, 123, 5])
506
torch.Size([1, 16, 13, 123, 5])
507
torch.Size([1, 16, 13, 123, 5])
508
torch.Size([1, 16, 13, 123, 5])
509
torch.Size([1, 16, 13, 123, 5])
510
torch.Size([1, 16, 13, 123, 5])
511
torch.Size([1, 16, 13, 123, 5])
512
torch.Size([1, 16, 13, 123, 5])
513
torch.Size([1, 16, 13, 123, 5])
514
torch.Size([1, 16, 13, 123, 5])
515
torch.Size([1, 16, 13, 123, 5])
516
torch.Size([1, 16, 13, 123, 5])
517
torch.Size([1, 16, 13, 123, 5])
518
torch.Size([1, 16, 13, 123, 5])
519
torch.Size([1, 16, 13, 123, 5])
520
torch.Size([1, 16, 13, 123, 5])
521
torch.Size([1, 16, 13, 123, 5])
522
torch.Size([1, 16, 13, 123, 5])
523
torch.Size([1, 16, 13, 123, 5])
524
torch.Size([1, 16, 13, 123, 5])
525
torch.Size([1, 16, 13, 123, 5])
526
torch.Size([1, 16, 13, 123, 5])
527
torch.Size([1, 16, 13, 123, 5])
528
torch.Size([1, 16, 13, 123, 5])
529
torch.Size([1, 16, 13, 123, 5])
530
In epoch 0, train loss: 0.248 
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
19
torch.Size([1, 16, 13, 123, 5])
20
torch.Size([1, 16, 13, 123, 5])
21
torch.Size([1, 16, 13, 123, 5])
22
torch.Size([1, 16, 13, 123, 5])
23
torch.Size([1, 16, 13, 123, 5])
24
torch.Size([1, 16, 13, 123, 5])
25
torch.Size([1, 16, 13, 123, 5])
26
torch.Size([1, 16, 13, 123, 5])
27
torch.Size([1, 16, 13, 123, 5])
28
torch.Size([1, 16, 13, 123, 5])
29
torch.Size([1, 16, 13, 123, 5])
30
torch.Size([1, 16, 13, 123, 5])
31
torch.Size([1, 16, 13, 123, 5])
32
torch.Size([1, 16, 13, 123, 5])
33
torch.Size([1, 16, 13, 123, 5])
34
torch.Size([1, 16, 13, 123, 5])
35
torch.Size([1, 16, 13, 123, 5])
36
torch.Size([1, 16, 13, 123, 5])
37
torch.Size([1, 16, 13, 123, 5])
38
torch.Size([1, 16, 13, 123, 5])
39
torch.Size([1, 16, 13, 123, 5])
40
torch.Size([1, 16, 13, 123, 5])
41
torch.Size([1, 16, 13, 123, 5])
42
torch.Size([1, 16, 13, 123, 5])
43
torch.Size([1, 16, 13, 123, 5])
44
torch.Size([1, 16, 13, 123, 5])
45
torch.Size([1, 16, 13, 123, 5])
46
torch.Size([1, 16, 13, 123, 5])
47
torch.Size([1, 16, 13, 123, 5])
48
torch.Size([1, 16, 13, 123, 5])
49
torch.Size([1, 16, 13, 123, 5])
50
torch.Size([1, 16, 13, 123, 5])
51
torch.Size([1, 16, 13, 123, 5])
52
torch.Size([1, 16, 13, 123, 5])
53
torch.Size([1, 16, 13, 123, 5])
54
torch.Size([1, 16, 13, 123, 5])
55
torch.Size([1, 16, 13, 123, 5])
56
torch.Size([1, 16, 13, 123, 5])
57
torch.Size([1, 16, 13, 123, 5])
58
torch.Size([1, 16, 13, 123, 5])
59
torch.Size([1, 16, 13, 123, 5])
60
torch.Size([1, 16, 13, 123, 5])
61
torch.Size([1, 16, 13, 123, 5])
62
torch.Size([1, 16, 13, 123, 5])
63
torch.Size([1, 16, 13, 123, 5])
64
torch.Size([1, 16, 13, 123, 5])
65
torch.Size([1, 16, 13, 123, 5])
66
torch.Size([1, 16, 13, 123, 5])
67
torch.Size([1, 16, 13, 123, 5])
68
torch.Size([1, 16, 13, 123, 5])
69
torch.Size([1, 16, 13, 123, 5])
70
torch.Size([1, 16, 13, 123, 5])
71
torch.Size([1, 16, 13, 123, 5])
72
torch.Size([1, 16, 13, 123, 5])
73
torch.Size([1, 16, 13, 123, 5])
74
torch.Size([1, 16, 13, 123, 5])
75
torch.Size([1, 16, 13, 123, 5])
76
torch.Size([1, 16, 13, 123, 5])
77
torch.Size([1, 16, 13, 123, 5])
78
torch.Size([1, 16, 13, 123, 5])
79
torch.Size([1, 16, 13, 123, 5])
80
torch.Size([1, 16, 13, 123, 5])
81
torch.Size([1, 16, 13, 123, 5])
82
torch.Size([1, 16, 13, 123, 5])
83
torch.Size([1, 16, 13, 123, 5])
84
torch.Size([1, 16, 13, 123, 5])
85
torch.Size([1, 16, 13, 123, 5])
86
torch.Size([1, 16, 13, 123, 5])
87
torch.Size([1, 16, 13, 123, 5])
88
torch.Size([1, 16, 13, 123, 5])
89
torch.Size([1, 16, 13, 123, 5])
90
torch.Size([1, 16, 13, 123, 5])
91
torch.Size([1, 16, 13, 123, 5])
92
torch.Size([1, 16, 13, 123, 5])
93
torch.Size([1, 16, 13, 123, 5])
94
torch.Size([1, 16, 13, 123, 5])
95
torch.Size([1, 16, 13, 123, 5])
96
torch.Size([1, 16, 13, 123, 5])
97
torch.Size([1, 16, 13, 123, 5])
98
torch.Size([1, 16, 13, 123, 5])
99
torch.Size([1, 16, 13, 123, 5])
100
torch.Size([1, 16, 13, 123, 5])
101
torch.Size([1, 16, 13, 123, 5])
102
torch.Size([1, 16, 13, 123, 5])
103
torch.Size([1, 16, 13, 123, 5])
104
torch.Size([1, 16, 13, 123, 5])
105
torch.Size([1, 16, 13, 123, 5])
106
torch.Size([1, 16, 13, 123, 5])
107
torch.Size([1, 16, 13, 123, 5])
108
torch.Size([1, 16, 13, 123, 5])
109
torch.Size([1, 16, 13, 123, 5])
110
torch.Size([1, 16, 13, 123, 5])
111
torch.Size([1, 16, 13, 123, 5])
112
torch.Size([1, 16, 13, 123, 5])
113
torch.Size([1, 16, 13, 123, 5])
114
torch.Size([1, 16, 13, 123, 5])
115
torch.Size([1, 16, 13, 123, 5])
116
torch.Size([1, 16, 13, 123, 5])
117
torch.Size([1, 16, 13, 123, 5])
118
torch.Size([1, 16, 13, 123, 5])
119
torch.Size([1, 16, 13, 123, 5])
120
torch.Size([1, 16, 13, 123, 5])
121
torch.Size([1, 16, 13, 123, 5])
122
torch.Size([1, 16, 13, 123, 5])
123
torch.Size([1, 16, 13, 123, 5])
428
torch.Size([1, 16, 13, 123, 5])
429
torch.Size([1, 16, 13, 123, 5])
430
torch.Size([1, 16, 13, 123, 5])
431
torch.Size([1, 16, 13, 123, 5])
432
torch.Size([1, 16, 13, 123, 5])
433
torch.Size([1, 16, 13, 123, 5])
434
torch.Size([1, 16, 13, 123, 5])
435
torch.Size([1, 16, 13, 123, 5])
436
torch.Size([1, 16, 13, 123, 5])
437
torch.Size([1, 16, 13, 123, 5])
438
torch.Size([1, 16, 13, 123, 5])
439
torch.Size([1, 16, 13, 123, 5])
440
torch.Size([1, 16, 13, 123, 5])
441
torch.Size([1, 16, 13, 123, 5])
442
torch.Size([1, 16, 13, 123, 5])
443
torch.Size([1, 16, 13, 123, 5])
444
torch.Size([1, 16, 13, 123, 5])
445
torch.Size([1, 16, 13, 123, 5])
446
torch.Size([1, 16, 13, 123, 5])
447
torch.Size([1, 16, 13, 123, 5])
448
torch.Size([1, 16, 13, 123, 5])
449
torch.Size([1, 16, 13, 123, 5])
450
torch.Size([1, 16, 13, 123, 5])
451
torch.Size([1, 16, 13, 123, 5])
452
torch.Size([1, 16, 13, 123, 5])
453
torch.Size([1, 16, 13, 123, 5])
454
torch.Size([1, 16, 13, 123, 5])
455
torch.Size([1, 16, 13, 123, 5])
456
torch.Size([1, 16, 13, 123, 5])
457
torch.Size([1, 16, 13, 123, 5])
458
torch.Size([1, 16, 13, 123, 5])
459
torch.Size([1, 16, 13, 123, 5])
460
torch.Size([1, 16, 13, 123, 5])
461
torch.Size([1, 16, 13, 123, 5])
462
torch.Size([1, 16, 13, 123, 5])
463
torch.Size([1, 16, 13, 123, 5])
464
torch.Size([1, 16, 13, 123, 5])
465
torch.Size([1, 16, 13, 123, 5])
466
torch.Size([1, 16, 13, 123, 5])
467
torch.Size([1, 16, 13, 123, 5])
468
torch.Size([1, 16, 13, 123, 5])
469
torch.Size([1, 16, 13, 123, 5])
470
torch.Size([1, 16, 13, 123, 5])
471
torch.Size([1, 16, 13, 123, 5])
472
torch.Size([1, 16, 13, 123, 5])
473
torch.Size([1, 16, 13, 123, 5])
474
torch.Size([1, 16, 13, 123, 5])
475
torch.Size([1, 16, 13, 123, 5])
476
torch.Size([1, 16, 13, 123, 5])
477
torch.Size([1, 16, 13, 123, 5])
478
torch.Size([1, 16, 13, 123, 5])
479
torch.Size([1, 16, 13, 123, 5])
480
torch.Size([1, 16, 13, 123, 5])
481
torch.Size([1, 16, 13, 123, 5])
482
torch.Size([1, 16, 13, 123, 5])
483
torch.Size([1, 16, 13, 123, 5])
484
torch.Size([1, 16, 13, 123, 5])
485
torch.Size([1, 16, 13, 123, 5])
486
torch.Size([1, 16, 13, 123, 5])
487
torch.Size([1, 16, 13, 123, 5])
488
torch.Size([1, 16, 13, 123, 5])
489
torch.Size([1, 16, 13, 123, 5])
490
torch.Size([1, 16, 13, 123, 5])
491
torch.Size([1, 16, 13, 123, 5])
492
torch.Size([1, 16, 13, 123, 5])
493
torch.Size([1, 16, 13, 123, 5])
494
torch.Size([1, 16, 13, 123, 5])
495
torch.Size([1, 16, 13, 123, 5])
496
torch.Size([1, 16, 13, 123, 5])
497
torch.Size([1, 16, 13, 123, 5])
498
torch.Size([1, 16, 13, 123, 5])
499
torch.Size([1, 16, 13, 123, 5])
500
torch.Size([1, 16, 13, 123, 5])
501
torch.Size([1, 16, 13, 123, 5])
502
torch.Size([1, 16, 13, 123, 5])
503
torch.Size([1, 16, 13, 123, 5])
504
torch.Size([1, 16, 13, 123, 5])
505
torch.Size([1, 16, 13, 123, 5])
506
torch.Size([1, 16, 13, 123, 5])
507
torch.Size([1, 16, 13, 123, 5])
508
torch.Size([1, 16, 13, 123, 5])
509
torch.Size([1, 16, 13, 123, 5])
510
torch.Size([1, 16, 13, 123, 5])
511
torch.Size([1, 16, 13, 123, 5])
512
torch.Size([1, 16, 13, 123, 5])
513
torch.Size([1, 16, 13, 123, 5])
514
torch.Size([1, 16, 13, 123, 5])
515
torch.Size([1, 16, 13, 123, 5])
516
torch.Size([1, 16, 13, 123, 5])
517
torch.Size([1, 16, 13, 123, 5])
518
torch.Size([1, 16, 13, 123, 5])
519
torch.Size([1, 16, 13, 123, 5])
520
torch.Size([1, 16, 13, 123, 5])
521
torch.Size([1, 16, 13, 123, 5])
522
torch.Size([1, 16, 13, 123, 5])
523
torch.Size([1, 16, 13, 123, 5])
524
torch.Size([1, 16, 13, 123, 5])
525
torch.Size([1, 16, 13, 123, 5])
526
torch.Size([1, 16, 13, 123, 5])
527
torch.Size([1, 16, 13, 123, 5])
528
torch.Size([1, 16, 13, 123, 5])
529
torch.Size([1, 16, 13, 123, 5])
530
In epoch 0, train loss: 0.248 
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
19
torch.Size([1, 16, 13, 123, 5])
20
torch.Size([1, 16, 13, 123, 5])
21
torch.Size([1, 16, 13, 123, 5])
22
torch.Size([1, 16, 13, 123, 5])
23
torch.Size([1, 16, 13, 123, 5])
24
torch.Size([1, 16, 13, 123, 5])
25
torch.Size([1, 16, 13, 123, 5])
26
torch.Size([1, 16, 13, 123, 5])
27
torch.Size([1, 16, 13, 123, 5])
28
torch.Size([1, 16, 13, 123, 5])
29
torch.Size([1, 16, 13, 123, 5])
30
torch.Size([1, 16, 13, 123, 5])
31
torch.Size([1, 16, 13, 123, 5])
32
torch.Size([1, 16, 13, 123, 5])
33
torch.Size([1, 16, 13, 123, 5])
34
torch.Size([1, 16, 13, 123, 5])
35
torch.Size([1, 16, 13, 123, 5])
36
torch.Size([1, 16, 13, 123, 5])
37
torch.Size([1, 16, 13, 123, 5])
38
torch.Size([1, 16, 13, 123, 5])
39
torch.Size([1, 16, 13, 123, 5])
40
torch.Size([1, 16, 13, 123, 5])
41
torch.Size([1, 16, 13, 123, 5])
42
torch.Size([1, 16, 13, 123, 5])
43
torch.Size([1, 16, 13, 123, 5])
44
torch.Size([1, 16, 13, 123, 5])
45
torch.Size([1, 16, 13, 123, 5])
46
torch.Size([1, 16, 13, 123, 5])
47
torch.Size([1, 16, 13, 123, 5])
48
torch.Size([1, 16, 13, 123, 5])
49
torch.Size([1, 16, 13, 123, 5])
50
torch.Size([1, 16, 13, 123, 5])
51
torch.Size([1, 16, 13, 123, 5])
52
torch.Size([1, 16, 13, 123, 5])
53
torch.Size([1, 16, 13, 123, 5])
54
torch.Size([1, 16, 13, 123, 5])
55
torch.Size([1, 16, 13, 123, 5])
56
torch.Size([1, 16, 13, 123, 5])
57
torch.Size([1, 16, 13, 123, 5])
58
torch.Size([1, 16, 13, 123, 5])
59
torch.Size([1, 16, 13, 123, 5])
60
torch.Size([1, 16, 13, 123, 5])
61
torch.Size([1, 16, 13, 123, 5])
62
torch.Size([1, 16, 13, 123, 5])
63
torch.Size([1, 16, 13, 123, 5])
64
torch.Size([1, 16, 13, 123, 5])
65
torch.Size([1, 16, 13, 123, 5])
66
torch.Size([1, 16, 13, 123, 5])
67
torch.Size([1, 16, 13, 123, 5])
68
torch.Size([1, 16, 13, 123, 5])
69
torch.Size([1, 16, 13, 123, 5])
70
torch.Size([1, 16, 13, 123, 5])
71
torch.Size([1, 16, 13, 123, 5])
72
torch.Size([1, 16, 13, 123, 5])
73
torch.Size([1, 16, 13, 123, 5])
74
torch.Size([1, 16, 13, 123, 5])
75
torch.Size([1, 16, 13, 123, 5])
76
torch.Size([1, 16, 13, 123, 5])
77
torch.Size([1, 16, 13, 123, 5])
78
torch.Size([1, 16, 13, 123, 5])
79
torch.Size([1, 16, 13, 123, 5])
80
torch.Size([1, 16, 13, 123, 5])
81
torch.Size([1, 16, 13, 123, 5])
82
torch.Size([1, 16, 13, 123, 5])
83
torch.Size([1, 16, 13, 123, 5])
84
torch.Size([1, 16, 13, 123, 5])
85
torch.Size([1, 16, 13, 123, 5])
86
torch.Size([1, 16, 13, 123, 5])
87
torch.Size([1, 16, 13, 123, 5])
88
torch.Size([1, 16, 13, 123, 5])
89
torch.Size([1, 16, 13, 123, 5])
90
torch.Size([1, 16, 13, 123, 5])
91
torch.Size([1, 16, 13, 123, 5])
92
torch.Size([1, 16, 13, 123, 5])
93
torch.Size([1, 16, 13, 123, 5])
94
torch.Size([1, 16, 13, 123, 5])
95
torch.Size([1, 16, 13, 123, 5])
96
torch.Size([1, 16, 13, 123, 5])
97
torch.Size([1, 16, 13, 123, 5])
98
torch.Size([1, 16, 13, 123, 5])
99
torch.Size([1, 16, 13, 123, 5])
100
torch.Size([1, 16, 13, 123, 5])
101
torch.Size([1, 16, 13, 123, 5])
102
torch.Size([1, 16, 13, 123, 5])
103
torch.Size([1, 16, 13, 123, 5])
104
torch.Size([1, 16, 13, 123, 5])
105
torch.Size([1, 16, 13, 123, 5])
106
torch.Size([1, 16, 13, 123, 5])
107
torch.Size([1, 16, 13, 123, 5])
108
torch.Size([1, 16, 13, 123, 5])
109
torch.Size([1, 16, 13, 123, 5])
110
torch.Size([1, 16, 13, 123, 5])
111
torch.Size([1, 16, 13, 123, 5])
112
torch.Size([1, 16, 13, 123, 5])
113
torch.Size([1, 16, 13, 123, 5])
114
torch.Size([1, 16, 13, 123, 5])
115
torch.Size([1, 16, 13, 123, 5])
116
torch.Size([1, 16, 13, 123, 5])
117
torch.Size([1, 16, 13, 123, 5])
118
torch.Size([1, 16, 13, 123, 5])
119
torch.Size([1, 16, 13, 123, 5])
120
torch.Size([1, 16, 13, 123, 5])
121
torch.Size([1, 16, 13, 123, 5])
122
torch.Size([1, 16, 13, 123, 5])
123
torch.Size([1, 16, 13, 123, 5])
124
torch.Size([1, 16, 13, 123, 5])
125
torch.Size([1, 16, 13, 123, 5])
126
torch.Size([1, 16, 13, 123, 5])
124
torch.Size([1, 16, 13, 123, 5])
125
torch.Size([1, 16, 13, 123, 5])
126
torch.Size([1, 16, 13, 123, 5])
127
torch.Size([1, 16, 13, 123, 5])
128
torch.Size([1, 16, 13, 123, 5])
129
torch.Size([1, 16, 13, 123, 5])
130
torch.Size([1, 16, 13, 123, 5])
131
torch.Size([1, 16, 13, 123, 5])
132
torch.Size([1, 16, 13, 123, 5])
133
torch.Size([1, 16, 13, 123, 5])
134
torch.Size([1, 16, 13, 123, 5])
135
torch.Size([1, 16, 13, 123, 5])
136
torch.Size([1, 16, 13, 123, 5])
137
torch.Size([1, 16, 13, 123, 5])
138
torch.Size([1, 16, 13, 123, 5])
139
torch.Size([1, 16, 13, 123, 5])
140
torch.Size([1, 16, 13, 123, 5])
141
torch.Size([1, 16, 13, 123, 5])
142
torch.Size([1, 16, 13, 123, 5])
143
torch.Size([1, 16, 13, 123, 5])
144
torch.Size([1, 16, 13, 123, 5])
145
torch.Size([1, 16, 13, 123, 5])
146
torch.Size([1, 16, 13, 123, 5])
147
torch.Size([1, 16, 13, 123, 5])
148
torch.Size([1, 16, 13, 123, 5])
149
torch.Size([1, 16, 13, 123, 5])
150
torch.Size([1, 16, 13, 123, 5])
151
torch.Size([1, 16, 13, 123, 5])
152
torch.Size([1, 16, 13, 123, 5])
153
torch.Size([1, 16, 13, 123, 5])
154
torch.Size([1, 16, 13, 123, 5])
155
torch.Size([1, 16, 13, 123, 5])
156
torch.Size([1, 16, 13, 123, 5])
157
torch.Size([1, 16, 13, 123, 5])
158
torch.Size([1, 16, 13, 123, 5])
159
torch.Size([1, 16, 13, 123, 5])
160
torch.Size([1, 16, 13, 123, 5])
161
torch.Size([1, 16, 13, 123, 5])
162
torch.Size([1, 16, 13, 123, 5])
163
torch.Size([1, 16, 13, 123, 5])
164
torch.Size([1, 16, 13, 123, 5])
165
torch.Size([1, 16, 13, 123, 5])
166
torch.Size([1, 16, 13, 123, 5])
167
torch.Size([1, 16, 13, 123, 5])
168
torch.Size([1, 16, 13, 123, 5])
169
torch.Size([1, 16, 13, 123, 5])
170
torch.Size([1, 16, 13, 123, 5])
171
torch.Size([1, 16, 13, 123, 5])
172
torch.Size([1, 16, 13, 123, 5])
173
torch.Size([1, 16, 13, 123, 5])
174
torch.Size([1, 16, 13, 123, 5])
175
torch.Size([1, 16, 13, 123, 5])
176
torch.Size([1, 16, 13, 123, 5])
177
torch.Size([1, 16, 13, 123, 5])
178
torch.Size([1, 16, 13, 123, 5])
179
torch.Size([1, 16, 13, 123, 5])
180
torch.Size([1, 16, 13, 123, 5])
181
torch.Size([1, 16, 13, 123, 5])
182
torch.Size([1, 16, 13, 123, 5])
183
torch.Size([1, 16, 13, 123, 5])
184
torch.Size([1, 16, 13, 123, 5])
185
torch.Size([1, 16, 13, 123, 5])
186
torch.Size([1, 16, 13, 123, 5])
187
torch.Size([1, 16, 13, 123, 5])
188
torch.Size([1, 16, 13, 123, 5])
189
torch.Size([1, 16, 13, 123, 5])
190
torch.Size([1, 16, 13, 123, 5])
191
torch.Size([1, 16, 13, 123, 5])
192
torch.Size([1, 16, 13, 123, 5])
193
torch.Size([1, 16, 13, 123, 5])
194
torch.Size([1, 16, 13, 123, 5])
195
torch.Size([1, 16, 13, 123, 5])
196
torch.Size([1, 16, 13, 123, 5])
197
torch.Size([1, 16, 13, 123, 5])
198
torch.Size([1, 16, 13, 123, 5])
199
torch.Size([1, 16, 13, 123, 5])
200
torch.Size([1, 16, 13, 123, 5])
201
torch.Size([1, 16, 13, 123, 5])
202
torch.Size([1, 16, 13, 123, 5])
203
torch.Size([1, 16, 13, 123, 5])
204
torch.Size([1, 16, 13, 123, 5])
205
torch.Size([1, 16, 13, 123, 5])
206
torch.Size([1, 16, 13, 123, 5])
207
torch.Size([1, 16, 13, 123, 5])
208
torch.Size([1, 16, 13, 123, 5])
209
torch.Size([1, 16, 13, 123, 5])
210
torch.Size([1, 16, 13, 123, 5])
211
torch.Size([1, 16, 13, 123, 5])
212
torch.Size([1, 16, 13, 123, 5])
213
torch.Size([1, 16, 13, 123, 5])
214
torch.Size([1, 16, 13, 123, 5])
215
torch.Size([1, 16, 13, 123, 5])
216
torch.Size([1, 16, 13, 123, 5])
217
torch.Size([1, 16, 13, 123, 5])
218
torch.Size([1, 16, 13, 123, 5])
219
torch.Size([1, 16, 13, 123, 5])
220
torch.Size([1, 16, 13, 123, 5])
221
torch.Size([1, 16, 13, 123, 5])
222
torch.Size([1, 16, 13, 123, 5])
223
torch.Size([1, 16, 13, 123, 5])
224
torch.Size([1, 16, 13, 123, 5])
225
torch.Size([1, 16, 13, 123, 5])
226
torch.Size([1, 16, 13, 123, 5])
227
torch.Size([1, 16, 13, 123, 5])
228
torch.Size([1, 16, 13, 123, 5])
229
torch.Size([1, 16, 13, 123, 5])
230
torch.Size([1, 16, 13, 123, 5])
231
torch.Size([1, 16, 13, 123, 5])
232
torch.Size([1, 16, 13, 123, 5])
233
torch.Size([1, 16, 13, 123, 5])
234
torch.Size([1, 16, 13, 123, 5])
235
torch.Size([1, 16, 13, 123, 5])
236
torch.Size([1, 16, 13, 123, 5])
237
torch.Size([1, 16, 13, 123, 5])
238
torch.Size([1, 16, 13, 123, 5])
239
torch.Size([1, 16, 13, 123, 5])
240
torch.Size([1, 16, 13, 123, 5])
241
torch.Size([1, 16, 13, 123, 5])
242
torch.Size([1, 16, 13, 123, 5])
243
torch.Size([1, 16, 13, 123, 5])
244
torch.Size([1, 16, 13, 123, 5])
245
torch.Size([1, 16, 13, 123, 5])
246
torch.Size([1, 16, 13, 123, 5])
247
torch.Size([1, 16, 13, 123, 5])
248
torch.Size([1, 16, 13, 123, 5])
249
torch.Size([1, 16, 13, 123, 5])
250
torch.Size([1, 16, 13, 123, 5])
251
torch.Size([1, 16, 13, 123, 5])
252
torch.Size([1, 16, 13, 123, 5])
253
torch.Size([1, 16, 13, 123, 5])
254
torch.Size([1, 16, 13, 123, 5])
255
torch.Size([1, 16, 13, 123, 5])
256
torch.Size([1, 16, 13, 123, 5])
257
torch.Size([1, 16, 13, 123, 5])
258
torch.Size([1, 16, 13, 123, 5])
259
torch.Size([1, 16, 13, 123, 5])
260
torch.Size([1, 16, 13, 123, 5])
261
torch.Size([1, 16, 13, 123, 5])
262
torch.Size([1, 16, 13, 123, 5])
263
torch.Size([1, 16, 13, 123, 5])
264
torch.Size([1, 16, 13, 123, 5])
265
torch.Size([1, 16, 13, 123, 5])
266
torch.Size([1, 16, 13, 123, 5])
267
torch.Size([1, 16, 13, 123, 5])
268
torch.Size([1, 16, 13, 123, 5])
269
torch.Size([1, 16, 13, 123, 5])
270
torch.Size([1, 16, 13, 123, 5])
271
torch.Size([1, 16, 13, 123, 5])
272
torch.Size([1, 16, 13, 123, 5])
273
torch.Size([1, 16, 13, 123, 5])
274
torch.Size([1, 16, 13, 123, 5])
275
torch.Size([1, 16, 13, 123, 5])
276
torch.Size([1, 16, 13, 123, 5])
277
torch.Size([1, 16, 13, 123, 5])
278
torch.Size([1, 16, 13, 123, 5])
279
torch.Size([1, 16, 13, 123, 5])
280
torch.Size([1, 16, 13, 123, 5])
281
torch.Size([1, 16, 13, 123, 5])
282
torch.Size([1, 16, 13, 123, 5])
283
torch.Size([1, 16, 13, 123, 5])
284
torch.Size([1, 16, 13, 123, 5])
285
torch.Size([1, 16, 13, 123, 5])
286
torch.Size([1, 16, 13, 123, 5])
287
torch.Size([1, 16, 13, 123, 5])
288
torch.Size([1, 16, 13, 123, 5])
289
torch.Size([1, 16, 13, 123, 5])
290
torch.Size([1, 16, 13, 123, 5])
291
torch.Size([1, 16, 13, 123, 5])
292
torch.Size([1, 16, 13, 123, 5])
293
torch.Size([1, 16, 13, 123, 5])
294
torch.Size([1, 16, 13, 123, 5])
295
torch.Size([1, 16, 13, 123, 5])
296
torch.Size([1, 16, 13, 123, 5])
297
torch.Size([1, 16, 13, 123, 5])
298
torch.Size([1, 16, 13, 123, 5])
299
torch.Size([1, 16, 13, 123, 5])
300
torch.Size([1, 16, 13, 123, 5])
301
torch.Size([1, 16, 13, 123, 5])
302
torch.Size([1, 16, 13, 123, 5])
303
torch.Size([1, 16, 13, 123, 5])
304
torch.Size([1, 16, 13, 123, 5])
305
torch.Size([1, 16, 13, 123, 5])
306
torch.Size([1, 16, 13, 123, 5])
307
torch.Size([1, 16, 13, 123, 5])
308
torch.Size([1, 16, 13, 123, 5])
309
torch.Size([1, 16, 13, 123, 5])
310
torch.Size([1, 16, 13, 123, 5])
311
torch.Size([1, 16, 13, 123, 5])
312
torch.Size([1, 16, 13, 123, 5])
313
torch.Size([1, 16, 13, 123, 5])
314
torch.Size([1, 16, 13, 123, 5])
315
torch.Size([1, 16, 13, 123, 5])
316
torch.Size([1, 16, 13, 123, 5])
317
torch.Size([1, 16, 13, 123, 5])
318
torch.Size([1, 16, 13, 123, 5])
319
torch.Size([1, 16, 13, 123, 5])
320
torch.Size([1, 16, 13, 123, 5])
321
torch.Size([1, 16, 13, 123, 5])
322
torch.Size([1, 16, 13, 123, 5])
323
torch.Size([1, 16, 13, 123, 5])
324
torch.Size([1, 16, 13, 123, 5])
325
torch.Size([1, 16, 13, 123, 5])
326
torch.Size([1, 16, 13, 123, 5])
327
torch.Size([1, 16, 13, 123, 5])
328
torch.Size([1, 16, 13, 123, 5])
329
torch.Size([1, 16, 13, 123, 5])
330
torch.Size([1, 16, 13, 123, 5])
331
torch.Size([1, 16, 13, 123, 5])
332
torch.Size([1, 16, 13, 123, 5])
333
torch.Size([1, 16, 13, 123, 5])
334
torch.Size([1, 16, 13, 123, 5])
335
torch.Size([1, 16, 13, 123, 5])
336
torch.Size([1, 16, 13, 123, 5])
337
torch.Size([1, 16, 13, 123, 5])
338
torch.Size([1, 16, 13, 123, 5])
339
torch.Size([1, 16, 13, 123, 5])
340
torch.Size([1, 16, 13, 123, 5])
341
torch.Size([1, 16, 13, 123, 5])
342
torch.Size([1, 16, 13, 123, 5])
343
torch.Size([1, 16, 13, 123, 5])
344
torch.Size([1, 16, 13, 123, 5])
345
torch.Size([1, 16, 13, 123, 5])
346
torch.Size([1, 16, 13, 123, 5])
347
torch.Size([1, 16, 13, 123, 5])
348
torch.Size([1, 16, 13, 123, 5])
349
torch.Size([1, 16, 13, 123, 5])
350
torch.Size([1, 16, 13, 123, 5])
127
torch.Size([1, 16, 13, 123, 5])
128
torch.Size([1, 16, 13, 123, 5])
129
torch.Size([1, 16, 13, 123, 5])
130
torch.Size([1, 16, 13, 123, 5])
131
torch.Size([1, 16, 13, 123, 5])
132
torch.Size([1, 16, 13, 123, 5])
133
torch.Size([1, 16, 13, 123, 5])
134
torch.Size([1, 16, 13, 123, 5])
135
torch.Size([1, 16, 13, 123, 5])
136
torch.Size([1, 16, 13, 123, 5])
137
torch.Size([1, 16, 13, 123, 5])
138
torch.Size([1, 16, 13, 123, 5])
139
torch.Size([1, 16, 13, 123, 5])
140
torch.Size([1, 16, 13, 123, 5])
141
torch.Size([1, 16, 13, 123, 5])
142
torch.Size([1, 16, 13, 123, 5])
143
torch.Size([1, 16, 13, 123, 5])
144
torch.Size([1, 16, 13, 123, 5])
145
torch.Size([1, 16, 13, 123, 5])
146
torch.Size([1, 16, 13, 123, 5])
147
torch.Size([1, 16, 13, 123, 5])
148
torch.Size([1, 16, 13, 123, 5])
149
torch.Size([1, 16, 13, 123, 5])
150
torch.Size([1, 16, 13, 123, 5])
151
torch.Size([1, 16, 13, 123, 5])
152
torch.Size([1, 16, 13, 123, 5])
153
torch.Size([1, 16, 13, 123, 5])
154
torch.Size([1, 16, 13, 123, 5])
155
torch.Size([1, 16, 13, 123, 5])
156
torch.Size([1, 16, 13, 123, 5])
157
torch.Size([1, 16, 13, 123, 5])
158
torch.Size([1, 16, 13, 123, 5])
159
torch.Size([1, 16, 13, 123, 5])
160
torch.Size([1, 16, 13, 123, 5])
161
torch.Size([1, 16, 13, 123, 5])
162
torch.Size([1, 16, 13, 123, 5])
163
torch.Size([1, 16, 13, 123, 5])
164
torch.Size([1, 16, 13, 123, 5])
165
torch.Size([1, 16, 13, 123, 5])
166
torch.Size([1, 16, 13, 123, 5])
167
torch.Size([1, 16, 13, 123, 5])
168
torch.Size([1, 16, 13, 123, 5])
169
torch.Size([1, 16, 13, 123, 5])
170
torch.Size([1, 16, 13, 123, 5])
171
torch.Size([1, 16, 13, 123, 5])
172
torch.Size([1, 16, 13, 123, 5])
173
torch.Size([1, 16, 13, 123, 5])
174
torch.Size([1, 16, 13, 123, 5])
175
torch.Size([1, 16, 13, 123, 5])
176
torch.Size([1, 16, 13, 123, 5])
177
torch.Size([1, 16, 13, 123, 5])
178
torch.Size([1, 16, 13, 123, 5])
179
torch.Size([1, 16, 13, 123, 5])
180
torch.Size([1, 16, 13, 123, 5])
181
torch.Size([1, 16, 13, 123, 5])
182
torch.Size([1, 16, 13, 123, 5])
183
torch.Size([1, 16, 13, 123, 5])
184
torch.Size([1, 16, 13, 123, 5])
185
torch.Size([1, 16, 13, 123, 5])
186
torch.Size([1, 16, 13, 123, 5])
187
torch.Size([1, 16, 13, 123, 5])
188
torch.Size([1, 16, 13, 123, 5])
189
torch.Size([1, 16, 13, 123, 5])
190
torch.Size([1, 16, 13, 123, 5])
191
torch.Size([1, 16, 13, 123, 5])
192
torch.Size([1, 16, 13, 123, 5])
193
torch.Size([1, 16, 13, 123, 5])
194
torch.Size([1, 16, 13, 123, 5])
195
torch.Size([1, 16, 13, 123, 5])
196
torch.Size([1, 16, 13, 123, 5])
197
torch.Size([1, 16, 13, 123, 5])
198
torch.Size([1, 16, 13, 123, 5])
199
torch.Size([1, 16, 13, 123, 5])
200
torch.Size([1, 16, 13, 123, 5])
201
torch.Size([1, 16, 13, 123, 5])
202
torch.Size([1, 16, 13, 123, 5])
203
torch.Size([1, 16, 13, 123, 5])
204
torch.Size([1, 16, 13, 123, 5])
205
torch.Size([1, 16, 13, 123, 5])
206
torch.Size([1, 16, 13, 123, 5])
207
torch.Size([1, 16, 13, 123, 5])
208
torch.Size([1, 16, 13, 123, 5])
209
torch.Size([1, 16, 13, 123, 5])
210
torch.Size([1, 16, 13, 123, 5])
211
torch.Size([1, 16, 13, 123, 5])
212
torch.Size([1, 16, 13, 123, 5])
213
torch.Size([1, 16, 13, 123, 5])
214
torch.Size([1, 16, 13, 123, 5])
215
torch.Size([1, 16, 13, 123, 5])
216
torch.Size([1, 16, 13, 123, 5])
217
torch.Size([1, 16, 13, 123, 5])
218
torch.Size([1, 16, 13, 123, 5])
219
torch.Size([1, 16, 13, 123, 5])
220
torch.Size([1, 16, 13, 123, 5])
221
torch.Size([1, 16, 13, 123, 5])
222
torch.Size([1, 16, 13, 123, 5])
223
torch.Size([1, 16, 13, 123, 5])
224
torch.Size([1, 16, 13, 123, 5])
225
torch.Size([1, 16, 13, 123, 5])
226
torch.Size([1, 16, 13, 123, 5])
227
torch.Size([1, 16, 13, 123, 5])
228
torch.Size([1, 16, 13, 123, 5])
229
torch.Size([1, 16, 13, 123, 5])
230
torch.Size([1, 16, 13, 123, 5])
231
torch.Size([1, 16, 13, 123, 5])
232
torch.Size([1, 16, 13, 123, 5])
233
torch.Size([1, 16, 13, 123, 5])
234
torch.Size([1, 16, 13, 123, 5])
235
torch.Size([1, 16, 13, 123, 5])
236
torch.Size([1, 16, 13, 123, 5])
237
torch.Size([1, 16, 13, 123, 5])
238
torch.Size([1, 16, 13, 123, 5])
239
torch.Size([1, 16, 13, 123, 5])
240
torch.Size([1, 16, 13, 123, 5])
241
torch.Size([1, 16, 13, 123, 5])
242
torch.Size([1, 16, 13, 123, 5])
243
torch.Size([1, 16, 13, 123, 5])
244
torch.Size([1, 16, 13, 123, 5])
245
torch.Size([1, 16, 13, 123, 5])
246
torch.Size([1, 16, 13, 123, 5])
247
torch.Size([1, 16, 13, 123, 5])
248
torch.Size([1, 16, 13, 123, 5])
249
torch.Size([1, 16, 13, 123, 5])
250
torch.Size([1, 16, 13, 123, 5])
251
torch.Size([1, 16, 13, 123, 5])
252
torch.Size([1, 16, 13, 123, 5])
253
torch.Size([1, 16, 13, 123, 5])
254
torch.Size([1, 16, 13, 123, 5])
255
torch.Size([1, 16, 13, 123, 5])
256
torch.Size([1, 16, 13, 123, 5])
257
torch.Size([1, 16, 13, 123, 5])
258
torch.Size([1, 16, 13, 123, 5])
259
torch.Size([1, 16, 13, 123, 5])
260
torch.Size([1, 16, 13, 123, 5])
261
torch.Size([1, 16, 13, 123, 5])
262
torch.Size([1, 16, 13, 123, 5])
263
torch.Size([1, 16, 13, 123, 5])
264
torch.Size([1, 16, 13, 123, 5])
265
torch.Size([1, 16, 13, 123, 5])
266
torch.Size([1, 16, 13, 123, 5])
267
torch.Size([1, 16, 13, 123, 5])
268
torch.Size([1, 16, 13, 123, 5])
269
torch.Size([1, 16, 13, 123, 5])
270
torch.Size([1, 16, 13, 123, 5])
271
torch.Size([1, 16, 13, 123, 5])
272
torch.Size([1, 16, 13, 123, 5])
273
torch.Size([1, 16, 13, 123, 5])
274
torch.Size([1, 16, 13, 123, 5])
275
torch.Size([1, 16, 13, 123, 5])
276
torch.Size([1, 16, 13, 123, 5])
277
torch.Size([1, 16, 13, 123, 5])
278
torch.Size([1, 16, 13, 123, 5])
279
torch.Size([1, 16, 13, 123, 5])
280
torch.Size([1, 16, 13, 123, 5])
281
torch.Size([1, 16, 13, 123, 5])
282
torch.Size([1, 16, 13, 123, 5])
283
torch.Size([1, 16, 13, 123, 5])
284
torch.Size([1, 16, 13, 123, 5])
285
torch.Size([1, 16, 13, 123, 5])
286
torch.Size([1, 16, 13, 123, 5])
287
torch.Size([1, 16, 13, 123, 5])
288
torch.Size([1, 16, 13, 123, 5])
289
torch.Size([1, 16, 13, 123, 5])
290
torch.Size([1, 16, 13, 123, 5])
291
torch.Size([1, 16, 13, 123, 5])
292
torch.Size([1, 16, 13, 123, 5])
293
torch.Size([1, 16, 13, 123, 5])
294
torch.Size([1, 16, 13, 123, 5])
295
torch.Size([1, 16, 13, 123, 5])
296
torch.Size([1, 16, 13, 123, 5])
297
torch.Size([1, 16, 13, 123, 5])
298
torch.Size([1, 16, 13, 123, 5])
299
torch.Size([1, 16, 13, 123, 5])
300
torch.Size([1, 16, 13, 123, 5])
301
torch.Size([1, 16, 13, 123, 5])
302
torch.Size([1, 16, 13, 123, 5])
303
torch.Size([1, 16, 13, 123, 5])
304
torch.Size([1, 16, 13, 123, 5])
305
torch.Size([1, 16, 13, 123, 5])
306
torch.Size([1, 16, 13, 123, 5])
307
torch.Size([1, 16, 13, 123, 5])
308
torch.Size([1, 16, 13, 123, 5])
309
torch.Size([1, 16, 13, 123, 5])
310
torch.Size([1, 16, 13, 123, 5])
311
torch.Size([1, 16, 13, 123, 5])
312
torch.Size([1, 16, 13, 123, 5])
313
torch.Size([1, 16, 13, 123, 5])
314
torch.Size([1, 16, 13, 123, 5])
315
torch.Size([1, 16, 13, 123, 5])
316
torch.Size([1, 16, 13, 123, 5])
317
torch.Size([1, 16, 13, 123, 5])
318
torch.Size([1, 16, 13, 123, 5])
319
torch.Size([1, 16, 13, 123, 5])
320
torch.Size([1, 16, 13, 123, 5])
321
torch.Size([1, 16, 13, 123, 5])
322
torch.Size([1, 16, 13, 123, 5])
323
torch.Size([1, 16, 13, 123, 5])
324
torch.Size([1, 16, 13, 123, 5])
325
torch.Size([1, 16, 13, 123, 5])
326
torch.Size([1, 16, 13, 123, 5])
327
torch.Size([1, 16, 13, 123, 5])
328
torch.Size([1, 16, 13, 123, 5])
329
torch.Size([1, 16, 13, 123, 5])
330
torch.Size([1, 16, 13, 123, 5])
331
torch.Size([1, 16, 13, 123, 5])
332
torch.Size([1, 16, 13, 123, 5])
333
torch.Size([1, 16, 13, 123, 5])
334
torch.Size([1, 16, 13, 123, 5])
335
torch.Size([1, 16, 13, 123, 5])
336
torch.Size([1, 16, 13, 123, 5])
337
torch.Size([1, 16, 13, 123, 5])
338
torch.Size([1, 16, 13, 123, 5])
339
torch.Size([1, 16, 13, 123, 5])
340
torch.Size([1, 16, 13, 123, 5])
341
torch.Size([1, 16, 13, 123, 5])
342
torch.Size([1, 16, 13, 123, 5])
343
torch.Size([1, 16, 13, 123, 5])
344
torch.Size([1, 16, 13, 123, 5])
345
torch.Size([1, 16, 13, 123, 5])
346
torch.Size([1, 16, 13, 123, 5])
347
torch.Size([1, 16, 13, 123, 5])
348
torch.Size([1, 16, 13, 123, 5])
349
torch.Size([1, 16, 13, 123, 5])
350
torch.Size([1, 16, 13, 123, 5])
351
torch.Size([1, 16, 13, 123, 5])
352
torch.Size([1, 16, 13, 123, 5])
353
torch.Size([1, 16, 13, 123, 5])
351
torch.Size([1, 16, 13, 123, 5])
352
torch.Size([1, 16, 13, 123, 5])
353
torch.Size([1, 16, 13, 123, 5])
354
torch.Size([1, 16, 13, 123, 5])
355
torch.Size([1, 16, 13, 123, 5])
356
torch.Size([1, 16, 13, 123, 5])
357
torch.Size([1, 16, 13, 123, 5])
358
torch.Size([1, 16, 13, 123, 5])
359
torch.Size([1, 16, 13, 123, 5])
360
torch.Size([1, 16, 13, 123, 5])
361
torch.Size([1, 16, 13, 123, 5])
362
torch.Size([1, 16, 13, 123, 5])
363
torch.Size([1, 16, 13, 123, 5])
364
torch.Size([1, 16, 13, 123, 5])
365
torch.Size([1, 16, 13, 123, 5])
366
torch.Size([1, 16, 13, 123, 5])
367
torch.Size([1, 16, 13, 123, 5])
368
torch.Size([1, 16, 13, 123, 5])
369
torch.Size([1, 16, 13, 123, 5])
370
torch.Size([1, 16, 13, 123, 5])
371
torch.Size([1, 16, 13, 123, 5])
372
torch.Size([1, 16, 13, 123, 5])
373
torch.Size([1, 16, 13, 123, 5])
374
torch.Size([1, 16, 13, 123, 5])
375
torch.Size([1, 16, 13, 123, 5])
376
torch.Size([1, 16, 13, 123, 5])
377
torch.Size([1, 16, 13, 123, 5])
378
torch.Size([1, 16, 13, 123, 5])
379
torch.Size([1, 16, 13, 123, 5])
380
torch.Size([1, 16, 13, 123, 5])
381
torch.Size([1, 16, 13, 123, 5])
382
torch.Size([1, 16, 13, 123, 5])
383
torch.Size([1, 16, 13, 123, 5])
384
torch.Size([1, 16, 13, 123, 5])
385
torch.Size([1, 16, 13, 123, 5])
386
torch.Size([1, 16, 13, 123, 5])
387
torch.Size([1, 16, 13, 123, 5])
388
torch.Size([1, 16, 13, 123, 5])
389
torch.Size([1, 16, 13, 123, 5])
390
torch.Size([1, 16, 13, 123, 5])
391
torch.Size([1, 16, 13, 123, 5])
392
torch.Size([1, 16, 13, 123, 5])
393
torch.Size([1, 16, 13, 123, 5])
394
torch.Size([1, 16, 13, 123, 5])
395
torch.Size([1, 16, 13, 123, 5])
396
torch.Size([1, 16, 13, 123, 5])
397
torch.Size([1, 16, 13, 123, 5])
398
torch.Size([1, 16, 13, 123, 5])
399
torch.Size([1, 16, 13, 123, 5])
400
torch.Size([1, 16, 13, 123, 5])
401
torch.Size([1, 16, 13, 123, 5])
402
torch.Size([1, 16, 13, 123, 5])
403
torch.Size([1, 16, 13, 123, 5])
404
torch.Size([1, 16, 13, 123, 5])
405
torch.Size([1, 16, 13, 123, 5])
406
torch.Size([1, 16, 13, 123, 5])
407
torch.Size([1, 16, 13, 123, 5])
408
torch.Size([1, 16, 13, 123, 5])
409
torch.Size([1, 16, 13, 123, 5])
410
torch.Size([1, 16, 13, 123, 5])
411
torch.Size([1, 16, 13, 123, 5])
412
torch.Size([1, 16, 13, 123, 5])
413
torch.Size([1, 16, 13, 123, 5])
414
torch.Size([1, 16, 13, 123, 5])
415
torch.Size([1, 16, 13, 123, 5])
416
torch.Size([1, 16, 13, 123, 5])
417
torch.Size([1, 16, 13, 123, 5])
418
torch.Size([1, 16, 13, 123, 5])
419
torch.Size([1, 16, 13, 123, 5])
420
torch.Size([1, 16, 13, 123, 5])
421
torch.Size([1, 16, 13, 123, 5])
422
torch.Size([1, 16, 13, 123, 5])
423
torch.Size([1, 16, 13, 123, 5])
424
torch.Size([1, 16, 13, 123, 5])
425
torch.Size([1, 16, 13, 123, 5])
426
torch.Size([1, 16, 13, 123, 5])
427
torch.Size([1, 16, 13, 123, 5])
428
torch.Size([1, 16, 13, 123, 5])
429
torch.Size([1, 16, 13, 123, 5])
430
torch.Size([1, 16, 13, 123, 5])
431
torch.Size([1, 16, 13, 123, 5])
432
torch.Size([1, 16, 13, 123, 5])
433
torch.Size([1, 16, 13, 123, 5])
434
torch.Size([1, 16, 13, 123, 5])
435
torch.Size([1, 16, 13, 123, 5])
436
torch.Size([1, 16, 13, 123, 5])
437
torch.Size([1, 16, 13, 123, 5])
438
torch.Size([1, 16, 13, 123, 5])
439
torch.Size([1, 16, 13, 123, 5])
440
torch.Size([1, 16, 13, 123, 5])
441
torch.Size([1, 16, 13, 123, 5])
442
torch.Size([1, 16, 13, 123, 5])
443
torch.Size([1, 16, 13, 123, 5])
444
torch.Size([1, 16, 13, 123, 5])
445
torch.Size([1, 16, 13, 123, 5])
446
torch.Size([1, 16, 13, 123, 5])
447
torch.Size([1, 16, 13, 123, 5])
448
torch.Size([1, 16, 13, 123, 5])
449
torch.Size([1, 16, 13, 123, 5])
450
torch.Size([1, 16, 13, 123, 5])
451
torch.Size([1, 16, 13, 123, 5])
452
torch.Size([1, 16, 13, 123, 5])
453
torch.Size([1, 16, 13, 123, 5])
454
torch.Size([1, 16, 13, 123, 5])
455
torch.Size([1, 16, 13, 123, 5])
456
torch.Size([1, 16, 13, 123, 5])
457
torch.Size([1, 16, 13, 123, 5])
458
torch.Size([1, 16, 13, 123, 5])
459
torch.Size([1, 16, 13, 123, 5])
460
torch.Size([1, 16, 13, 123, 5])
461
torch.Size([1, 16, 13, 123, 5])
462
torch.Size([1, 16, 13, 123, 5])
463
torch.Size([1, 16, 13, 123, 5])
464
torch.Size([1, 16, 13, 123, 5])
465
torch.Size([1, 16, 13, 123, 5])
466
torch.Size([1, 16, 13, 123, 5])
467
torch.Size([1, 16, 13, 123, 5])
468
torch.Size([1, 16, 13, 123, 5])
469
torch.Size([1, 16, 13, 123, 5])
470
torch.Size([1, 16, 13, 123, 5])
471
torch.Size([1, 16, 13, 123, 5])
472
torch.Size([1, 16, 13, 123, 5])
473
torch.Size([1, 16, 13, 123, 5])
474
torch.Size([1, 16, 13, 123, 5])
475
torch.Size([1, 16, 13, 123, 5])
476
torch.Size([1, 16, 13, 123, 5])
477
torch.Size([1, 16, 13, 123, 5])
478
torch.Size([1, 16, 13, 123, 5])
479
torch.Size([1, 16, 13, 123, 5])
480
torch.Size([1, 16, 13, 123, 5])
481
torch.Size([1, 16, 13, 123, 5])
482
torch.Size([1, 16, 13, 123, 5])
483
torch.Size([1, 16, 13, 123, 5])
484
torch.Size([1, 16, 13, 123, 5])
485
torch.Size([1, 16, 13, 123, 5])
486
torch.Size([1, 16, 13, 123, 5])
487
torch.Size([1, 16, 13, 123, 5])
488
torch.Size([1, 16, 13, 123, 5])
489
torch.Size([1, 16, 13, 123, 5])
490
torch.Size([1, 16, 13, 123, 5])
491
torch.Size([1, 16, 13, 123, 5])
492
torch.Size([1, 16, 13, 123, 5])
493
torch.Size([1, 16, 13, 123, 5])
494
torch.Size([1, 16, 13, 123, 5])
495
torch.Size([1, 16, 13, 123, 5])
496
torch.Size([1, 16, 13, 123, 5])
497
torch.Size([1, 16, 13, 123, 5])
498
torch.Size([1, 16, 13, 123, 5])
499
torch.Size([1, 16, 13, 123, 5])
500
torch.Size([1, 16, 13, 123, 5])
501
torch.Size([1, 16, 13, 123, 5])
502
torch.Size([1, 16, 13, 123, 5])
503
torch.Size([1, 16, 13, 123, 5])
504
torch.Size([1, 16, 13, 123, 5])
505
torch.Size([1, 16, 13, 123, 5])
506
torch.Size([1, 16, 13, 123, 5])
507
torch.Size([1, 16, 13, 123, 5])
508
torch.Size([1, 16, 13, 123, 5])
509
torch.Size([1, 16, 13, 123, 5])
510
torch.Size([1, 16, 13, 123, 5])
511
torch.Size([1, 16, 13, 123, 5])
512
torch.Size([1, 16, 13, 123, 5])
513
torch.Size([1, 16, 13, 123, 5])
514
torch.Size([1, 16, 13, 123, 5])
515
torch.Size([1, 16, 13, 123, 5])
516
torch.Size([1, 16, 13, 123, 5])
517
torch.Size([1, 16, 13, 123, 5])
518
torch.Size([1, 16, 13, 123, 5])
519
torch.Size([1, 16, 13, 123, 5])
520
torch.Size([1, 16, 13, 123, 5])
521
torch.Size([1, 16, 13, 123, 5])
522
torch.Size([1, 16, 13, 123, 5])
523
torch.Size([1, 16, 13, 123, 5])
524
torch.Size([1, 16, 13, 123, 5])
525
torch.Size([1, 16, 13, 123, 5])
526
torch.Size([1, 16, 13, 123, 5])
527
torch.Size([1, 16, 13, 123, 5])
528
torch.Size([1, 16, 13, 123, 5])
529
torch.Size([1, 16, 13, 123, 5])
530
In epoch 1, train loss: 0.248 
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
19
torch.Size([1, 16, 13, 123, 5])
20
torch.Size([1, 16, 13, 123, 5])
21
torch.Size([1, 16, 13, 123, 5])
22
torch.Size([1, 16, 13, 123, 5])
23
torch.Size([1, 16, 13, 123, 5])
24
torch.Size([1, 16, 13, 123, 5])
25
torch.Size([1, 16, 13, 123, 5])
26
torch.Size([1, 16, 13, 123, 5])
27
torch.Size([1, 16, 13, 123, 5])
28
torch.Size([1, 16, 13, 123, 5])
29
torch.Size([1, 16, 13, 123, 5])
30
torch.Size([1, 16, 13, 123, 5])
31
torch.Size([1, 16, 13, 123, 5])
32
torch.Size([1, 16, 13, 123, 5])
33
torch.Size([1, 16, 13, 123, 5])
34
torch.Size([1, 16, 13, 123, 5])
35
torch.Size([1, 16, 13, 123, 5])
36
torch.Size([1, 16, 13, 123, 5])
37
torch.Size([1, 16, 13, 123, 5])
38
torch.Size([1, 16, 13, 123, 5])
39
torch.Size([1, 16, 13, 123, 5])
40
torch.Size([1, 16, 13, 123, 5])
41
torch.Size([1, 16, 13, 123, 5])
42
torch.Size([1, 16, 13, 123, 5])
43
torch.Size([1, 16, 13, 123, 5])
44
torch.Size([1, 16, 13, 123, 5])
45
torch.Size([1, 16, 13, 123, 5])
46
torch.Size([1, 16, 13, 123, 5])
47
torch.Size([1, 16, 13, 123, 5])
48
torch.Size([1, 16, 13, 123, 5])
354
torch.Size([1, 16, 13, 123, 5])
355
torch.Size([1, 16, 13, 123, 5])
356
torch.Size([1, 16, 13, 123, 5])
357
torch.Size([1, 16, 13, 123, 5])
358
torch.Size([1, 16, 13, 123, 5])
359
torch.Size([1, 16, 13, 123, 5])
360
torch.Size([1, 16, 13, 123, 5])
361
torch.Size([1, 16, 13, 123, 5])
362
torch.Size([1, 16, 13, 123, 5])
363
torch.Size([1, 16, 13, 123, 5])
364
torch.Size([1, 16, 13, 123, 5])
365
torch.Size([1, 16, 13, 123, 5])
366
torch.Size([1, 16, 13, 123, 5])
367
torch.Size([1, 16, 13, 123, 5])
368
torch.Size([1, 16, 13, 123, 5])
369
torch.Size([1, 16, 13, 123, 5])
370
torch.Size([1, 16, 13, 123, 5])
371
torch.Size([1, 16, 13, 123, 5])
372
torch.Size([1, 16, 13, 123, 5])
373
torch.Size([1, 16, 13, 123, 5])
374
torch.Size([1, 16, 13, 123, 5])
375
torch.Size([1, 16, 13, 123, 5])
376
torch.Size([1, 16, 13, 123, 5])
377
torch.Size([1, 16, 13, 123, 5])
378
torch.Size([1, 16, 13, 123, 5])
379
torch.Size([1, 16, 13, 123, 5])
380
torch.Size([1, 16, 13, 123, 5])
381
torch.Size([1, 16, 13, 123, 5])
382
torch.Size([1, 16, 13, 123, 5])
383
torch.Size([1, 16, 13, 123, 5])
384
torch.Size([1, 16, 13, 123, 5])
385
torch.Size([1, 16, 13, 123, 5])
386
torch.Size([1, 16, 13, 123, 5])
387
torch.Size([1, 16, 13, 123, 5])
388
torch.Size([1, 16, 13, 123, 5])
389
torch.Size([1, 16, 13, 123, 5])
390
torch.Size([1, 16, 13, 123, 5])
391
torch.Size([1, 16, 13, 123, 5])
392
torch.Size([1, 16, 13, 123, 5])
393
torch.Size([1, 16, 13, 123, 5])
394
torch.Size([1, 16, 13, 123, 5])
395
torch.Size([1, 16, 13, 123, 5])
396
torch.Size([1, 16, 13, 123, 5])
397
torch.Size([1, 16, 13, 123, 5])
398
torch.Size([1, 16, 13, 123, 5])
399
torch.Size([1, 16, 13, 123, 5])
400
torch.Size([1, 16, 13, 123, 5])
401
torch.Size([1, 16, 13, 123, 5])
402
torch.Size([1, 16, 13, 123, 5])
403
torch.Size([1, 16, 13, 123, 5])
404
torch.Size([1, 16, 13, 123, 5])
405
torch.Size([1, 16, 13, 123, 5])
406
torch.Size([1, 16, 13, 123, 5])
407
torch.Size([1, 16, 13, 123, 5])
408
torch.Size([1, 16, 13, 123, 5])
409
torch.Size([1, 16, 13, 123, 5])
410
torch.Size([1, 16, 13, 123, 5])
411
torch.Size([1, 16, 13, 123, 5])
412
torch.Size([1, 16, 13, 123, 5])
413
torch.Size([1, 16, 13, 123, 5])
414
torch.Size([1, 16, 13, 123, 5])
415
torch.Size([1, 16, 13, 123, 5])
416
torch.Size([1, 16, 13, 123, 5])
417
torch.Size([1, 16, 13, 123, 5])
418
torch.Size([1, 16, 13, 123, 5])
419
torch.Size([1, 16, 13, 123, 5])
420
torch.Size([1, 16, 13, 123, 5])
421
torch.Size([1, 16, 13, 123, 5])
422
torch.Size([1, 16, 13, 123, 5])
423
torch.Size([1, 16, 13, 123, 5])
424
torch.Size([1, 16, 13, 123, 5])
425
torch.Size([1, 16, 13, 123, 5])
426
torch.Size([1, 16, 13, 123, 5])
427
torch.Size([1, 16, 13, 123, 5])
428
torch.Size([1, 16, 13, 123, 5])
429
torch.Size([1, 16, 13, 123, 5])
430
torch.Size([1, 16, 13, 123, 5])
431
torch.Size([1, 16, 13, 123, 5])
432
torch.Size([1, 16, 13, 123, 5])
433
torch.Size([1, 16, 13, 123, 5])
434
torch.Size([1, 16, 13, 123, 5])
435
torch.Size([1, 16, 13, 123, 5])
436
torch.Size([1, 16, 13, 123, 5])
437
torch.Size([1, 16, 13, 123, 5])
438
torch.Size([1, 16, 13, 123, 5])
439
torch.Size([1, 16, 13, 123, 5])
440
torch.Size([1, 16, 13, 123, 5])
441
torch.Size([1, 16, 13, 123, 5])
442
torch.Size([1, 16, 13, 123, 5])
443
torch.Size([1, 16, 13, 123, 5])
444
torch.Size([1, 16, 13, 123, 5])
445
torch.Size([1, 16, 13, 123, 5])
446
torch.Size([1, 16, 13, 123, 5])
447
torch.Size([1, 16, 13, 123, 5])
448
torch.Size([1, 16, 13, 123, 5])
449
torch.Size([1, 16, 13, 123, 5])
450
torch.Size([1, 16, 13, 123, 5])
451
torch.Size([1, 16, 13, 123, 5])
452
torch.Size([1, 16, 13, 123, 5])
453
torch.Size([1, 16, 13, 123, 5])
454
torch.Size([1, 16, 13, 123, 5])
455
torch.Size([1, 16, 13, 123, 5])
456
torch.Size([1, 16, 13, 123, 5])
457
torch.Size([1, 16, 13, 123, 5])
458
torch.Size([1, 16, 13, 123, 5])
459
torch.Size([1, 16, 13, 123, 5])
460
torch.Size([1, 16, 13, 123, 5])
461
torch.Size([1, 16, 13, 123, 5])
462
torch.Size([1, 16, 13, 123, 5])
463
torch.Size([1, 16, 13, 123, 5])
464
torch.Size([1, 16, 13, 123, 5])
465
torch.Size([1, 16, 13, 123, 5])
466
torch.Size([1, 16, 13, 123, 5])
467
torch.Size([1, 16, 13, 123, 5])
468
torch.Size([1, 16, 13, 123, 5])
469
torch.Size([1, 16, 13, 123, 5])
470
torch.Size([1, 16, 13, 123, 5])
471
torch.Size([1, 16, 13, 123, 5])
472
torch.Size([1, 16, 13, 123, 5])
473
torch.Size([1, 16, 13, 123, 5])
474
torch.Size([1, 16, 13, 123, 5])
475
torch.Size([1, 16, 13, 123, 5])
476
torch.Size([1, 16, 13, 123, 5])
477
torch.Size([1, 16, 13, 123, 5])
478
torch.Size([1, 16, 13, 123, 5])
479
torch.Size([1, 16, 13, 123, 5])
480
torch.Size([1, 16, 13, 123, 5])
481
torch.Size([1, 16, 13, 123, 5])
482
torch.Size([1, 16, 13, 123, 5])
483
torch.Size([1, 16, 13, 123, 5])
484
torch.Size([1, 16, 13, 123, 5])
485
torch.Size([1, 16, 13, 123, 5])
486
torch.Size([1, 16, 13, 123, 5])
487
torch.Size([1, 16, 13, 123, 5])
488
torch.Size([1, 16, 13, 123, 5])
489
torch.Size([1, 16, 13, 123, 5])
490
torch.Size([1, 16, 13, 123, 5])
491
torch.Size([1, 16, 13, 123, 5])
492
torch.Size([1, 16, 13, 123, 5])
493
torch.Size([1, 16, 13, 123, 5])
494
torch.Size([1, 16, 13, 123, 5])
495
torch.Size([1, 16, 13, 123, 5])
496
torch.Size([1, 16, 13, 123, 5])
497
torch.Size([1, 16, 13, 123, 5])
498
torch.Size([1, 16, 13, 123, 5])
499
torch.Size([1, 16, 13, 123, 5])
500
torch.Size([1, 16, 13, 123, 5])
501
torch.Size([1, 16, 13, 123, 5])
502
torch.Size([1, 16, 13, 123, 5])
503
torch.Size([1, 16, 13, 123, 5])
504
torch.Size([1, 16, 13, 123, 5])
505
torch.Size([1, 16, 13, 123, 5])
506
torch.Size([1, 16, 13, 123, 5])
507
torch.Size([1, 16, 13, 123, 5])
508
torch.Size([1, 16, 13, 123, 5])
509
torch.Size([1, 16, 13, 123, 5])
510
torch.Size([1, 16, 13, 123, 5])
511
torch.Size([1, 16, 13, 123, 5])
512
torch.Size([1, 16, 13, 123, 5])
513
torch.Size([1, 16, 13, 123, 5])
514
torch.Size([1, 16, 13, 123, 5])
515
torch.Size([1, 16, 13, 123, 5])
516
torch.Size([1, 16, 13, 123, 5])
517
torch.Size([1, 16, 13, 123, 5])
518
torch.Size([1, 16, 13, 123, 5])
519
torch.Size([1, 16, 13, 123, 5])
520
torch.Size([1, 16, 13, 123, 5])
521
torch.Size([1, 16, 13, 123, 5])
522
torch.Size([1, 16, 13, 123, 5])
523
torch.Size([1, 16, 13, 123, 5])
524
torch.Size([1, 16, 13, 123, 5])
525
torch.Size([1, 16, 13, 123, 5])
526
torch.Size([1, 16, 13, 123, 5])
527
torch.Size([1, 16, 13, 123, 5])
528
torch.Size([1, 16, 13, 123, 5])
529
torch.Size([1, 16, 13, 123, 5])
530
In epoch 1, train loss: 0.248 
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
19
torch.Size([1, 16, 13, 123, 5])
20
torch.Size([1, 16, 13, 123, 5])
21
torch.Size([1, 16, 13, 123, 5])
22
torch.Size([1, 16, 13, 123, 5])
23
torch.Size([1, 16, 13, 123, 5])
24
torch.Size([1, 16, 13, 123, 5])
25
torch.Size([1, 16, 13, 123, 5])
26
torch.Size([1, 16, 13, 123, 5])
27
torch.Size([1, 16, 13, 123, 5])
28
torch.Size([1, 16, 13, 123, 5])
29
torch.Size([1, 16, 13, 123, 5])
30
torch.Size([1, 16, 13, 123, 5])
31
torch.Size([1, 16, 13, 123, 5])
32
torch.Size([1, 16, 13, 123, 5])
33
torch.Size([1, 16, 13, 123, 5])
34
torch.Size([1, 16, 13, 123, 5])
35
torch.Size([1, 16, 13, 123, 5])
36
torch.Size([1, 16, 13, 123, 5])
37
torch.Size([1, 16, 13, 123, 5])
38
torch.Size([1, 16, 13, 123, 5])
39
torch.Size([1, 16, 13, 123, 5])
40
torch.Size([1, 16, 13, 123, 5])
41
torch.Size([1, 16, 13, 123, 5])
42
torch.Size([1, 16, 13, 123, 5])
43
torch.Size([1, 16, 13, 123, 5])
44
torch.Size([1, 16, 13, 123, 5])
45
torch.Size([1, 16, 13, 123, 5])
46
torch.Size([1, 16, 13, 123, 5])
47
torch.Size([1, 16, 13, 123, 5])
48
torch.Size([1, 16, 13, 123, 5])
49
torch.Size([1, 16, 13, 123, 5])
50
torch.Size([1, 16, 13, 123, 5])
51
torch.Size([1, 16, 13, 123, 5])
49
torch.Size([1, 16, 13, 123, 5])
50
torch.Size([1, 16, 13, 123, 5])
51
torch.Size([1, 16, 13, 123, 5])
52
torch.Size([1, 16, 13, 123, 5])
53
torch.Size([1, 16, 13, 123, 5])
54
torch.Size([1, 16, 13, 123, 5])
55
torch.Size([1, 16, 13, 123, 5])
56
torch.Size([1, 16, 13, 123, 5])
57
torch.Size([1, 16, 13, 123, 5])
58
torch.Size([1, 16, 13, 123, 5])
59
torch.Size([1, 16, 13, 123, 5])
60
torch.Size([1, 16, 13, 123, 5])
61
torch.Size([1, 16, 13, 123, 5])
62
torch.Size([1, 16, 13, 123, 5])
63
torch.Size([1, 16, 13, 123, 5])
64
torch.Size([1, 16, 13, 123, 5])
65
torch.Size([1, 16, 13, 123, 5])
66
torch.Size([1, 16, 13, 123, 5])
67
torch.Size([1, 16, 13, 123, 5])
68
torch.Size([1, 16, 13, 123, 5])
69
torch.Size([1, 16, 13, 123, 5])
70
torch.Size([1, 16, 13, 123, 5])
71
torch.Size([1, 16, 13, 123, 5])
72
torch.Size([1, 16, 13, 123, 5])
73
torch.Size([1, 16, 13, 123, 5])
74
torch.Size([1, 16, 13, 123, 5])
75
torch.Size([1, 16, 13, 123, 5])
76
torch.Size([1, 16, 13, 123, 5])
77
torch.Size([1, 16, 13, 123, 5])
78
torch.Size([1, 16, 13, 123, 5])
79
torch.Size([1, 16, 13, 123, 5])
80
torch.Size([1, 16, 13, 123, 5])
81
torch.Size([1, 16, 13, 123, 5])
82
torch.Size([1, 16, 13, 123, 5])
83
torch.Size([1, 16, 13, 123, 5])
84
torch.Size([1, 16, 13, 123, 5])
85
torch.Size([1, 16, 13, 123, 5])
86
torch.Size([1, 16, 13, 123, 5])
87
torch.Size([1, 16, 13, 123, 5])
88
torch.Size([1, 16, 13, 123, 5])
89
torch.Size([1, 16, 13, 123, 5])
90
torch.Size([1, 16, 13, 123, 5])
91
torch.Size([1, 16, 13, 123, 5])
92
torch.Size([1, 16, 13, 123, 5])
93
torch.Size([1, 16, 13, 123, 5])
94
torch.Size([1, 16, 13, 123, 5])
95
torch.Size([1, 16, 13, 123, 5])
96
torch.Size([1, 16, 13, 123, 5])
97
torch.Size([1, 16, 13, 123, 5])
98
torch.Size([1, 16, 13, 123, 5])
99
torch.Size([1, 16, 13, 123, 5])
100
torch.Size([1, 16, 13, 123, 5])
101
torch.Size([1, 16, 13, 123, 5])
102
torch.Size([1, 16, 13, 123, 5])
103
torch.Size([1, 16, 13, 123, 5])
104
torch.Size([1, 16, 13, 123, 5])
105
torch.Size([1, 16, 13, 123, 5])
106
torch.Size([1, 16, 13, 123, 5])
107
torch.Size([1, 16, 13, 123, 5])
108
torch.Size([1, 16, 13, 123, 5])
109
torch.Size([1, 16, 13, 123, 5])
110
torch.Size([1, 16, 13, 123, 5])
111
torch.Size([1, 16, 13, 123, 5])
112
torch.Size([1, 16, 13, 123, 5])
113
torch.Size([1, 16, 13, 123, 5])
114
torch.Size([1, 16, 13, 123, 5])
115
torch.Size([1, 16, 13, 123, 5])
116
torch.Size([1, 16, 13, 123, 5])
117
torch.Size([1, 16, 13, 123, 5])
118
torch.Size([1, 16, 13, 123, 5])
119
torch.Size([1, 16, 13, 123, 5])
120
torch.Size([1, 16, 13, 123, 5])
121
torch.Size([1, 16, 13, 123, 5])
122
torch.Size([1, 16, 13, 123, 5])
123
torch.Size([1, 16, 13, 123, 5])
124
torch.Size([1, 16, 13, 123, 5])
125
torch.Size([1, 16, 13, 123, 5])
126
torch.Size([1, 16, 13, 123, 5])
127
torch.Size([1, 16, 13, 123, 5])
128
torch.Size([1, 16, 13, 123, 5])
129
torch.Size([1, 16, 13, 123, 5])
130
torch.Size([1, 16, 13, 123, 5])
131
torch.Size([1, 16, 13, 123, 5])
132
torch.Size([1, 16, 13, 123, 5])
133
torch.Size([1, 16, 13, 123, 5])
134
torch.Size([1, 16, 13, 123, 5])
135
torch.Size([1, 16, 13, 123, 5])
136
torch.Size([1, 16, 13, 123, 5])
137
torch.Size([1, 16, 13, 123, 5])
138
torch.Size([1, 16, 13, 123, 5])
139
torch.Size([1, 16, 13, 123, 5])
140
torch.Size([1, 16, 13, 123, 5])
141
torch.Size([1, 16, 13, 123, 5])
142
torch.Size([1, 16, 13, 123, 5])
143
torch.Size([1, 16, 13, 123, 5])
144
torch.Size([1, 16, 13, 123, 5])
145
torch.Size([1, 16, 13, 123, 5])
146
torch.Size([1, 16, 13, 123, 5])
147
torch.Size([1, 16, 13, 123, 5])
148
torch.Size([1, 16, 13, 123, 5])
149
torch.Size([1, 16, 13, 123, 5])
150
torch.Size([1, 16, 13, 123, 5])
151
torch.Size([1, 16, 13, 123, 5])
152
torch.Size([1, 16, 13, 123, 5])
153
torch.Size([1, 16, 13, 123, 5])
154
torch.Size([1, 16, 13, 123, 5])
155
torch.Size([1, 16, 13, 123, 5])
156
torch.Size([1, 16, 13, 123, 5])
157
torch.Size([1, 16, 13, 123, 5])
158
torch.Size([1, 16, 13, 123, 5])
159
torch.Size([1, 16, 13, 123, 5])
160
torch.Size([1, 16, 13, 123, 5])
161
torch.Size([1, 16, 13, 123, 5])
162
torch.Size([1, 16, 13, 123, 5])
163
torch.Size([1, 16, 13, 123, 5])
164
torch.Size([1, 16, 13, 123, 5])
165
torch.Size([1, 16, 13, 123, 5])
166
torch.Size([1, 16, 13, 123, 5])
167
torch.Size([1, 16, 13, 123, 5])
168
torch.Size([1, 16, 13, 123, 5])
169
torch.Size([1, 16, 13, 123, 5])
170
torch.Size([1, 16, 13, 123, 5])
171
torch.Size([1, 16, 13, 123, 5])
172
torch.Size([1, 16, 13, 123, 5])
173
torch.Size([1, 16, 13, 123, 5])
174
torch.Size([1, 16, 13, 123, 5])
175
torch.Size([1, 16, 13, 123, 5])
176
torch.Size([1, 16, 13, 123, 5])
177
torch.Size([1, 16, 13, 123, 5])
178
torch.Size([1, 16, 13, 123, 5])
179
torch.Size([1, 16, 13, 123, 5])
180
torch.Size([1, 16, 13, 123, 5])
181
torch.Size([1, 16, 13, 123, 5])
182
torch.Size([1, 16, 13, 123, 5])
183
torch.Size([1, 16, 13, 123, 5])
184
torch.Size([1, 16, 13, 123, 5])
185
torch.Size([1, 16, 13, 123, 5])
186
torch.Size([1, 16, 13, 123, 5])
187
torch.Size([1, 16, 13, 123, 5])
188
torch.Size([1, 16, 13, 123, 5])
189
torch.Size([1, 16, 13, 123, 5])
190
torch.Size([1, 16, 13, 123, 5])
191
torch.Size([1, 16, 13, 123, 5])
192
torch.Size([1, 16, 13, 123, 5])
193
torch.Size([1, 16, 13, 123, 5])
194
torch.Size([1, 16, 13, 123, 5])
195
torch.Size([1, 16, 13, 123, 5])
196
torch.Size([1, 16, 13, 123, 5])
197
torch.Size([1, 16, 13, 123, 5])
198
torch.Size([1, 16, 13, 123, 5])
199
torch.Size([1, 16, 13, 123, 5])
200
torch.Size([1, 16, 13, 123, 5])
201
torch.Size([1, 16, 13, 123, 5])
202
torch.Size([1, 16, 13, 123, 5])
203
torch.Size([1, 16, 13, 123, 5])
204
torch.Size([1, 16, 13, 123, 5])
205
torch.Size([1, 16, 13, 123, 5])
206
torch.Size([1, 16, 13, 123, 5])
207
torch.Size([1, 16, 13, 123, 5])
208
torch.Size([1, 16, 13, 123, 5])
209
torch.Size([1, 16, 13, 123, 5])
210
torch.Size([1, 16, 13, 123, 5])
211
torch.Size([1, 16, 13, 123, 5])
212
torch.Size([1, 16, 13, 123, 5])
213
torch.Size([1, 16, 13, 123, 5])
214
torch.Size([1, 16, 13, 123, 5])
215
torch.Size([1, 16, 13, 123, 5])
216
torch.Size([1, 16, 13, 123, 5])
217
torch.Size([1, 16, 13, 123, 5])
218
torch.Size([1, 16, 13, 123, 5])
219
torch.Size([1, 16, 13, 123, 5])
220
torch.Size([1, 16, 13, 123, 5])
221
torch.Size([1, 16, 13, 123, 5])
222
torch.Size([1, 16, 13, 123, 5])
223
torch.Size([1, 16, 13, 123, 5])
224
torch.Size([1, 16, 13, 123, 5])
225
torch.Size([1, 16, 13, 123, 5])
226
torch.Size([1, 16, 13, 123, 5])
227
torch.Size([1, 16, 13, 123, 5])
228
torch.Size([1, 16, 13, 123, 5])
229
torch.Size([1, 16, 13, 123, 5])
230
torch.Size([1, 16, 13, 123, 5])
231
torch.Size([1, 16, 13, 123, 5])
232
torch.Size([1, 16, 13, 123, 5])
233
torch.Size([1, 16, 13, 123, 5])
234
torch.Size([1, 16, 13, 123, 5])
235
torch.Size([1, 16, 13, 123, 5])
236
torch.Size([1, 16, 13, 123, 5])
237
torch.Size([1, 16, 13, 123, 5])
238
torch.Size([1, 16, 13, 123, 5])
239
torch.Size([1, 16, 13, 123, 5])
240
torch.Size([1, 16, 13, 123, 5])
241
torch.Size([1, 16, 13, 123, 5])
242
torch.Size([1, 16, 13, 123, 5])
243
torch.Size([1, 16, 13, 123, 5])
244
torch.Size([1, 16, 13, 123, 5])
245
torch.Size([1, 16, 13, 123, 5])
246
torch.Size([1, 16, 13, 123, 5])
247
torch.Size([1, 16, 13, 123, 5])
248
torch.Size([1, 16, 13, 123, 5])
249
torch.Size([1, 16, 13, 123, 5])
250
torch.Size([1, 16, 13, 123, 5])
251
torch.Size([1, 16, 13, 123, 5])
252
torch.Size([1, 16, 13, 123, 5])
253
torch.Size([1, 16, 13, 123, 5])
254
torch.Size([1, 16, 13, 123, 5])
255
torch.Size([1, 16, 13, 123, 5])
256
torch.Size([1, 16, 13, 123, 5])
257
torch.Size([1, 16, 13, 123, 5])
258
torch.Size([1, 16, 13, 123, 5])
259
torch.Size([1, 16, 13, 123, 5])
260
torch.Size([1, 16, 13, 123, 5])
261
torch.Size([1, 16, 13, 123, 5])
262
torch.Size([1, 16, 13, 123, 5])
263
torch.Size([1, 16, 13, 123, 5])
264
torch.Size([1, 16, 13, 123, 5])
265
torch.Size([1, 16, 13, 123, 5])
266
torch.Size([1, 16, 13, 123, 5])
267
torch.Size([1, 16, 13, 123, 5])
268
torch.Size([1, 16, 13, 123, 5])
269
torch.Size([1, 16, 13, 123, 5])
270
torch.Size([1, 16, 13, 123, 5])
271
torch.Size([1, 16, 13, 123, 5])
272
torch.Size([1, 16, 13, 123, 5])
273
torch.Size([1, 16, 13, 123, 5])
274
torch.Size([1, 16, 13, 123, 5])
275
torch.Size([1, 16, 13, 123, 5])
276
torch.Size([1, 16, 13, 123, 5])
277torch.Size([1, 16, 13, 123, 5])
52
torch.Size([1, 16, 13, 123, 5])
53
torch.Size([1, 16, 13, 123, 5])
54
torch.Size([1, 16, 13, 123, 5])
55
torch.Size([1, 16, 13, 123, 5])
56
torch.Size([1, 16, 13, 123, 5])
57
torch.Size([1, 16, 13, 123, 5])
58
torch.Size([1, 16, 13, 123, 5])
59
torch.Size([1, 16, 13, 123, 5])
60
torch.Size([1, 16, 13, 123, 5])
61
torch.Size([1, 16, 13, 123, 5])
62
torch.Size([1, 16, 13, 123, 5])
63
torch.Size([1, 16, 13, 123, 5])
64
torch.Size([1, 16, 13, 123, 5])
65
torch.Size([1, 16, 13, 123, 5])
66
torch.Size([1, 16, 13, 123, 5])
67
torch.Size([1, 16, 13, 123, 5])
68
torch.Size([1, 16, 13, 123, 5])
69
torch.Size([1, 16, 13, 123, 5])
70
torch.Size([1, 16, 13, 123, 5])
71
torch.Size([1, 16, 13, 123, 5])
72
torch.Size([1, 16, 13, 123, 5])
73
torch.Size([1, 16, 13, 123, 5])
74
torch.Size([1, 16, 13, 123, 5])
75
torch.Size([1, 16, 13, 123, 5])
76
torch.Size([1, 16, 13, 123, 5])
77
torch.Size([1, 16, 13, 123, 5])
78
torch.Size([1, 16, 13, 123, 5])
79
torch.Size([1, 16, 13, 123, 5])
80
torch.Size([1, 16, 13, 123, 5])
81
torch.Size([1, 16, 13, 123, 5])
82
torch.Size([1, 16, 13, 123, 5])
83
torch.Size([1, 16, 13, 123, 5])
84
torch.Size([1, 16, 13, 123, 5])
85
torch.Size([1, 16, 13, 123, 5])
86
torch.Size([1, 16, 13, 123, 5])
87
torch.Size([1, 16, 13, 123, 5])
88
torch.Size([1, 16, 13, 123, 5])
89
torch.Size([1, 16, 13, 123, 5])
90
torch.Size([1, 16, 13, 123, 5])
91
torch.Size([1, 16, 13, 123, 5])
92
torch.Size([1, 16, 13, 123, 5])
93
torch.Size([1, 16, 13, 123, 5])
94
torch.Size([1, 16, 13, 123, 5])
95
torch.Size([1, 16, 13, 123, 5])
96
torch.Size([1, 16, 13, 123, 5])
97
torch.Size([1, 16, 13, 123, 5])
98
torch.Size([1, 16, 13, 123, 5])
99
torch.Size([1, 16, 13, 123, 5])
100
torch.Size([1, 16, 13, 123, 5])
101
torch.Size([1, 16, 13, 123, 5])
102
torch.Size([1, 16, 13, 123, 5])
103
torch.Size([1, 16, 13, 123, 5])
104
torch.Size([1, 16, 13, 123, 5])
105
torch.Size([1, 16, 13, 123, 5])
106
torch.Size([1, 16, 13, 123, 5])
107
torch.Size([1, 16, 13, 123, 5])
108
torch.Size([1, 16, 13, 123, 5])
109
torch.Size([1, 16, 13, 123, 5])
110
torch.Size([1, 16, 13, 123, 5])
111
torch.Size([1, 16, 13, 123, 5])
112
torch.Size([1, 16, 13, 123, 5])
113
torch.Size([1, 16, 13, 123, 5])
114
torch.Size([1, 16, 13, 123, 5])
115
torch.Size([1, 16, 13, 123, 5])
116
torch.Size([1, 16, 13, 123, 5])
117
torch.Size([1, 16, 13, 123, 5])
118
torch.Size([1, 16, 13, 123, 5])
119
torch.Size([1, 16, 13, 123, 5])
120
torch.Size([1, 16, 13, 123, 5])
121
torch.Size([1, 16, 13, 123, 5])
122
torch.Size([1, 16, 13, 123, 5])
123
torch.Size([1, 16, 13, 123, 5])
124
torch.Size([1, 16, 13, 123, 5])
125
torch.Size([1, 16, 13, 123, 5])
126
torch.Size([1, 16, 13, 123, 5])
127
torch.Size([1, 16, 13, 123, 5])
128
torch.Size([1, 16, 13, 123, 5])
129
torch.Size([1, 16, 13, 123, 5])
130
torch.Size([1, 16, 13, 123, 5])
131
torch.Size([1, 16, 13, 123, 5])
132
torch.Size([1, 16, 13, 123, 5])
133
torch.Size([1, 16, 13, 123, 5])
134
torch.Size([1, 16, 13, 123, 5])
135
torch.Size([1, 16, 13, 123, 5])
136
torch.Size([1, 16, 13, 123, 5])
137
torch.Size([1, 16, 13, 123, 5])
138
torch.Size([1, 16, 13, 123, 5])
139
torch.Size([1, 16, 13, 123, 5])
140
torch.Size([1, 16, 13, 123, 5])
141
torch.Size([1, 16, 13, 123, 5])
142
torch.Size([1, 16, 13, 123, 5])
143
torch.Size([1, 16, 13, 123, 5])
144
torch.Size([1, 16, 13, 123, 5])
145
torch.Size([1, 16, 13, 123, 5])
146
torch.Size([1, 16, 13, 123, 5])
147
torch.Size([1, 16, 13, 123, 5])
148
torch.Size([1, 16, 13, 123, 5])
149
torch.Size([1, 16, 13, 123, 5])
150
torch.Size([1, 16, 13, 123, 5])
151
torch.Size([1, 16, 13, 123, 5])
152
torch.Size([1, 16, 13, 123, 5])
153
torch.Size([1, 16, 13, 123, 5])
154
torch.Size([1, 16, 13, 123, 5])
155
torch.Size([1, 16, 13, 123, 5])
156
torch.Size([1, 16, 13, 123, 5])
157
torch.Size([1, 16, 13, 123, 5])
158
torch.Size([1, 16, 13, 123, 5])
159
torch.Size([1, 16, 13, 123, 5])
160
torch.Size([1, 16, 13, 123, 5])
161
torch.Size([1, 16, 13, 123, 5])
162
torch.Size([1, 16, 13, 123, 5])
163
torch.Size([1, 16, 13, 123, 5])
164
torch.Size([1, 16, 13, 123, 5])
165
torch.Size([1, 16, 13, 123, 5])
166
torch.Size([1, 16, 13, 123, 5])
167
torch.Size([1, 16, 13, 123, 5])
168
torch.Size([1, 16, 13, 123, 5])
169
torch.Size([1, 16, 13, 123, 5])
170
torch.Size([1, 16, 13, 123, 5])
171
torch.Size([1, 16, 13, 123, 5])
172
torch.Size([1, 16, 13, 123, 5])
173
torch.Size([1, 16, 13, 123, 5])
174
torch.Size([1, 16, 13, 123, 5])
175
torch.Size([1, 16, 13, 123, 5])
176
torch.Size([1, 16, 13, 123, 5])
177
torch.Size([1, 16, 13, 123, 5])
178
torch.Size([1, 16, 13, 123, 5])
179
torch.Size([1, 16, 13, 123, 5])
180
torch.Size([1, 16, 13, 123, 5])
181
torch.Size([1, 16, 13, 123, 5])
182
torch.Size([1, 16, 13, 123, 5])
183
torch.Size([1, 16, 13, 123, 5])
184
torch.Size([1, 16, 13, 123, 5])
185
torch.Size([1, 16, 13, 123, 5])
186
torch.Size([1, 16, 13, 123, 5])
187
torch.Size([1, 16, 13, 123, 5])
188
torch.Size([1, 16, 13, 123, 5])
189
torch.Size([1, 16, 13, 123, 5])
190
torch.Size([1, 16, 13, 123, 5])
191
torch.Size([1, 16, 13, 123, 5])
192
torch.Size([1, 16, 13, 123, 5])
193
torch.Size([1, 16, 13, 123, 5])
194
torch.Size([1, 16, 13, 123, 5])
195
torch.Size([1, 16, 13, 123, 5])
196
torch.Size([1, 16, 13, 123, 5])
197
torch.Size([1, 16, 13, 123, 5])
198
torch.Size([1, 16, 13, 123, 5])
199
torch.Size([1, 16, 13, 123, 5])
200
torch.Size([1, 16, 13, 123, 5])
201
torch.Size([1, 16, 13, 123, 5])
202
torch.Size([1, 16, 13, 123, 5])
203
torch.Size([1, 16, 13, 123, 5])
204
torch.Size([1, 16, 13, 123, 5])
205
torch.Size([1, 16, 13, 123, 5])
206
torch.Size([1, 16, 13, 123, 5])
207
torch.Size([1, 16, 13, 123, 5])
208
torch.Size([1, 16, 13, 123, 5])
209
torch.Size([1, 16, 13, 123, 5])
210
torch.Size([1, 16, 13, 123, 5])
211
torch.Size([1, 16, 13, 123, 5])
212
torch.Size([1, 16, 13, 123, 5])
213
torch.Size([1, 16, 13, 123, 5])
214
torch.Size([1, 16, 13, 123, 5])
215
torch.Size([1, 16, 13, 123, 5])
216
torch.Size([1, 16, 13, 123, 5])
217
torch.Size([1, 16, 13, 123, 5])
218
torch.Size([1, 16, 13, 123, 5])
219
torch.Size([1, 16, 13, 123, 5])
220
torch.Size([1, 16, 13, 123, 5])
221
torch.Size([1, 16, 13, 123, 5])
222
torch.Size([1, 16, 13, 123, 5])
223
torch.Size([1, 16, 13, 123, 5])
224
torch.Size([1, 16, 13, 123, 5])
225
torch.Size([1, 16, 13, 123, 5])
226
torch.Size([1, 16, 13, 123, 5])
227
torch.Size([1, 16, 13, 123, 5])
228
torch.Size([1, 16, 13, 123, 5])
229
torch.Size([1, 16, 13, 123, 5])
230
torch.Size([1, 16, 13, 123, 5])
231
torch.Size([1, 16, 13, 123, 5])
232
torch.Size([1, 16, 13, 123, 5])
233
torch.Size([1, 16, 13, 123, 5])
234
torch.Size([1, 16, 13, 123, 5])
235
torch.Size([1, 16, 13, 123, 5])
236
torch.Size([1, 16, 13, 123, 5])
237
torch.Size([1, 16, 13, 123, 5])
238
torch.Size([1, 16, 13, 123, 5])
239
torch.Size([1, 16, 13, 123, 5])
240
torch.Size([1, 16, 13, 123, 5])
241
torch.Size([1, 16, 13, 123, 5])
242
torch.Size([1, 16, 13, 123, 5])
243
torch.Size([1, 16, 13, 123, 5])
244
torch.Size([1, 16, 13, 123, 5])
245
torch.Size([1, 16, 13, 123, 5])
246
torch.Size([1, 16, 13, 123, 5])
247
torch.Size([1, 16, 13, 123, 5])
248
torch.Size([1, 16, 13, 123, 5])
249
torch.Size([1, 16, 13, 123, 5])
250
torch.Size([1, 16, 13, 123, 5])
251
torch.Size([1, 16, 13, 123, 5])
252
torch.Size([1, 16, 13, 123, 5])
253
torch.Size([1, 16, 13, 123, 5])
254
torch.Size([1, 16, 13, 123, 5])
255
torch.Size([1, 16, 13, 123, 5])
256
torch.Size([1, 16, 13, 123, 5])
257
torch.Size([1, 16, 13, 123, 5])
258
torch.Size([1, 16, 13, 123, 5])
259
torch.Size([1, 16, 13, 123, 5])
260
torch.Size([1, 16, 13, 123, 5])
261
torch.Size([1, 16, 13, 123, 5])
262
torch.Size([1, 16, 13, 123, 5])
263
torch.Size([1, 16, 13, 123, 5])
264
torch.Size([1, 16, 13, 123, 5])
265
torch.Size([1, 16, 13, 123, 5])
266
torch.Size([1, 16, 13, 123, 5])
267
torch.Size([1, 16, 13, 123, 5])
268
torch.Size([1, 16, 13, 123, 5])
269
torch.Size([1, 16, 13, 123, 5])
270
torch.Size([1, 16, 13, 123, 5])
271
torch.Size([1, 16, 13, 123, 5])
272
torch.Size([1, 16, 13, 123, 5])
273
torch.Size([1, 16, 13, 123, 5])
274
torch.Size([1, 16, 13, 123, 5])
275
torch.Size([1, 16, 13, 123, 5])
276
torch.Size([1, 16, 13, 123, 5])
277
torch.Size([1, 16, 13, 123, 5])
278
torch.Size([1, 16, 13, 123, 5])
279
torch.Size([1, 16, 13, 123, 5])

torch.Size([1, 16, 13, 123, 5])
278
torch.Size([1, 16, 13, 123, 5])
279
torch.Size([1, 16, 13, 123, 5])
280
torch.Size([1, 16, 13, 123, 5])
281
torch.Size([1, 16, 13, 123, 5])
282
torch.Size([1, 16, 13, 123, 5])
283
torch.Size([1, 16, 13, 123, 5])
284
torch.Size([1, 16, 13, 123, 5])
285
torch.Size([1, 16, 13, 123, 5])
286
torch.Size([1, 16, 13, 123, 5])
287
torch.Size([1, 16, 13, 123, 5])
288
torch.Size([1, 16, 13, 123, 5])
289
torch.Size([1, 16, 13, 123, 5])
290
torch.Size([1, 16, 13, 123, 5])
291
torch.Size([1, 16, 13, 123, 5])
292
torch.Size([1, 16, 13, 123, 5])
293
torch.Size([1, 16, 13, 123, 5])
294
torch.Size([1, 16, 13, 123, 5])
295
torch.Size([1, 16, 13, 123, 5])
296
torch.Size([1, 16, 13, 123, 5])
297
torch.Size([1, 16, 13, 123, 5])
298
torch.Size([1, 16, 13, 123, 5])
299
torch.Size([1, 16, 13, 123, 5])
300
torch.Size([1, 16, 13, 123, 5])
301
torch.Size([1, 16, 13, 123, 5])
302
torch.Size([1, 16, 13, 123, 5])
303
torch.Size([1, 16, 13, 123, 5])
304
torch.Size([1, 16, 13, 123, 5])
305
torch.Size([1, 16, 13, 123, 5])
306
torch.Size([1, 16, 13, 123, 5])
307
torch.Size([1, 16, 13, 123, 5])
308
torch.Size([1, 16, 13, 123, 5])
309
torch.Size([1, 16, 13, 123, 5])
310
torch.Size([1, 16, 13, 123, 5])
311
torch.Size([1, 16, 13, 123, 5])
312
torch.Size([1, 16, 13, 123, 5])
313
torch.Size([1, 16, 13, 123, 5])
314
torch.Size([1, 16, 13, 123, 5])
315
torch.Size([1, 16, 13, 123, 5])
316
torch.Size([1, 16, 13, 123, 5])
317
torch.Size([1, 16, 13, 123, 5])
318
torch.Size([1, 16, 13, 123, 5])
319
torch.Size([1, 16, 13, 123, 5])
320
torch.Size([1, 16, 13, 123, 5])
321
torch.Size([1, 16, 13, 123, 5])
322
torch.Size([1, 16, 13, 123, 5])
323
torch.Size([1, 16, 13, 123, 5])
324
torch.Size([1, 16, 13, 123, 5])
325
torch.Size([1, 16, 13, 123, 5])
326
torch.Size([1, 16, 13, 123, 5])
327
torch.Size([1, 16, 13, 123, 5])
328
torch.Size([1, 16, 13, 123, 5])
329
torch.Size([1, 16, 13, 123, 5])
330
torch.Size([1, 16, 13, 123, 5])
331
torch.Size([1, 16, 13, 123, 5])
332
torch.Size([1, 16, 13, 123, 5])
333
torch.Size([1, 16, 13, 123, 5])
334
torch.Size([1, 16, 13, 123, 5])
335
torch.Size([1, 16, 13, 123, 5])
336
torch.Size([1, 16, 13, 123, 5])
337
torch.Size([1, 16, 13, 123, 5])
338
torch.Size([1, 16, 13, 123, 5])
339
torch.Size([1, 16, 13, 123, 5])
340
torch.Size([1, 16, 13, 123, 5])
341
torch.Size([1, 16, 13, 123, 5])
342
torch.Size([1, 16, 13, 123, 5])
343
torch.Size([1, 16, 13, 123, 5])
344
torch.Size([1, 16, 13, 123, 5])
345
torch.Size([1, 16, 13, 123, 5])
346
torch.Size([1, 16, 13, 123, 5])
347
torch.Size([1, 16, 13, 123, 5])
348
torch.Size([1, 16, 13, 123, 5])
349
torch.Size([1, 16, 13, 123, 5])
350
torch.Size([1, 16, 13, 123, 5])
351
torch.Size([1, 16, 13, 123, 5])
352
torch.Size([1, 16, 13, 123, 5])
353
torch.Size([1, 16, 13, 123, 5])
354
torch.Size([1, 16, 13, 123, 5])
355
torch.Size([1, 16, 13, 123, 5])
356
torch.Size([1, 16, 13, 123, 5])
357
torch.Size([1, 16, 13, 123, 5])
358
torch.Size([1, 16, 13, 123, 5])
359
torch.Size([1, 16, 13, 123, 5])
360
torch.Size([1, 16, 13, 123, 5])
361
torch.Size([1, 16, 13, 123, 5])
362
torch.Size([1, 16, 13, 123, 5])
363
torch.Size([1, 16, 13, 123, 5])
364
torch.Size([1, 16, 13, 123, 5])
365
torch.Size([1, 16, 13, 123, 5])
366
torch.Size([1, 16, 13, 123, 5])
367
torch.Size([1, 16, 13, 123, 5])
368
torch.Size([1, 16, 13, 123, 5])
369
torch.Size([1, 16, 13, 123, 5])
370
torch.Size([1, 16, 13, 123, 5])
371
torch.Size([1, 16, 13, 123, 5])
372
torch.Size([1, 16, 13, 123, 5])
373
torch.Size([1, 16, 13, 123, 5])
374
torch.Size([1, 16, 13, 123, 5])
375
torch.Size([1, 16, 13, 123, 5])
376
torch.Size([1, 16, 13, 123, 5])
377
torch.Size([1, 16, 13, 123, 5])
378
torch.Size([1, 16, 13, 123, 5])
379
torch.Size([1, 16, 13, 123, 5])
380
torch.Size([1, 16, 13, 123, 5])
381
torch.Size([1, 16, 13, 123, 5])
382
torch.Size([1, 16, 13, 123, 5])
383
torch.Size([1, 16, 13, 123, 5])
384
torch.Size([1, 16, 13, 123, 5])
385
torch.Size([1, 16, 13, 123, 5])
386
torch.Size([1, 16, 13, 123, 5])
387
torch.Size([1, 16, 13, 123, 5])
388
torch.Size([1, 16, 13, 123, 5])
389
torch.Size([1, 16, 13, 123, 5])
390
torch.Size([1, 16, 13, 123, 5])
391
torch.Size([1, 16, 13, 123, 5])
392
torch.Size([1, 16, 13, 123, 5])
393
torch.Size([1, 16, 13, 123, 5])
394
torch.Size([1, 16, 13, 123, 5])
395
torch.Size([1, 16, 13, 123, 5])
396
torch.Size([1, 16, 13, 123, 5])
397
torch.Size([1, 16, 13, 123, 5])
398
torch.Size([1, 16, 13, 123, 5])
399
torch.Size([1, 16, 13, 123, 5])
400
torch.Size([1, 16, 13, 123, 5])
401
torch.Size([1, 16, 13, 123, 5])
402
torch.Size([1, 16, 13, 123, 5])
403
torch.Size([1, 16, 13, 123, 5])
404
torch.Size([1, 16, 13, 123, 5])
405
torch.Size([1, 16, 13, 123, 5])
406
torch.Size([1, 16, 13, 123, 5])
407
torch.Size([1, 16, 13, 123, 5])
408
torch.Size([1, 16, 13, 123, 5])
409
torch.Size([1, 16, 13, 123, 5])
410
torch.Size([1, 16, 13, 123, 5])
411
torch.Size([1, 16, 13, 123, 5])
412
torch.Size([1, 16, 13, 123, 5])
413
torch.Size([1, 16, 13, 123, 5])
414
torch.Size([1, 16, 13, 123, 5])
415
torch.Size([1, 16, 13, 123, 5])
416
torch.Size([1, 16, 13, 123, 5])
417
torch.Size([1, 16, 13, 123, 5])
418
torch.Size([1, 16, 13, 123, 5])
419
torch.Size([1, 16, 13, 123, 5])
420
torch.Size([1, 16, 13, 123, 5])
421
torch.Size([1, 16, 13, 123, 5])
422
torch.Size([1, 16, 13, 123, 5])
423
torch.Size([1, 16, 13, 123, 5])
424
torch.Size([1, 16, 13, 123, 5])
425
torch.Size([1, 16, 13, 123, 5])
426
torch.Size([1, 16, 13, 123, 5])
427
torch.Size([1, 16, 13, 123, 5])
428
torch.Size([1, 16, 13, 123, 5])
429
torch.Size([1, 16, 13, 123, 5])
430
torch.Size([1, 16, 13, 123, 5])
431
torch.Size([1, 16, 13, 123, 5])
432
torch.Size([1, 16, 13, 123, 5])
433
torch.Size([1, 16, 13, 123, 5])
434
torch.Size([1, 16, 13, 123, 5])
435
torch.Size([1, 16, 13, 123, 5])
436
torch.Size([1, 16, 13, 123, 5])
437
torch.Size([1, 16, 13, 123, 5])
438
torch.Size([1, 16, 13, 123, 5])
439
torch.Size([1, 16, 13, 123, 5])
440
torch.Size([1, 16, 13, 123, 5])
441
torch.Size([1, 16, 13, 123, 5])
442
torch.Size([1, 16, 13, 123, 5])
443
torch.Size([1, 16, 13, 123, 5])
444
torch.Size([1, 16, 13, 123, 5])
445
torch.Size([1, 16, 13, 123, 5])
446
torch.Size([1, 16, 13, 123, 5])
447
torch.Size([1, 16, 13, 123, 5])
448
torch.Size([1, 16, 13, 123, 5])
449
torch.Size([1, 16, 13, 123, 5])
450
torch.Size([1, 16, 13, 123, 5])
451
torch.Size([1, 16, 13, 123, 5])
452
torch.Size([1, 16, 13, 123, 5])
453
torch.Size([1, 16, 13, 123, 5])
454
torch.Size([1, 16, 13, 123, 5])
455
torch.Size([1, 16, 13, 123, 5])
456
torch.Size([1, 16, 13, 123, 5])
457
torch.Size([1, 16, 13, 123, 5])
458
torch.Size([1, 16, 13, 123, 5])
459
torch.Size([1, 16, 13, 123, 5])
460
torch.Size([1, 16, 13, 123, 5])
461
torch.Size([1, 16, 13, 123, 5])
462
torch.Size([1, 16, 13, 123, 5])
463
torch.Size([1, 16, 13, 123, 5])
464
torch.Size([1, 16, 13, 123, 5])
465
torch.Size([1, 16, 13, 123, 5])
466
torch.Size([1, 16, 13, 123, 5])
467
torch.Size([1, 16, 13, 123, 5])
468
torch.Size([1, 16, 13, 123, 5])
469
torch.Size([1, 16, 13, 123, 5])
470
torch.Size([1, 16, 13, 123, 5])
471
torch.Size([1, 16, 13, 123, 5])
472
torch.Size([1, 16, 13, 123, 5])
473
torch.Size([1, 16, 13, 123, 5])
474
torch.Size([1, 16, 13, 123, 5])
475
torch.Size([1, 16, 13, 123, 5])
476
torch.Size([1, 16, 13, 123, 5])
477
torch.Size([1, 16, 13, 123, 5])
478
torch.Size([1, 16, 13, 123, 5])
479
torch.Size([1, 16, 13, 123, 5])
480
torch.Size([1, 16, 13, 123, 5])
481
torch.Size([1, 16, 13, 123, 5])
482
torch.Size([1, 16, 13, 123, 5])
483
torch.Size([1, 16, 13, 123, 5])
484
torch.Size([1, 16, 13, 123, 5])
485
torch.Size([1, 16, 13, 123, 5])
486
torch.Size([1, 16, 13, 123, 5])
487
torch.Size([1, 16, 13, 123, 5])
488
torch.Size([1, 16, 13, 123, 5])
489
torch.Size([1, 16, 13, 123, 5])
490
torch.Size([1, 16, 13, 123, 5])
491
torch.Size([1, 16, 13, 123, 5])
492
torch.Size([1, 16, 13, 123, 5])
493
torch.Size([1, 16, 13, 123, 5])
494
torch.Size([1, 16, 13, 123, 5])
495
torch.Size([1, 16, 13, 123, 5])
496
torch.Size([1, 16, 13, 123, 5])
497
torch.Size([1, 16, 13, 123, 5])
498
torch.Size([1, 16, 13, 123, 5])
499
torch.Size([1, 16, 13, 123, 5])
500
torch.Size([1, 16, 13, 123, 5])
501
torch.Size([1, 16, 13, 123, 5])
502
torch.Size([1, 16, 13, 123, 5])
503
torch.Size([1, 16, 13, 123, 5])
504
280
torch.Size([1, 16, 13, 123, 5])
281
torch.Size([1, 16, 13, 123, 5])
282
torch.Size([1, 16, 13, 123, 5])
283
torch.Size([1, 16, 13, 123, 5])
284
torch.Size([1, 16, 13, 123, 5])
285
torch.Size([1, 16, 13, 123, 5])
286
torch.Size([1, 16, 13, 123, 5])
287
torch.Size([1, 16, 13, 123, 5])
288
torch.Size([1, 16, 13, 123, 5])
289
torch.Size([1, 16, 13, 123, 5])
290
torch.Size([1, 16, 13, 123, 5])
291
torch.Size([1, 16, 13, 123, 5])
292
torch.Size([1, 16, 13, 123, 5])
293
torch.Size([1, 16, 13, 123, 5])
294
torch.Size([1, 16, 13, 123, 5])
295
torch.Size([1, 16, 13, 123, 5])
296
torch.Size([1, 16, 13, 123, 5])
297
torch.Size([1, 16, 13, 123, 5])
298
torch.Size([1, 16, 13, 123, 5])
299
torch.Size([1, 16, 13, 123, 5])
300
torch.Size([1, 16, 13, 123, 5])
301
torch.Size([1, 16, 13, 123, 5])
302
torch.Size([1, 16, 13, 123, 5])
303
torch.Size([1, 16, 13, 123, 5])
304
torch.Size([1, 16, 13, 123, 5])
305
torch.Size([1, 16, 13, 123, 5])
306
torch.Size([1, 16, 13, 123, 5])
307
torch.Size([1, 16, 13, 123, 5])
308
torch.Size([1, 16, 13, 123, 5])
309
torch.Size([1, 16, 13, 123, 5])
310
torch.Size([1, 16, 13, 123, 5])
311
torch.Size([1, 16, 13, 123, 5])
312
torch.Size([1, 16, 13, 123, 5])
313
torch.Size([1, 16, 13, 123, 5])
314
torch.Size([1, 16, 13, 123, 5])
315
torch.Size([1, 16, 13, 123, 5])
316
torch.Size([1, 16, 13, 123, 5])
317
torch.Size([1, 16, 13, 123, 5])
318
torch.Size([1, 16, 13, 123, 5])
319
torch.Size([1, 16, 13, 123, 5])
320
torch.Size([1, 16, 13, 123, 5])
321
torch.Size([1, 16, 13, 123, 5])
322
torch.Size([1, 16, 13, 123, 5])
323
torch.Size([1, 16, 13, 123, 5])
324
torch.Size([1, 16, 13, 123, 5])
325
torch.Size([1, 16, 13, 123, 5])
326
torch.Size([1, 16, 13, 123, 5])
327
torch.Size([1, 16, 13, 123, 5])
328
torch.Size([1, 16, 13, 123, 5])
329
torch.Size([1, 16, 13, 123, 5])
330
torch.Size([1, 16, 13, 123, 5])
331
torch.Size([1, 16, 13, 123, 5])
332
torch.Size([1, 16, 13, 123, 5])
333
torch.Size([1, 16, 13, 123, 5])
334
torch.Size([1, 16, 13, 123, 5])
335
torch.Size([1, 16, 13, 123, 5])
336
torch.Size([1, 16, 13, 123, 5])
337
torch.Size([1, 16, 13, 123, 5])
338
torch.Size([1, 16, 13, 123, 5])
339
torch.Size([1, 16, 13, 123, 5])
340
torch.Size([1, 16, 13, 123, 5])
341
torch.Size([1, 16, 13, 123, 5])
342
torch.Size([1, 16, 13, 123, 5])
343
torch.Size([1, 16, 13, 123, 5])
344
torch.Size([1, 16, 13, 123, 5])
345
torch.Size([1, 16, 13, 123, 5])
346
torch.Size([1, 16, 13, 123, 5])
347
torch.Size([1, 16, 13, 123, 5])
348
torch.Size([1, 16, 13, 123, 5])
349
torch.Size([1, 16, 13, 123, 5])
350
torch.Size([1, 16, 13, 123, 5])
351
torch.Size([1, 16, 13, 123, 5])
352
torch.Size([1, 16, 13, 123, 5])
353
torch.Size([1, 16, 13, 123, 5])
354
torch.Size([1, 16, 13, 123, 5])
355
torch.Size([1, 16, 13, 123, 5])
356
torch.Size([1, 16, 13, 123, 5])
357
torch.Size([1, 16, 13, 123, 5])
358
torch.Size([1, 16, 13, 123, 5])
359
torch.Size([1, 16, 13, 123, 5])
360
torch.Size([1, 16, 13, 123, 5])
361
torch.Size([1, 16, 13, 123, 5])
362
torch.Size([1, 16, 13, 123, 5])
363
torch.Size([1, 16, 13, 123, 5])
364
torch.Size([1, 16, 13, 123, 5])
365
torch.Size([1, 16, 13, 123, 5])
366
torch.Size([1, 16, 13, 123, 5])
367
torch.Size([1, 16, 13, 123, 5])
368
torch.Size([1, 16, 13, 123, 5])
369
torch.Size([1, 16, 13, 123, 5])
370
torch.Size([1, 16, 13, 123, 5])
371
torch.Size([1, 16, 13, 123, 5])
372
torch.Size([1, 16, 13, 123, 5])
373
torch.Size([1, 16, 13, 123, 5])
374
torch.Size([1, 16, 13, 123, 5])
375
torch.Size([1, 16, 13, 123, 5])
376
torch.Size([1, 16, 13, 123, 5])
377
torch.Size([1, 16, 13, 123, 5])
378
torch.Size([1, 16, 13, 123, 5])
379
torch.Size([1, 16, 13, 123, 5])
380
torch.Size([1, 16, 13, 123, 5])
381
torch.Size([1, 16, 13, 123, 5])
382
torch.Size([1, 16, 13, 123, 5])
383
torch.Size([1, 16, 13, 123, 5])
384
torch.Size([1, 16, 13, 123, 5])
385
torch.Size([1, 16, 13, 123, 5])
386
torch.Size([1, 16, 13, 123, 5])
387
torch.Size([1, 16, 13, 123, 5])
388
torch.Size([1, 16, 13, 123, 5])
389
torch.Size([1, 16, 13, 123, 5])
390
torch.Size([1, 16, 13, 123, 5])
391
torch.Size([1, 16, 13, 123, 5])
392
torch.Size([1, 16, 13, 123, 5])
393
torch.Size([1, 16, 13, 123, 5])
394
torch.Size([1, 16, 13, 123, 5])
395
torch.Size([1, 16, 13, 123, 5])
396
torch.Size([1, 16, 13, 123, 5])
397
torch.Size([1, 16, 13, 123, 5])
398
torch.Size([1, 16, 13, 123, 5])
399
torch.Size([1, 16, 13, 123, 5])
400
torch.Size([1, 16, 13, 123, 5])
401
torch.Size([1, 16, 13, 123, 5])
402
torch.Size([1, 16, 13, 123, 5])
403
torch.Size([1, 16, 13, 123, 5])
404
torch.Size([1, 16, 13, 123, 5])
405
torch.Size([1, 16, 13, 123, 5])
406
torch.Size([1, 16, 13, 123, 5])
407
torch.Size([1, 16, 13, 123, 5])
408
torch.Size([1, 16, 13, 123, 5])
409
torch.Size([1, 16, 13, 123, 5])
410
torch.Size([1, 16, 13, 123, 5])
411
torch.Size([1, 16, 13, 123, 5])
412
torch.Size([1, 16, 13, 123, 5])
413
torch.Size([1, 16, 13, 123, 5])
414
torch.Size([1, 16, 13, 123, 5])
415
torch.Size([1, 16, 13, 123, 5])
416
torch.Size([1, 16, 13, 123, 5])
417
torch.Size([1, 16, 13, 123, 5])
418
torch.Size([1, 16, 13, 123, 5])
419
torch.Size([1, 16, 13, 123, 5])
420
torch.Size([1, 16, 13, 123, 5])
421
torch.Size([1, 16, 13, 123, 5])
422
torch.Size([1, 16, 13, 123, 5])
423
torch.Size([1, 16, 13, 123, 5])
424
torch.Size([1, 16, 13, 123, 5])
425
torch.Size([1, 16, 13, 123, 5])
426
torch.Size([1, 16, 13, 123, 5])
427
torch.Size([1, 16, 13, 123, 5])
428
torch.Size([1, 16, 13, 123, 5])
429
torch.Size([1, 16, 13, 123, 5])
430
torch.Size([1, 16, 13, 123, 5])
431
torch.Size([1, 16, 13, 123, 5])
432
torch.Size([1, 16, 13, 123, 5])
433
torch.Size([1, 16, 13, 123, 5])
434
torch.Size([1, 16, 13, 123, 5])
435
torch.Size([1, 16, 13, 123, 5])
436
torch.Size([1, 16, 13, 123, 5])
437
torch.Size([1, 16, 13, 123, 5])
438
torch.Size([1, 16, 13, 123, 5])
439
torch.Size([1, 16, 13, 123, 5])
440
torch.Size([1, 16, 13, 123, 5])
441
torch.Size([1, 16, 13, 123, 5])
442
torch.Size([1, 16, 13, 123, 5])
443
torch.Size([1, 16, 13, 123, 5])
444
torch.Size([1, 16, 13, 123, 5])
445
torch.Size([1, 16, 13, 123, 5])
446
torch.Size([1, 16, 13, 123, 5])
447
torch.Size([1, 16, 13, 123, 5])
448
torch.Size([1, 16, 13, 123, 5])
449
torch.Size([1, 16, 13, 123, 5])
450
torch.Size([1, 16, 13, 123, 5])
451
torch.Size([1, 16, 13, 123, 5])
452
torch.Size([1, 16, 13, 123, 5])
453
torch.Size([1, 16, 13, 123, 5])
454
torch.Size([1, 16, 13, 123, 5])
455
torch.Size([1, 16, 13, 123, 5])
456
torch.Size([1, 16, 13, 123, 5])
457
torch.Size([1, 16, 13, 123, 5])
458
torch.Size([1, 16, 13, 123, 5])
459
torch.Size([1, 16, 13, 123, 5])
460
torch.Size([1, 16, 13, 123, 5])
461
torch.Size([1, 16, 13, 123, 5])
462
torch.Size([1, 16, 13, 123, 5])
463
torch.Size([1, 16, 13, 123, 5])
464
torch.Size([1, 16, 13, 123, 5])
465
torch.Size([1, 16, 13, 123, 5])
466
torch.Size([1, 16, 13, 123, 5])
467
torch.Size([1, 16, 13, 123, 5])
468
torch.Size([1, 16, 13, 123, 5])
469
torch.Size([1, 16, 13, 123, 5])
470
torch.Size([1, 16, 13, 123, 5])
471
torch.Size([1, 16, 13, 123, 5])
472
torch.Size([1, 16, 13, 123, 5])
473
torch.Size([1, 16, 13, 123, 5])
474
torch.Size([1, 16, 13, 123, 5])
475
torch.Size([1, 16, 13, 123, 5])
476
torch.Size([1, 16, 13, 123, 5])
477
torch.Size([1, 16, 13, 123, 5])
478
torch.Size([1, 16, 13, 123, 5])
479
torch.Size([1, 16, 13, 123, 5])
480
torch.Size([1, 16, 13, 123, 5])
481
torch.Size([1, 16, 13, 123, 5])
482
torch.Size([1, 16, 13, 123, 5])
483
torch.Size([1, 16, 13, 123, 5])
484
torch.Size([1, 16, 13, 123, 5])
485
torch.Size([1, 16, 13, 123, 5])
486
torch.Size([1, 16, 13, 123, 5])
487
torch.Size([1, 16, 13, 123, 5])
488
torch.Size([1, 16, 13, 123, 5])
489
torch.Size([1, 16, 13, 123, 5])
490
torch.Size([1, 16, 13, 123, 5])
491
torch.Size([1, 16, 13, 123, 5])
492
torch.Size([1, 16, 13, 123, 5])
493
torch.Size([1, 16, 13, 123, 5])
494
torch.Size([1, 16, 13, 123, 5])
495
torch.Size([1, 16, 13, 123, 5])
496
torch.Size([1, 16, 13, 123, 5])
497
torch.Size([1, 16, 13, 123, 5])
498
torch.Size([1, 16, 13, 123, 5])
499
torch.Size([1, 16, 13, 123, 5])
500
torch.Size([1, 16, 13, 123, 5])
501
torch.Size([1, 16, 13, 123, 5])
502
torch.Size([1, 16, 13, 123, 5])
503
torch.Size([1, 16, 13, 123, 5])
504
torch.Size([1, 16, 13, 123, 5])
505
torch.Size([1, 16, 13, 123, 5])
506
torch.Size([1, 16, 13, 123, 5])
507
torch.Size([1, 16, 13, 123, 5])
505
torch.Size([1, 16, 13, 123, 5])
506
torch.Size([1, 16, 13, 123, 5])
507
torch.Size([1, 16, 13, 123, 5])
508
torch.Size([1, 16, 13, 123, 5])
509
torch.Size([1, 16, 13, 123, 5])
510
torch.Size([1, 16, 13, 123, 5])
511
torch.Size([1, 16, 13, 123, 5])
512
torch.Size([1, 16, 13, 123, 5])
513
torch.Size([1, 16, 13, 123, 5])
514
torch.Size([1, 16, 13, 123, 5])
515
torch.Size([1, 16, 13, 123, 5])
516
torch.Size([1, 16, 13, 123, 5])
517
torch.Size([1, 16, 13, 123, 5])
518
torch.Size([1, 16, 13, 123, 5])
519
torch.Size([1, 16, 13, 123, 5])
520
torch.Size([1, 16, 13, 123, 5])
521
torch.Size([1, 16, 13, 123, 5])
522
torch.Size([1, 16, 13, 123, 5])
523
torch.Size([1, 16, 13, 123, 5])
524
torch.Size([1, 16, 13, 123, 5])
525
torch.Size([1, 16, 13, 123, 5])
526
torch.Size([1, 16, 13, 123, 5])
527
torch.Size([1, 16, 13, 123, 5])
528
torch.Size([1, 16, 13, 123, 5])
529
torch.Size([1, 16, 13, 123, 5])
530
In epoch 2, train loss: 0.248 
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
19
torch.Size([1, 16, 13, 123, 5])
20
torch.Size([1, 16, 13, 123, 5])
21
torch.Size([1, 16, 13, 123, 5])
22
torch.Size([1, 16, 13, 123, 5])
23
torch.Size([1, 16, 13, 123, 5])
24
torch.Size([1, 16, 13, 123, 5])
25
torch.Size([1, 16, 13, 123, 5])
26
torch.Size([1, 16, 13, 123, 5])
27
torch.Size([1, 16, 13, 123, 5])
28
torch.Size([1, 16, 13, 123, 5])
29
torch.Size([1, 16, 13, 123, 5])
30
torch.Size([1, 16, 13, 123, 5])
31
torch.Size([1, 16, 13, 123, 5])
32
torch.Size([1, 16, 13, 123, 5])
33
torch.Size([1, 16, 13, 123, 5])
34
torch.Size([1, 16, 13, 123, 5])
35
torch.Size([1, 16, 13, 123, 5])
36
torch.Size([1, 16, 13, 123, 5])
37
torch.Size([1, 16, 13, 123, 5])
38
torch.Size([1, 16, 13, 123, 5])
39
torch.Size([1, 16, 13, 123, 5])
40
torch.Size([1, 16, 13, 123, 5])
41
torch.Size([1, 16, 13, 123, 5])
42
torch.Size([1, 16, 13, 123, 5])
43
torch.Size([1, 16, 13, 123, 5])
44
torch.Size([1, 16, 13, 123, 5])
45
torch.Size([1, 16, 13, 123, 5])
46
torch.Size([1, 16, 13, 123, 5])
47
torch.Size([1, 16, 13, 123, 5])
48
torch.Size([1, 16, 13, 123, 5])
49
torch.Size([1, 16, 13, 123, 5])
50
torch.Size([1, 16, 13, 123, 5])
51
torch.Size([1, 16, 13, 123, 5])
52
torch.Size([1, 16, 13, 123, 5])
53
torch.Size([1, 16, 13, 123, 5])
54
torch.Size([1, 16, 13, 123, 5])
55
torch.Size([1, 16, 13, 123, 5])
56
torch.Size([1, 16, 13, 123, 5])
57
torch.Size([1, 16, 13, 123, 5])
58
torch.Size([1, 16, 13, 123, 5])
59
torch.Size([1, 16, 13, 123, 5])
60
torch.Size([1, 16, 13, 123, 5])
61
torch.Size([1, 16, 13, 123, 5])
62
torch.Size([1, 16, 13, 123, 5])
63
torch.Size([1, 16, 13, 123, 5])
64
torch.Size([1, 16, 13, 123, 5])
65
torch.Size([1, 16, 13, 123, 5])
66
torch.Size([1, 16, 13, 123, 5])
67
torch.Size([1, 16, 13, 123, 5])
68
torch.Size([1, 16, 13, 123, 5])
69
torch.Size([1, 16, 13, 123, 5])
70
torch.Size([1, 16, 13, 123, 5])
71
torch.Size([1, 16, 13, 123, 5])
72
torch.Size([1, 16, 13, 123, 5])
73
torch.Size([1, 16, 13, 123, 5])
74
torch.Size([1, 16, 13, 123, 5])
75
torch.Size([1, 16, 13, 123, 5])
76
torch.Size([1, 16, 13, 123, 5])
77
torch.Size([1, 16, 13, 123, 5])
78
torch.Size([1, 16, 13, 123, 5])
79
torch.Size([1, 16, 13, 123, 5])
80
torch.Size([1, 16, 13, 123, 5])
81
torch.Size([1, 16, 13, 123, 5])
82
torch.Size([1, 16, 13, 123, 5])
83
torch.Size([1, 16, 13, 123, 5])
84
torch.Size([1, 16, 13, 123, 5])
85
torch.Size([1, 16, 13, 123, 5])
86
torch.Size([1, 16, 13, 123, 5])
87
torch.Size([1, 16, 13, 123, 5])
88
torch.Size([1, 16, 13, 123, 5])
89
torch.Size([1, 16, 13, 123, 5])
90
torch.Size([1, 16, 13, 123, 5])
91
torch.Size([1, 16, 13, 123, 5])
92
torch.Size([1, 16, 13, 123, 5])
93
torch.Size([1, 16, 13, 123, 5])
94
torch.Size([1, 16, 13, 123, 5])
95
torch.Size([1, 16, 13, 123, 5])
96
torch.Size([1, 16, 13, 123, 5])
97
torch.Size([1, 16, 13, 123, 5])
98
torch.Size([1, 16, 13, 123, 5])
99
torch.Size([1, 16, 13, 123, 5])
100
torch.Size([1, 16, 13, 123, 5])
101
torch.Size([1, 16, 13, 123, 5])
102
torch.Size([1, 16, 13, 123, 5])
103
torch.Size([1, 16, 13, 123, 5])
104
torch.Size([1, 16, 13, 123, 5])
105
torch.Size([1, 16, 13, 123, 5])
106
torch.Size([1, 16, 13, 123, 5])
107
torch.Size([1, 16, 13, 123, 5])
108
torch.Size([1, 16, 13, 123, 5])
109
torch.Size([1, 16, 13, 123, 5])
110
torch.Size([1, 16, 13, 123, 5])
111
torch.Size([1, 16, 13, 123, 5])
112
torch.Size([1, 16, 13, 123, 5])
113
torch.Size([1, 16, 13, 123, 5])
114
torch.Size([1, 16, 13, 123, 5])
115
torch.Size([1, 16, 13, 123, 5])
116
torch.Size([1, 16, 13, 123, 5])
117
torch.Size([1, 16, 13, 123, 5])
118
torch.Size([1, 16, 13, 123, 5])
119
torch.Size([1, 16, 13, 123, 5])
120
torch.Size([1, 16, 13, 123, 5])
121
torch.Size([1, 16, 13, 123, 5])
122
torch.Size([1, 16, 13, 123, 5])
123
torch.Size([1, 16, 13, 123, 5])
124
torch.Size([1, 16, 13, 123, 5])
125
torch.Size([1, 16, 13, 123, 5])
126
torch.Size([1, 16, 13, 123, 5])
127
torch.Size([1, 16, 13, 123, 5])
128
torch.Size([1, 16, 13, 123, 5])
129
torch.Size([1, 16, 13, 123, 5])
130
torch.Size([1, 16, 13, 123, 5])
131
torch.Size([1, 16, 13, 123, 5])
132
torch.Size([1, 16, 13, 123, 5])
133
torch.Size([1, 16, 13, 123, 5])
134
torch.Size([1, 16, 13, 123, 5])
135
torch.Size([1, 16, 13, 123, 5])
136
torch.Size([1, 16, 13, 123, 5])
137
torch.Size([1, 16, 13, 123, 5])
138
torch.Size([1, 16, 13, 123, 5])
139
torch.Size([1, 16, 13, 123, 5])
140
torch.Size([1, 16, 13, 123, 5])
141
torch.Size([1, 16, 13, 123, 5])
142
torch.Size([1, 16, 13, 123, 5])
143
torch.Size([1, 16, 13, 123, 5])
144
torch.Size([1, 16, 13, 123, 5])
145
torch.Size([1, 16, 13, 123, 5])
146
torch.Size([1, 16, 13, 123, 5])
147
torch.Size([1, 16, 13, 123, 5])
148
torch.Size([1, 16, 13, 123, 5])
149
torch.Size([1, 16, 13, 123, 5])
150
torch.Size([1, 16, 13, 123, 5])
151
torch.Size([1, 16, 13, 123, 5])
152
torch.Size([1, 16, 13, 123, 5])
153
torch.Size([1, 16, 13, 123, 5])
154
torch.Size([1, 16, 13, 123, 5])
155
torch.Size([1, 16, 13, 123, 5])
156
torch.Size([1, 16, 13, 123, 5])
157
torch.Size([1, 16, 13, 123, 5])
158
torch.Size([1, 16, 13, 123, 5])
159
torch.Size([1, 16, 13, 123, 5])
160
torch.Size([1, 16, 13, 123, 5])
161
torch.Size([1, 16, 13, 123, 5])
162
torch.Size([1, 16, 13, 123, 5])
163
torch.Size([1, 16, 13, 123, 5])
164
torch.Size([1, 16, 13, 123, 5])
165
torch.Size([1, 16, 13, 123, 5])
166
torch.Size([1, 16, 13, 123, 5])
167
torch.Size([1, 16, 13, 123, 5])
168
torch.Size([1, 16, 13, 123, 5])
169
torch.Size([1, 16, 13, 123, 5])
170
torch.Size([1, 16, 13, 123, 5])
171
torch.Size([1, 16, 13, 123, 5])
172
torch.Size([1, 16, 13, 123, 5])
173
torch.Size([1, 16, 13, 123, 5])
174
torch.Size([1, 16, 13, 123, 5])
175
torch.Size([1, 16, 13, 123, 5])
176
torch.Size([1, 16, 13, 123, 5])
177
torch.Size([1, 16, 13, 123, 5])
178
torch.Size([1, 16, 13, 123, 5])
179
torch.Size([1, 16, 13, 123, 5])
180
torch.Size([1, 16, 13, 123, 5])
181
torch.Size([1, 16, 13, 123, 5])
182
torch.Size([1, 16, 13, 123, 5])
183
torch.Size([1, 16, 13, 123, 5])
184
torch.Size([1, 16, 13, 123, 5])
185
torch.Size([1, 16, 13, 123, 5])
186
torch.Size([1, 16, 13, 123, 5])
187
torch.Size([1, 16, 13, 123, 5])
188
torch.Size([1, 16, 13, 123, 5])
189
torch.Size([1, 16, 13, 123, 5])
190
torch.Size([1, 16, 13, 123, 5])
191
torch.Size([1, 16, 13, 123, 5])
192
torch.Size([1, 16, 13, 123, 5])
193
torch.Size([1, 16, 13, 123, 5])
194
torch.Size([1, 16, 13, 123, 5])
195
torch.Size([1, 16, 13, 123, 5])
196
torch.Size([1, 16, 13, 123, 5])
197
torch.Size([1, 16, 13, 123, 5])
198
torch.Size([1, 16, 13, 123, 5])
199
torch.Size([1, 16, 13, 123, 5])
200
torch.Size([1, 16, 13, 123, 5])
201
torch.Size([1, 16, 13, 123, 5])
202
torch.Size([1, 16, 13, 123, 5])
203
torch.Size([1, 16, 13, 123, 5])
508
torch.Size([1, 16, 13, 123, 5])
509
torch.Size([1, 16, 13, 123, 5])
510
torch.Size([1, 16, 13, 123, 5])
511
torch.Size([1, 16, 13, 123, 5])
512
torch.Size([1, 16, 13, 123, 5])
513
torch.Size([1, 16, 13, 123, 5])
514
torch.Size([1, 16, 13, 123, 5])
515
torch.Size([1, 16, 13, 123, 5])
516
torch.Size([1, 16, 13, 123, 5])
517
torch.Size([1, 16, 13, 123, 5])
518
torch.Size([1, 16, 13, 123, 5])
519
torch.Size([1, 16, 13, 123, 5])
520
torch.Size([1, 16, 13, 123, 5])
521
torch.Size([1, 16, 13, 123, 5])
522
torch.Size([1, 16, 13, 123, 5])
523
torch.Size([1, 16, 13, 123, 5])
524
torch.Size([1, 16, 13, 123, 5])
525
torch.Size([1, 16, 13, 123, 5])
526
torch.Size([1, 16, 13, 123, 5])
527
torch.Size([1, 16, 13, 123, 5])
528
torch.Size([1, 16, 13, 123, 5])
529
torch.Size([1, 16, 13, 123, 5])
530
In epoch 2, train loss: 0.248 
torch.Size([1, 16, 13, 123, 5])
1
torch.Size([1, 16, 13, 123, 5])
2
torch.Size([1, 16, 13, 123, 5])
3
torch.Size([1, 16, 13, 123, 5])
4
torch.Size([1, 16, 13, 123, 5])
5
torch.Size([1, 16, 13, 123, 5])
6
torch.Size([1, 16, 13, 123, 5])
7
torch.Size([1, 16, 13, 123, 5])
8
torch.Size([1, 16, 13, 123, 5])
9
torch.Size([1, 16, 13, 123, 5])
10
torch.Size([1, 16, 13, 123, 5])
11
torch.Size([1, 16, 13, 123, 5])
12
torch.Size([1, 16, 13, 123, 5])
13
torch.Size([1, 16, 13, 123, 5])
14
torch.Size([1, 16, 13, 123, 5])
15
torch.Size([1, 16, 13, 123, 5])
16
torch.Size([1, 16, 13, 123, 5])
17
torch.Size([1, 16, 13, 123, 5])
18
torch.Size([1, 16, 13, 123, 5])
19
torch.Size([1, 16, 13, 123, 5])
20
torch.Size([1, 16, 13, 123, 5])
21
torch.Size([1, 16, 13, 123, 5])
22
torch.Size([1, 16, 13, 123, 5])
23
torch.Size([1, 16, 13, 123, 5])
24
torch.Size([1, 16, 13, 123, 5])
25
torch.Size([1, 16, 13, 123, 5])
26
torch.Size([1, 16, 13, 123, 5])
27
torch.Size([1, 16, 13, 123, 5])
28
torch.Size([1, 16, 13, 123, 5])
29
torch.Size([1, 16, 13, 123, 5])
30
torch.Size([1, 16, 13, 123, 5])
31
torch.Size([1, 16, 13, 123, 5])
32
torch.Size([1, 16, 13, 123, 5])
33
torch.Size([1, 16, 13, 123, 5])
34
torch.Size([1, 16, 13, 123, 5])
35
torch.Size([1, 16, 13, 123, 5])
36
torch.Size([1, 16, 13, 123, 5])
37
torch.Size([1, 16, 13, 123, 5])
38
torch.Size([1, 16, 13, 123, 5])
39
torch.Size([1, 16, 13, 123, 5])
40
torch.Size([1, 16, 13, 123, 5])
41
torch.Size([1, 16, 13, 123, 5])
42
torch.Size([1, 16, 13, 123, 5])
43
torch.Size([1, 16, 13, 123, 5])
44
torch.Size([1, 16, 13, 123, 5])
45
torch.Size([1, 16, 13, 123, 5])
46
torch.Size([1, 16, 13, 123, 5])
47
torch.Size([1, 16, 13, 123, 5])
48
torch.Size([1, 16, 13, 123, 5])
49
torch.Size([1, 16, 13, 123, 5])
50
torch.Size([1, 16, 13, 123, 5])
51
torch.Size([1, 16, 13, 123, 5])
52
torch.Size([1, 16, 13, 123, 5])
53
torch.Size([1, 16, 13, 123, 5])
54
torch.Size([1, 16, 13, 123, 5])
55
torch.Size([1, 16, 13, 123, 5])
56
torch.Size([1, 16, 13, 123, 5])
57
torch.Size([1, 16, 13, 123, 5])
58
torch.Size([1, 16, 13, 123, 5])
59
torch.Size([1, 16, 13, 123, 5])
60
torch.Size([1, 16, 13, 123, 5])
61
torch.Size([1, 16, 13, 123, 5])
62
torch.Size([1, 16, 13, 123, 5])
63
torch.Size([1, 16, 13, 123, 5])
64
torch.Size([1, 16, 13, 123, 5])
65
torch.Size([1, 16, 13, 123, 5])
66
torch.Size([1, 16, 13, 123, 5])
67
torch.Size([1, 16, 13, 123, 5])
68
torch.Size([1, 16, 13, 123, 5])
69
torch.Size([1, 16, 13, 123, 5])
70
torch.Size([1, 16, 13, 123, 5])
71
torch.Size([1, 16, 13, 123, 5])
72
torch.Size([1, 16, 13, 123, 5])
73
torch.Size([1, 16, 13, 123, 5])
74
torch.Size([1, 16, 13, 123, 5])
75
torch.Size([1, 16, 13, 123, 5])
76
torch.Size([1, 16, 13, 123, 5])
77
torch.Size([1, 16, 13, 123, 5])
78
torch.Size([1, 16, 13, 123, 5])
79
torch.Size([1, 16, 13, 123, 5])
80
torch.Size([1, 16, 13, 123, 5])
81
torch.Size([1, 16, 13, 123, 5])
82
torch.Size([1, 16, 13, 123, 5])
83
torch.Size([1, 16, 13, 123, 5])
84
torch.Size([1, 16, 13, 123, 5])
85
torch.Size([1, 16, 13, 123, 5])
86
torch.Size([1, 16, 13, 123, 5])
87
torch.Size([1, 16, 13, 123, 5])
88
torch.Size([1, 16, 13, 123, 5])
89
torch.Size([1, 16, 13, 123, 5])
90
torch.Size([1, 16, 13, 123, 5])
91
torch.Size([1, 16, 13, 123, 5])
92
torch.Size([1, 16, 13, 123, 5])
93
torch.Size([1, 16, 13, 123, 5])
94
torch.Size([1, 16, 13, 123, 5])
95
torch.Size([1, 16, 13, 123, 5])
96
torch.Size([1, 16, 13, 123, 5])
97
torch.Size([1, 16, 13, 123, 5])
98
torch.Size([1, 16, 13, 123, 5])
99
torch.Size([1, 16, 13, 123, 5])
100
torch.Size([1, 16, 13, 123, 5])
101
torch.Size([1, 16, 13, 123, 5])
102
torch.Size([1, 16, 13, 123, 5])
103
torch.Size([1, 16, 13, 123, 5])
104
torch.Size([1, 16, 13, 123, 5])
105
torch.Size([1, 16, 13, 123, 5])
106
torch.Size([1, 16, 13, 123, 5])
107
torch.Size([1, 16, 13, 123, 5])
108
torch.Size([1, 16, 13, 123, 5])
109
torch.Size([1, 16, 13, 123, 5])
110
torch.Size([1, 16, 13, 123, 5])
111
torch.Size([1, 16, 13, 123, 5])
112
torch.Size([1, 16, 13, 123, 5])
113
torch.Size([1, 16, 13, 123, 5])
114
torch.Size([1, 16, 13, 123, 5])
115
torch.Size([1, 16, 13, 123, 5])
116
torch.Size([1, 16, 13, 123, 5])
117
torch.Size([1, 16, 13, 123, 5])
118
torch.Size([1, 16, 13, 123, 5])
119
torch.Size([1, 16, 13, 123, 5])
120
torch.Size([1, 16, 13, 123, 5])
121
torch.Size([1, 16, 13, 123, 5])
122
torch.Size([1, 16, 13, 123, 5])
123
torch.Size([1, 16, 13, 123, 5])
124
torch.Size([1, 16, 13, 123, 5])
125
torch.Size([1, 16, 13, 123, 5])
126
torch.Size([1, 16, 13, 123, 5])
127
torch.Size([1, 16, 13, 123, 5])
128
torch.Size([1, 16, 13, 123, 5])
129
torch.Size([1, 16, 13, 123, 5])
130
torch.Size([1, 16, 13, 123, 5])
131
torch.Size([1, 16, 13, 123, 5])
132
torch.Size([1, 16, 13, 123, 5])
133
torch.Size([1, 16, 13, 123, 5])
134
torch.Size([1, 16, 13, 123, 5])
135
torch.Size([1, 16, 13, 123, 5])
136
torch.Size([1, 16, 13, 123, 5])
137
torch.Size([1, 16, 13, 123, 5])
138
torch.Size([1, 16, 13, 123, 5])
139
torch.Size([1, 16, 13, 123, 5])
140
torch.Size([1, 16, 13, 123, 5])
141
torch.Size([1, 16, 13, 123, 5])
142
torch.Size([1, 16, 13, 123, 5])
143
torch.Size([1, 16, 13, 123, 5])
144
torch.Size([1, 16, 13, 123, 5])
145
torch.Size([1, 16, 13, 123, 5])
146
torch.Size([1, 16, 13, 123, 5])
147
torch.Size([1, 16, 13, 123, 5])
148
torch.Size([1, 16, 13, 123, 5])
149
torch.Size([1, 16, 13, 123, 5])
150
torch.Size([1, 16, 13, 123, 5])
151
torch.Size([1, 16, 13, 123, 5])
152
torch.Size([1, 16, 13, 123, 5])
153
torch.Size([1, 16, 13, 123, 5])
154
torch.Size([1, 16, 13, 123, 5])
155
torch.Size([1, 16, 13, 123, 5])
156
torch.Size([1, 16, 13, 123, 5])
157
torch.Size([1, 16, 13, 123, 5])
158
torch.Size([1, 16, 13, 123, 5])
159
torch.Size([1, 16, 13, 123, 5])
160
torch.Size([1, 16, 13, 123, 5])
161
torch.Size([1, 16, 13, 123, 5])
162
torch.Size([1, 16, 13, 123, 5])
163
torch.Size([1, 16, 13, 123, 5])
164
torch.Size([1, 16, 13, 123, 5])
165
torch.Size([1, 16, 13, 123, 5])
166
torch.Size([1, 16, 13, 123, 5])
167
torch.Size([1, 16, 13, 123, 5])
168
torch.Size([1, 16, 13, 123, 5])
169
torch.Size([1, 16, 13, 123, 5])
170
torch.Size([1, 16, 13, 123, 5])
171
torch.Size([1, 16, 13, 123, 5])
172
torch.Size([1, 16, 13, 123, 5])
173
torch.Size([1, 16, 13, 123, 5])
174
torch.Size([1, 16, 13, 123, 5])
175
torch.Size([1, 16, 13, 123, 5])
176
torch.Size([1, 16, 13, 123, 5])
177
torch.Size([1, 16, 13, 123, 5])
178
torch.Size([1, 16, 13, 123, 5])
179
torch.Size([1, 16, 13, 123, 5])
180
torch.Size([1, 16, 13, 123, 5])
181
torch.Size([1, 16, 13, 123, 5])
182
torch.Size([1, 16, 13, 123, 5])
183
torch.Size([1, 16, 13, 123, 5])
184
torch.Size([1, 16, 13, 123, 5])
185
torch.Size([1, 16, 13, 123, 5])
186
torch.Size([1, 16, 13, 123, 5])
187
torch.Size([1, 16, 13, 123, 5])
188
torch.Size([1, 16, 13, 123, 5])
189
torch.Size([1, 16, 13, 123, 5])
190
torch.Size([1, 16, 13, 123, 5])
191
torch.Size([1, 16, 13, 123, 5])
192
torch.Size([1, 16, 13, 123, 5])
193
torch.Size([1, 16, 13, 123, 5])
194
torch.Size([1, 16, 13, 123, 5])
195
torch.Size([1, 16, 13, 123, 5])
196
torch.Size([1, 16, 13, 123, 5])
197
torch.Size([1, 16, 13, 123, 5])
198
torch.Size([1, 16, 13, 123, 5])
199
torch.Size([1, 16, 13, 123, 5])
200
torch.Size([1, 16, 13, 123, 5])
201
torch.Size([1, 16, 13, 123, 5])
202
torch.Size([1, 16, 13, 123, 5])
203
torch.Size([1, 16, 13, 123, 5])
204
torch.Size([1, 16, 13, 123, 5])
205
torch.Size([1, 16, 13, 123, 5])
206
torch.Size([1, 16, 13, 123, 5])
204
torch.Size([1, 16, 13, 123, 5])
205
torch.Size([1, 16, 13, 123, 5])
206
torch.Size([1, 16, 13, 123, 5])
207
torch.Size([1, 16, 13, 123, 5])
208
torch.Size([1, 16, 13, 123, 5])
209
torch.Size([1, 16, 13, 123, 5])
210
torch.Size([1, 16, 13, 123, 5])
211
torch.Size([1, 16, 13, 123, 5])
212
torch.Size([1, 16, 13, 123, 5])
213
torch.Size([1, 16, 13, 123, 5])
214
torch.Size([1, 16, 13, 123, 5])
215
torch.Size([1, 16, 13, 123, 5])
216
torch.Size([1, 16, 13, 123, 5])
217
torch.Size([1, 16, 13, 123, 5])
218
torch.Size([1, 16, 13, 123, 5])
219
torch.Size([1, 16, 13, 123, 5])
220
torch.Size([1, 16, 13, 123, 5])
221
torch.Size([1, 16, 13, 123, 5])
222
torch.Size([1, 16, 13, 123, 5])
223
torch.Size([1, 16, 13, 123, 5])
224
torch.Size([1, 16, 13, 123, 5])
225
torch.Size([1, 16, 13, 123, 5])
226
torch.Size([1, 16, 13, 123, 5])
227
torch.Size([1, 16, 13, 123, 5])
228
torch.Size([1, 16, 13, 123, 5])
229
torch.Size([1, 16, 13, 123, 5])
230
torch.Size([1, 16, 13, 123, 5])
231
torch.Size([1, 16, 13, 123, 5])
232
torch.Size([1, 16, 13, 123, 5])
233
torch.Size([1, 16, 13, 123, 5])
234
torch.Size([1, 16, 13, 123, 5])
235
torch.Size([1, 16, 13, 123, 5])
236
torch.Size([1, 16, 13, 123, 5])
237
torch.Size([1, 16, 13, 123, 5])
238
torch.Size([1, 16, 13, 123, 5])
239
torch.Size([1, 16, 13, 123, 5])
240
torch.Size([1, 16, 13, 123, 5])
241
torch.Size([1, 16, 13, 123, 5])
242
torch.Size([1, 16, 13, 123, 5])
243
torch.Size([1, 16, 13, 123, 5])
244
torch.Size([1, 16, 13, 123, 5])
245
torch.Size([1, 16, 13, 123, 5])
246
torch.Size([1, 16, 13, 123, 5])
247
torch.Size([1, 16, 13, 123, 5])
248
torch.Size([1, 16, 13, 123, 5])
249
torch.Size([1, 16, 13, 123, 5])
250
torch.Size([1, 16, 13, 123, 5])
251
torch.Size([1, 16, 13, 123, 5])
252
torch.Size([1, 16, 13, 123, 5])
253
torch.Size([1, 16, 13, 123, 5])
254
torch.Size([1, 16, 13, 123, 5])
255
torch.Size([1, 16, 13, 123, 5])
256
torch.Size([1, 16, 13, 123, 5])
257
torch.Size([1, 16, 13, 123, 5])
258
torch.Size([1, 16, 13, 123, 5])
259
torch.Size([1, 16, 13, 123, 5])
260
torch.Size([1, 16, 13, 123, 5])
261
torch.Size([1, 16, 13, 123, 5])
262
torch.Size([1, 16, 13, 123, 5])
263
torch.Size([1, 16, 13, 123, 5])
264
torch.Size([1, 16, 13, 123, 5])
265
torch.Size([1, 16, 13, 123, 5])
266
torch.Size([1, 16, 13, 123, 5])
267
torch.Size([1, 16, 13, 123, 5])
268
torch.Size([1, 16, 13, 123, 5])
269
torch.Size([1, 16, 13, 123, 5])
270
torch.Size([1, 16, 13, 123, 5])
271
torch.Size([1, 16, 13, 123, 5])
272
torch.Size([1, 16, 13, 123, 5])
273
torch.Size([1, 16, 13, 123, 5])
274
torch.Size([1, 16, 13, 123, 5])
275
torch.Size([1, 16, 13, 123, 5])
276
torch.Size([1, 16, 13, 123, 5])
277
torch.Size([1, 16, 13, 123, 5])
278
torch.Size([1, 16, 13, 123, 5])
279
torch.Size([1, 16, 13, 123, 5])
280
torch.Size([1, 16, 13, 123, 5])
281
torch.Size([1, 16, 13, 123, 5])
282
torch.Size([1, 16, 13, 123, 5])
283
torch.Size([1, 16, 13, 123, 5])
284
torch.Size([1, 16, 13, 123, 5])
285
torch.Size([1, 16, 13, 123, 5])
286
torch.Size([1, 16, 13, 123, 5])
287
torch.Size([1, 16, 13, 123, 5])
288
torch.Size([1, 16, 13, 123, 5])
289
torch.Size([1, 16, 13, 123, 5])
290
torch.Size([1, 16, 13, 123, 5])
291
torch.Size([1, 16, 13, 123, 5])
292
torch.Size([1, 16, 13, 123, 5])
293
torch.Size([1, 16, 13, 123, 5])
294
torch.Size([1, 16, 13, 123, 5])
295
torch.Size([1, 16, 13, 123, 5])
296
torch.Size([1, 16, 13, 123, 5])
297
torch.Size([1, 16, 13, 123, 5])
298
torch.Size([1, 16, 13, 123, 5])
299
torch.Size([1, 16, 13, 123, 5])
300
torch.Size([1, 16, 13, 123, 5])
301
torch.Size([1, 16, 13, 123, 5])
302
torch.Size([1, 16, 13, 123, 5])
303
torch.Size([1, 16, 13, 123, 5])
304
torch.Size([1, 16, 13, 123, 5])
305
torch.Size([1, 16, 13, 123, 5])
306
torch.Size([1, 16, 13, 123, 5])
307
torch.Size([1, 16, 13, 123, 5])
308
torch.Size([1, 16, 13, 123, 5])
309
torch.Size([1, 16, 13, 123, 5])
310
torch.Size([1, 16, 13, 123, 5])
311
torch.Size([1, 16, 13, 123, 5])
312
torch.Size([1, 16, 13, 123, 5])
313
torch.Size([1, 16, 13, 123, 5])
314
torch.Size([1, 16, 13, 123, 5])
315
torch.Size([1, 16, 13, 123, 5])
316
torch.Size([1, 16, 13, 123, 5])
317
torch.Size([1, 16, 13, 123, 5])
318
torch.Size([1, 16, 13, 123, 5])
319
torch.Size([1, 16, 13, 123, 5])
320
torch.Size([1, 16, 13, 123, 5])
321
torch.Size([1, 16, 13, 123, 5])
322
torch.Size([1, 16, 13, 123, 5])
323
torch.Size([1, 16, 13, 123, 5])
324
torch.Size([1, 16, 13, 123, 5])
325
torch.Size([1, 16, 13, 123, 5])
326
torch.Size([1, 16, 13, 123, 5])
327
torch.Size([1, 16, 13, 123, 5])
328
torch.Size([1, 16, 13, 123, 5])
329
torch.Size([1, 16, 13, 123, 5])
330
torch.Size([1, 16, 13, 123, 5])
331
torch.Size([1, 16, 13, 123, 5])
332
torch.Size([1, 16, 13, 123, 5])
333
torch.Size([1, 16, 13, 123, 5])
334
torch.Size([1, 16, 13, 123, 5])
335
torch.Size([1, 16, 13, 123, 5])
336
torch.Size([1, 16, 13, 123, 5])
337
torch.Size([1, 16, 13, 123, 5])
338
torch.Size([1, 16, 13, 123, 5])
339
torch.Size([1, 16, 13, 123, 5])
340
torch.Size([1, 16, 13, 123, 5])
341
torch.Size([1, 16, 13, 123, 5])
342
torch.Size([1, 16, 13, 123, 5])
343
torch.Size([1, 16, 13, 123, 5])
344
torch.Size([1, 16, 13, 123, 5])
345
torch.Size([1, 16, 13, 123, 5])
346
torch.Size([1, 16, 13, 123, 5])
347
torch.Size([1, 16, 13, 123, 5])
348
torch.Size([1, 16, 13, 123, 5])
349
torch.Size([1, 16, 13, 123, 5])
350
torch.Size([1, 16, 13, 123, 5])
351
torch.Size([1, 16, 13, 123, 5])
352
torch.Size([1, 16, 13, 123, 5])
353
torch.Size([1, 16, 13, 123, 5])
354
torch.Size([1, 16, 13, 123, 5])
355
torch.Size([1, 16, 13, 123, 5])
356
torch.Size([1, 16, 13, 123, 5])
357
torch.Size([1, 16, 13, 123, 5])
358
torch.Size([1, 16, 13, 123, 5])
359
torch.Size([1, 16, 13, 123, 5])
360
torch.Size([1, 16, 13, 123, 5])
361
torch.Size([1, 16, 13, 123, 5])
362
torch.Size([1, 16, 13, 123, 5])
363
torch.Size([1, 16, 13, 123, 5])
364
torch.Size([1, 16, 13, 123, 5])
365
torch.Size([1, 16, 13, 123, 5])
366
torch.Size([1, 16, 13, 123, 5])
367
torch.Size([1, 16, 13, 123, 5])
368
torch.Size([1, 16, 13, 123, 5])
369
torch.Size([1, 16, 13, 123, 5])
370
torch.Size([1, 16, 13, 123, 5])
371
torch.Size([1, 16, 13, 123, 5])
372
torch.Size([1, 16, 13, 123, 5])
373
torch.Size([1, 16, 13, 123, 5])
374
torch.Size([1, 16, 13, 123, 5])
375
torch.Size([1, 16, 13, 123, 5])
376
torch.Size([1, 16, 13, 123, 5])
377
torch.Size([1, 16, 13, 123, 5])
378
torch.Size([1, 16, 13, 123, 5])
379
torch.Size([1, 16, 13, 123, 5])
380
torch.Size([1, 16, 13, 123, 5])
381
torch.Size([1, 16, 13, 123, 5])
382
torch.Size([1, 16, 13, 123, 5])
383
torch.Size([1, 16, 13, 123, 5])
384
torch.Size([1, 16, 13, 123, 5])
385
torch.Size([1, 16, 13, 123, 5])
386
torch.Size([1, 16, 13, 123, 5])
387
torch.Size([1, 16, 13, 123, 5])
388
torch.Size([1, 16, 13, 123, 5])
389
torch.Size([1, 16, 13, 123, 5])
390
torch.Size([1, 16, 13, 123, 5])
391
torch.Size([1, 16, 13, 123, 5])
392
torch.Size([1, 16, 13, 123, 5])
393
torch.Size([1, 16, 13, 123, 5])
394
torch.Size([1, 16, 13, 123, 5])
395
torch.Size([1, 16, 13, 123, 5])
396
torch.Size([1, 16, 13, 123, 5])
397
torch.Size([1, 16, 13, 123, 5])
398
torch.Size([1, 16, 13, 123, 5])
399
torch.Size([1, 16, 13, 123, 5])
400
torch.Size([1, 16, 13, 123, 5])
401
torch.Size([1, 16, 13, 123, 5])
402
torch.Size([1, 16, 13, 123, 5])
403
torch.Size([1, 16, 13, 123, 5])
404
torch.Size([1, 16, 13, 123, 5])
405
torch.Size([1, 16, 13, 123, 5])
406
torch.Size([1, 16, 13, 123, 5])
407
torch.Size([1, 16, 13, 123, 5])
408
torch.Size([1, 16, 13, 123, 5])
409
torch.Size([1, 16, 13, 123, 5])
410
torch.Size([1, 16, 13, 123, 5])
411
torch.Size([1, 16, 13, 123, 5])
412
torch.Size([1, 16, 13, 123, 5])
413
torch.Size([1, 16, 13, 123, 5])
414
torch.Size([1, 16, 13, 123, 5])
415
torch.Size([1, 16, 13, 123, 5])
416
torch.Size([1, 16, 13, 123, 5])
417
torch.Size([1, 16, 13, 123, 5])
418
torch.Size([1, 16, 13, 123, 5])
419
torch.Size([1, 16, 13, 123, 5])
420
torch.Size([1, 16, 13, 123, 5])
421
torch.Size([1, 16, 13, 123, 5])
422
torch.Size([1, 16, 13, 123, 5])
423
torch.Size([1, 16, 13, 123, 5])
424
torch.Size([1, 16, 13, 123, 5])
425
torch.Size([1, 16, 13, 123, 5])
426
torch.Size([1, 16, 13, 123, 5])
427
torch.Size([1, 16, 13, 123, 5])
428
torch.Size([1, 16, 13, 123, 5])
429
torch.Size([1, 16, 13, 123, 5])
430
torch.Size([1, 16, 13, 123, 5])
207
torch.Size([1, 16, 13, 123, 5])
208
torch.Size([1, 16, 13, 123, 5])
209
torch.Size([1, 16, 13, 123, 5])
210
torch.Size([1, 16, 13, 123, 5])
211
torch.Size([1, 16, 13, 123, 5])
212
torch.Size([1, 16, 13, 123, 5])
213
torch.Size([1, 16, 13, 123, 5])
214
torch.Size([1, 16, 13, 123, 5])
215
torch.Size([1, 16, 13, 123, 5])
216
torch.Size([1, 16, 13, 123, 5])
217
torch.Size([1, 16, 13, 123, 5])
218
torch.Size([1, 16, 13, 123, 5])
219
torch.Size([1, 16, 13, 123, 5])
220
torch.Size([1, 16, 13, 123, 5])
221
torch.Size([1, 16, 13, 123, 5])
222
torch.Size([1, 16, 13, 123, 5])
223
torch.Size([1, 16, 13, 123, 5])
224
torch.Size([1, 16, 13, 123, 5])
225
torch.Size([1, 16, 13, 123, 5])
226
torch.Size([1, 16, 13, 123, 5])
227
torch.Size([1, 16, 13, 123, 5])
228
torch.Size([1, 16, 13, 123, 5])
229
torch.Size([1, 16, 13, 123, 5])
230
torch.Size([1, 16, 13, 123, 5])
231
torch.Size([1, 16, 13, 123, 5])
232
torch.Size([1, 16, 13, 123, 5])
233
torch.Size([1, 16, 13, 123, 5])
234
torch.Size([1, 16, 13, 123, 5])
235
torch.Size([1, 16, 13, 123, 5])
236
torch.Size([1, 16, 13, 123, 5])
237
torch.Size([1, 16, 13, 123, 5])
238
torch.Size([1, 16, 13, 123, 5])
239
torch.Size([1, 16, 13, 123, 5])
240
torch.Size([1, 16, 13, 123, 5])
241
torch.Size([1, 16, 13, 123, 5])
242
torch.Size([1, 16, 13, 123, 5])
243
torch.Size([1, 16, 13, 123, 5])
244
torch.Size([1, 16, 13, 123, 5])
245
torch.Size([1, 16, 13, 123, 5])
246
torch.Size([1, 16, 13, 123, 5])
247
torch.Size([1, 16, 13, 123, 5])
248
torch.Size([1, 16, 13, 123, 5])
249
torch.Size([1, 16, 13, 123, 5])
250
torch.Size([1, 16, 13, 123, 5])
251
torch.Size([1, 16, 13, 123, 5])
252
torch.Size([1, 16, 13, 123, 5])
253
torch.Size([1, 16, 13, 123, 5])
254
torch.Size([1, 16, 13, 123, 5])
255
torch.Size([1, 16, 13, 123, 5])
256
torch.Size([1, 16, 13, 123, 5])
257
torch.Size([1, 16, 13, 123, 5])
258
torch.Size([1, 16, 13, 123, 5])
259
torch.Size([1, 16, 13, 123, 5])
260
torch.Size([1, 16, 13, 123, 5])
261
torch.Size([1, 16, 13, 123, 5])
262
torch.Size([1, 16, 13, 123, 5])
263
torch.Size([1, 16, 13, 123, 5])
264
torch.Size([1, 16, 13, 123, 5])
265
torch.Size([1, 16, 13, 123, 5])
266
torch.Size([1, 16, 13, 123, 5])
267
torch.Size([1, 16, 13, 123, 5])
268
torch.Size([1, 16, 13, 123, 5])
269
torch.Size([1, 16, 13, 123, 5])
270
torch.Size([1, 16, 13, 123, 5])
271
torch.Size([1, 16, 13, 123, 5])
272
torch.Size([1, 16, 13, 123, 5])
273
torch.Size([1, 16, 13, 123, 5])
274
torch.Size([1, 16, 13, 123, 5])
275
torch.Size([1, 16, 13, 123, 5])
276
torch.Size([1, 16, 13, 123, 5])
277
torch.Size([1, 16, 13, 123, 5])
278
torch.Size([1, 16, 13, 123, 5])
279
torch.Size([1, 16, 13, 123, 5])
280
torch.Size([1, 16, 13, 123, 5])
281
torch.Size([1, 16, 13, 123, 5])
282
torch.Size([1, 16, 13, 123, 5])
283
torch.Size([1, 16, 13, 123, 5])
284
torch.Size([1, 16, 13, 123, 5])
285
torch.Size([1, 16, 13, 123, 5])
286
torch.Size([1, 16, 13, 123, 5])
287
torch.Size([1, 16, 13, 123, 5])
288
torch.Size([1, 16, 13, 123, 5])
289
torch.Size([1, 16, 13, 123, 5])
290
torch.Size([1, 16, 13, 123, 5])
291
torch.Size([1, 16, 13, 123, 5])
292
torch.Size([1, 16, 13, 123, 5])
293
torch.Size([1, 16, 13, 123, 5])
294
torch.Size([1, 16, 13, 123, 5])
295
torch.Size([1, 16, 13, 123, 5])
296
torch.Size([1, 16, 13, 123, 5])
297
torch.Size([1, 16, 13, 123, 5])
298
torch.Size([1, 16, 13, 123, 5])
299
torch.Size([1, 16, 13, 123, 5])
300
torch.Size([1, 16, 13, 123, 5])
301
torch.Size([1, 16, 13, 123, 5])
302
torch.Size([1, 16, 13, 123, 5])
303
torch.Size([1, 16, 13, 123, 5])
304
torch.Size([1, 16, 13, 123, 5])
305
torch.Size([1, 16, 13, 123, 5])
306
torch.Size([1, 16, 13, 123, 5])
307
torch.Size([1, 16, 13, 123, 5])
308
torch.Size([1, 16, 13, 123, 5])
309
torch.Size([1, 16, 13, 123, 5])
310
torch.Size([1, 16, 13, 123, 5])
311
torch.Size([1, 16, 13, 123, 5])
312
torch.Size([1, 16, 13, 123, 5])
313
torch.Size([1, 16, 13, 123, 5])
314
torch.Size([1, 16, 13, 123, 5])
315
torch.Size([1, 16, 13, 123, 5])
316
torch.Size([1, 16, 13, 123, 5])
317
torch.Size([1, 16, 13, 123, 5])
318
torch.Size([1, 16, 13, 123, 5])
319
torch.Size([1, 16, 13, 123, 5])
320
torch.Size([1, 16, 13, 123, 5])
321
torch.Size([1, 16, 13, 123, 5])
322
torch.Size([1, 16, 13, 123, 5])
323
torch.Size([1, 16, 13, 123, 5])
324
torch.Size([1, 16, 13, 123, 5])
325
torch.Size([1, 16, 13, 123, 5])
326
torch.Size([1, 16, 13, 123, 5])
327
torch.Size([1, 16, 13, 123, 5])
328
torch.Size([1, 16, 13, 123, 5])
329
torch.Size([1, 16, 13, 123, 5])
330
torch.Size([1, 16, 13, 123, 5])
331
torch.Size([1, 16, 13, 123, 5])
332
torch.Size([1, 16, 13, 123, 5])
333
torch.Size([1, 16, 13, 123, 5])
334
torch.Size([1, 16, 13, 123, 5])
335
torch.Size([1, 16, 13, 123, 5])
336
torch.Size([1, 16, 13, 123, 5])
337
torch.Size([1, 16, 13, 123, 5])
338
torch.Size([1, 16, 13, 123, 5])
339
torch.Size([1, 16, 13, 123, 5])
340
torch.Size([1, 16, 13, 123, 5])
341
torch.Size([1, 16, 13, 123, 5])
342
torch.Size([1, 16, 13, 123, 5])
343
torch.Size([1, 16, 13, 123, 5])
344
torch.Size([1, 16, 13, 123, 5])
345
torch.Size([1, 16, 13, 123, 5])
346
torch.Size([1, 16, 13, 123, 5])
347
torch.Size([1, 16, 13, 123, 5])
348
torch.Size([1, 16, 13, 123, 5])
349
torch.Size([1, 16, 13, 123, 5])
350
torch.Size([1, 16, 13, 123, 5])
351
torch.Size([1, 16, 13, 123, 5])
352
torch.Size([1, 16, 13, 123, 5])
353
torch.Size([1, 16, 13, 123, 5])
354
torch.Size([1, 16, 13, 123, 5])
355
torch.Size([1, 16, 13, 123, 5])
356
torch.Size([1, 16, 13, 123, 5])
357
torch.Size([1, 16, 13, 123, 5])
358
torch.Size([1, 16, 13, 123, 5])
359
torch.Size([1, 16, 13, 123, 5])
360
torch.Size([1, 16, 13, 123, 5])
361
torch.Size([1, 16, 13, 123, 5])
362
torch.Size([1, 16, 13, 123, 5])
363
torch.Size([1, 16, 13, 123, 5])
364
torch.Size([1, 16, 13, 123, 5])
365
torch.Size([1, 16, 13, 123, 5])
366
torch.Size([1, 16, 13, 123, 5])
367
torch.Size([1, 16, 13, 123, 5])
368
torch.Size([1, 16, 13, 123, 5])
369
torch.Size([1, 16, 13, 123, 5])
370
torch.Size([1, 16, 13, 123, 5])
371
torch.Size([1, 16, 13, 123, 5])
372
torch.Size([1, 16, 13, 123, 5])
373
torch.Size([1, 16, 13, 123, 5])
374
torch.Size([1, 16, 13, 123, 5])
375
torch.Size([1, 16, 13, 123, 5])
376
torch.Size([1, 16, 13, 123, 5])
377
torch.Size([1, 16, 13, 123, 5])
378
torch.Size([1, 16, 13, 123, 5])
379
torch.Size([1, 16, 13, 123, 5])
380
torch.Size([1, 16, 13, 123, 5])
381
torch.Size([1, 16, 13, 123, 5])
382
torch.Size([1, 16, 13, 123, 5])
383
torch.Size([1, 16, 13, 123, 5])
384
torch.Size([1, 16, 13, 123, 5])
385
torch.Size([1, 16, 13, 123, 5])
386
torch.Size([1, 16, 13, 123, 5])
387
torch.Size([1, 16, 13, 123, 5])
388
torch.Size([1, 16, 13, 123, 5])
389
torch.Size([1, 16, 13, 123, 5])
390
torch.Size([1, 16, 13, 123, 5])
391
torch.Size([1, 16, 13, 123, 5])
392
torch.Size([1, 16, 13, 123, 5])
393
torch.Size([1, 16, 13, 123, 5])
394
torch.Size([1, 16, 13, 123, 5])
395
torch.Size([1, 16, 13, 123, 5])
396
torch.Size([1, 16, 13, 123, 5])
397
torch.Size([1, 16, 13, 123, 5])
398
torch.Size([1, 16, 13, 123, 5])
399
torch.Size([1, 16, 13, 123, 5])
400
torch.Size([1, 16, 13, 123, 5])
401
torch.Size([1, 16, 13, 123, 5])
402
torch.Size([1, 16, 13, 123, 5])
403
torch.Size([1, 16, 13, 123, 5])
404
torch.Size([1, 16, 13, 123, 5])
405
torch.Size([1, 16, 13, 123, 5])
406
torch.Size([1, 16, 13, 123, 5])
407
torch.Size([1, 16, 13, 123, 5])
408
torch.Size([1, 16, 13, 123, 5])
409
torch.Size([1, 16, 13, 123, 5])
410
torch.Size([1, 16, 13, 123, 5])
411
torch.Size([1, 16, 13, 123, 5])
412
torch.Size([1, 16, 13, 123, 5])
413
torch.Size([1, 16, 13, 123, 5])
414
torch.Size([1, 16, 13, 123, 5])
415
torch.Size([1, 16, 13, 123, 5])
416
torch.Size([1, 16, 13, 123, 5])
417
torch.Size([1, 16, 13, 123, 5])
418
torch.Size([1, 16, 13, 123, 5])
419
torch.Size([1, 16, 13, 123, 5])
420
torch.Size([1, 16, 13, 123, 5])
421
torch.Size([1, 16, 13, 123, 5])
422
torch.Size([1, 16, 13, 123, 5])
423
torch.Size([1, 16, 13, 123, 5])
424
torch.Size([1, 16, 13, 123, 5])
425
torch.Size([1, 16, 13, 123, 5])
426
torch.Size([1, 16, 13, 123, 5])
427
torch.Size([1, 16, 13, 123, 5])
428
torch.Size([1, 16, 13, 123, 5])
429
torch.Size([1, 16, 13, 123, 5])
430
torch.Size([1, 16, 13, 123, 5])
431
torch.Size([1, 16, 13, 123, 5])
432
torch.Size([1, 16, 13, 123, 5])
433
torch.Size([1, 16, 13, 123, 5])
434
torch.Size([1, 16, 13, 123, 5])
435
torch.Size([1, 16, 13, 123, 5])
436
torch.Size([1, 16, 13, 123, 5])
437
torch.Size([1, 16, 13, 123, 5])
438
torch.Size([1, 16, 13, 123, 5])
439
torch.Size([1, 16, 13, 123, 5])
440
torch.Size([1, 16, 13, 123, 5])
441
torch.Size([1, 16, 13, 123, 5])
442
torch.Size([1, 16, 13, 123, 5])
443
torch.Size([1, 16, 13, 123, 5])
444
torch.Size([1, 16, 13, 123, 5])
445
torch.Size([1, 16, 13, 123, 5])
446
torch.Size([1, 16, 13, 123, 5])
447
torch.Size([1, 16, 13, 123, 5])
448
torch.Size([1, 16, 13, 123, 5])
449
torch.Size([1, 16, 13, 123, 5])
450
torch.Size([1, 16, 13, 123, 5])
451
torch.Size([1, 16, 13, 123, 5])
452
torch.Size([1, 16, 13, 123, 5])
453
torch.Size([1, 16, 13, 123, 5])
454
torch.Size([1, 16, 13, 123, 5])
455
torch.Size([1, 16, 13, 123, 5])
456
torch.Size([1, 16, 13, 123, 5])
457
torch.Size([1, 16, 13, 123, 5])
458
torch.Size([1, 16, 13, 123, 5])
459
torch.Size([1, 16, 13, 123, 5])
460
torch.Size([1, 16, 13, 123, 5])
461
torch.Size([1, 16, 13, 123, 5])
462
torch.Size([1, 16, 13, 123, 5])
463
torch.Size([1, 16, 13, 123, 5])
464
torch.Size([1, 16, 13, 123, 5])
465
torch.Size([1, 16, 13, 123, 5])
466
torch.Size([1, 16, 13, 123, 5])
467
torch.Size([1, 16, 13, 123, 5])
468
torch.Size([1, 16, 13, 123, 5])
469
torch.Size([1, 16, 13, 123, 5])
470
torch.Size([1, 16, 13, 123, 5])
471
torch.Size([1, 16, 13, 123, 5])
472
torch.Size([1, 16, 13, 123, 5])
473
torch.Size([1, 16, 13, 123, 5])
474
torch.Size([1, 16, 13, 123, 5])
475
torch.Size([1, 16, 13, 123, 5])
476
torch.Size([1, 16, 13, 123, 5])
477
torch.Size([1, 16, 13, 123, 5])
478
torch.Size([1, 16, 13, 123, 5])
479
torch.Size([1, 16, 13, 123, 5])
480
torch.Size([1, 16, 13, 123, 5])
481
torch.Size([1, 16, 13, 123, 5])
482
torch.Size([1, 16, 13, 123, 5])
483
torch.Size([1, 16, 13, 123, 5])
484
torch.Size([1, 16, 13, 123, 5])
485
torch.Size([1, 16, 13, 123, 5])
486
torch.Size([1, 16, 13, 123, 5])
487
torch.Size([1, 16, 13, 123, 5])
488
torch.Size([1, 16, 13, 123, 5])
489
torch.Size([1, 16, 13, 123, 5])
490
torch.Size([1, 16, 13, 123, 5])
491
torch.Size([1, 16, 13, 123, 5])
492
torch.Size([1, 16, 13, 123, 5])
493
torch.Size([1, 16, 13, 123, 5])
494
torch.Size([1, 16, 13, 123, 5])
495
torch.Size([1, 16, 13, 123, 5])
496
torch.Size([1, 16, 13, 123, 5])
497
torch.Size([1, 16, 13, 123, 5])
498
torch.Size([1, 16, 13, 123, 5])
499
torch.Size([1, 16, 13, 123, 5])
500
torch.Size([1, 16, 13, 123, 5])
501
torch.Size([1, 16, 13, 123, 5])
502
torch.Size([1, 16, 13, 123, 5])
503
torch.Size([1, 16, 13, 123, 5])
504
torch.Size([1, 16, 13, 123, 5])
505
torch.Size([1, 16, 13, 123, 5])
506
torch.Size([1, 16, 13, 123, 5])
507
torch.Size([1, 16, 13, 123, 5])
508
torch.Size([1, 16, 13, 123, 5])
509
torch.Size([1, 16, 13, 123, 5])
510
torch.Size([1, 16, 13, 123, 5])
511
torch.Size([1, 16, 13, 123, 5])
512
torch.Size([1, 16, 13, 123, 5])
513
torch.Size([1, 16, 13, 123, 5])
514
torch.Size([1, 16, 13, 123, 5])
515
torch.Size([1, 16, 13, 123, 5])
516
torch.Size([1, 16, 13, 123, 5])
517
torch.Size([1, 16, 13, 123, 5])
518
torch.Size([1, 16, 13, 123, 5])
519
torch.Size([1, 16, 13, 123, 5])
520
torch.Size([1, 16, 13, 123, 5])
521
torch.Size([1, 16, 13, 123, 5])
522
torch.Size([1, 16, 13, 123, 5])
523
torch.Size([1, 16, 13, 123, 5])
524
torch.Size([1, 16, 13, 123, 5])
525
torch.Size([1, 16, 13, 123, 5])
526
torch.Size([1, 16, 13, 123, 5])
527
torch.Size([1, 16, 13, 123, 5])
528
torch.Size([1, 16, 13, 123, 5])
529
torch.Size([1, 16, 13, 123, 5])
530
In epoch 3, train loss: 0.248 
/data/home/ankitkumar15/CrypTen/crypten/__init__.py:65: RuntimeWarning: CrypTen is already initialized.
  warnings.warn("CrypTen is already initialized.", RuntimeWarning)
/data/home/ankitkumar15/CrypTen/crypten/nn/onnx_converter.py:184: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:199.)
  param = torch.from_numpy(numpy_helper.to_array(node))
torch.Size([1, 16, 13, 123, 5])
431
torch.Size([1, 16, 13, 123, 5])
432
torch.Size([1, 16, 13, 123, 5])
433
torch.Size([1, 16, 13, 123, 5])
434
torch.Size([1, 16, 13, 123, 5])
435
torch.Size([1, 16, 13, 123, 5])
436
torch.Size([1, 16, 13, 123, 5])
437
torch.Size([1, 16, 13, 123, 5])
438
torch.Size([1, 16, 13, 123, 5])
439
torch.Size([1, 16, 13, 123, 5])
440
torch.Size([1, 16, 13, 123, 5])
441
torch.Size([1, 16, 13, 123, 5])
442
torch.Size([1, 16, 13, 123, 5])
443
torch.Size([1, 16, 13, 123, 5])
444
torch.Size([1, 16, 13, 123, 5])
445
torch.Size([1, 16, 13, 123, 5])
446
torch.Size([1, 16, 13, 123, 5])
447
torch.Size([1, 16, 13, 123, 5])
448
torch.Size([1, 16, 13, 123, 5])
449
torch.Size([1, 16, 13, 123, 5])
450
torch.Size([1, 16, 13, 123, 5])
451
torch.Size([1, 16, 13, 123, 5])
452
torch.Size([1, 16, 13, 123, 5])
453
torch.Size([1, 16, 13, 123, 5])
454
torch.Size([1, 16, 13, 123, 5])
455
torch.Size([1, 16, 13, 123, 5])
456
torch.Size([1, 16, 13, 123, 5])
457
torch.Size([1, 16, 13, 123, 5])
458
torch.Size([1, 16, 13, 123, 5])
459
torch.Size([1, 16, 13, 123, 5])
460
torch.Size([1, 16, 13, 123, 5])
461
torch.Size([1, 16, 13, 123, 5])
462
torch.Size([1, 16, 13, 123, 5])
463
torch.Size([1, 16, 13, 123, 5])
464
torch.Size([1, 16, 13, 123, 5])
465
torch.Size([1, 16, 13, 123, 5])
466
torch.Size([1, 16, 13, 123, 5])
467
torch.Size([1, 16, 13, 123, 5])
468
torch.Size([1, 16, 13, 123, 5])
469
torch.Size([1, 16, 13, 123, 5])
470
torch.Size([1, 16, 13, 123, 5])
471
torch.Size([1, 16, 13, 123, 5])
472
torch.Size([1, 16, 13, 123, 5])
473
torch.Size([1, 16, 13, 123, 5])
474
torch.Size([1, 16, 13, 123, 5])
475
torch.Size([1, 16, 13, 123, 5])
476
torch.Size([1, 16, 13, 123, 5])
477
torch.Size([1, 16, 13, 123, 5])
478
torch.Size([1, 16, 13, 123, 5])
479
torch.Size([1, 16, 13, 123, 5])
480
torch.Size([1, 16, 13, 123, 5])
481
torch.Size([1, 16, 13, 123, 5])
482
torch.Size([1, 16, 13, 123, 5])
483
torch.Size([1, 16, 13, 123, 5])
484
torch.Size([1, 16, 13, 123, 5])
485
torch.Size([1, 16, 13, 123, 5])
486
torch.Size([1, 16, 13, 123, 5])
487
torch.Size([1, 16, 13, 123, 5])
488
torch.Size([1, 16, 13, 123, 5])
489
torch.Size([1, 16, 13, 123, 5])
490
torch.Size([1, 16, 13, 123, 5])
491
torch.Size([1, 16, 13, 123, 5])
492
torch.Size([1, 16, 13, 123, 5])
493
torch.Size([1, 16, 13, 123, 5])
494
torch.Size([1, 16, 13, 123, 5])
495
torch.Size([1, 16, 13, 123, 5])
496
torch.Size([1, 16, 13, 123, 5])
497
torch.Size([1, 16, 13, 123, 5])
498
torch.Size([1, 16, 13, 123, 5])
499
torch.Size([1, 16, 13, 123, 5])
500
torch.Size([1, 16, 13, 123, 5])
501
torch.Size([1, 16, 13, 123, 5])
502
torch.Size([1, 16, 13, 123, 5])
503
torch.Size([1, 16, 13, 123, 5])
504
torch.Size([1, 16, 13, 123, 5])
505
torch.Size([1, 16, 13, 123, 5])
506
torch.Size([1, 16, 13, 123, 5])
507
torch.Size([1, 16, 13, 123, 5])
508
torch.Size([1, 16, 13, 123, 5])
509
torch.Size([1, 16, 13, 123, 5])
510
torch.Size([1, 16, 13, 123, 5])
511
torch.Size([1, 16, 13, 123, 5])
512
torch.Size([1, 16, 13, 123, 5])
513
torch.Size([1, 16, 13, 123, 5])
514
torch.Size([1, 16, 13, 123, 5])
515
torch.Size([1, 16, 13, 123, 5])
516
torch.Size([1, 16, 13, 123, 5])
517
torch.Size([1, 16, 13, 123, 5])
518
torch.Size([1, 16, 13, 123, 5])
519
torch.Size([1, 16, 13, 123, 5])
520
torch.Size([1, 16, 13, 123, 5])
521
torch.Size([1, 16, 13, 123, 5])
522
torch.Size([1, 16, 13, 123, 5])
523
torch.Size([1, 16, 13, 123, 5])
524
torch.Size([1, 16, 13, 123, 5])
525
torch.Size([1, 16, 13, 123, 5])
526
torch.Size([1, 16, 13, 123, 5])
527
torch.Size([1, 16, 13, 123, 5])
528
torch.Size([1, 16, 13, 123, 5])
529
torch.Size([1, 16, 13, 123, 5])
530
In epoch 3, train loss: 0.248 
/data/home/ankitkumar15/CrypTen/crypten/__init__.py:65: RuntimeWarning: CrypTen is already initialized.
  warnings.warn("CrypTen is already initialized.", RuntimeWarning)
/data/home/ankitkumar15/CrypTen/crypten/nn/onnx_converter.py:184: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:199.)
  param = torch.from_numpy(numpy_helper.to_array(node))
